// Autogenerated by click_complete_fig
const completionSpec: Fig.Spec = {
  name: "hatch",
  description: "Hatch is a modern, extensible Python project manager",
  options: [
    {
      name: ["--env", "-e"],
      description: "The name of the environment to use [env var: `HATCH_ENV`]",
      args: {
        name: "text",
      },
    },
    {
      name: ["--project", "-p"],
      description:
        "The name of the project to work on [env var: `HATCH_PROJECT`]",
      args: {
        name: "text",
      },
    },
    {
      name: "--color",
      description:
        "Whether or not to display colored output (default is auto-detection) [env vars: `FORCE_COLOR`/`NO_COLOR`]",
      exclusiveOn: ["--no-color"],
    },
    {
      name: "--no-color",
      description:
        "Whether or not to display colored output (default is auto-detection) [env vars: `FORCE_COLOR`/`NO_COLOR`]",
      exclusiveOn: ["--color"],
    },
    {
      name: "--interactive",
      description:
        "Whether or not to allow features like prompts and progress bars (default is auto-detection) [env var: `HATCH_INTERACTIVE`]",
      exclusiveOn: ["--no-interactive"],
    },
    {
      name: "--no-interactive",
      description:
        "Whether or not to allow features like prompts and progress bars (default is auto-detection) [env var: `HATCH_INTERACTIVE`]",
      exclusiveOn: ["--interactive"],
    },
    {
      name: ["--verbose", "-v"],
      description:
        "Increase verbosity (can be used additively) [env var: `HATCH_VERBOSE`]",
      args: {
        name: "integer range",
      },
    },
    {
      name: ["--quiet", "-q"],
      description:
        "Decrease verbosity (can be used additively) [env var: `HATCH_QUIET`]",
      args: {
        name: "integer range",
      },
    },
    {
      name: "--data-dir",
      description:
        "The path to a custom directory used to persist data [env var: `HATCH_DATA_DIR`]",
      args: {
        name: "text",
      },
    },
    {
      name: "--cache-dir",
      description:
        "The path to a custom directory used to cache data [env var: `HATCH_CACHE_DIR`]",
      args: {
        name: "text",
      },
    },
    {
      name: "--config",
      description:
        "The path to a custom config file to use [env var: `HATCH_CONFIG`]",
      args: {
        name: "text",
      },
    },
    {
      name: "--version",
      description: "Show the version and exit",
    },
    {
      name: "--help",
      description: "Show this message and exit",
    },
  ],
  subcommands: [
    {
      name: "build",
      description: "Build a project",
      options: [
        {
          name: ["--target", "-t"],
          description:
            "The target to build, overriding project defaults. This may be selected multiple times e.g. `-t sdist -t wheel`",
          isRepeatable: true,
          args: {
            name: "text",
          },
        },
        {
          name: "--hooks-only",
          description:
            "Whether or not to only execute build hooks [env var: `HATCH_BUILD_HOOKS_ONLY`]",
        },
        {
          name: "--no-hooks",
          description:
            "Whether or not to disable build hooks [env var: `HATCH_BUILD_NO_HOOKS`]",
        },
        {
          name: "--ext",
          description:
            "Whether or not to only execute build hooks for distributing binary Python packages, such as compiling extensions. Equivalent to `--hooks-only -t wheel`",
        },
        {
          name: ["--clean", "-c"],
          description:
            "Whether or not existing artifacts should first be removed [env var: `HATCH_BUILD_CLEAN`]",
        },
        {
          name: "--clean-hooks-after",
          description:
            "Whether or not build hook artifacts should be removed after each build [env var: `HATCH_BUILD_CLEAN_HOOKS_AFTER`]",
        },
        {
          name: "--clean-only",
        },
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: {
        name: "text",
      },
    },
    {
      name: "clean",
      description: "Remove build artifacts",
      options: [
        {
          name: ["--target", "-t"],
          description:
            "The target with which to remove artifacts, overriding project defaults. This may be selected multiple times e.g. `-t sdist -t wheel`",
          isRepeatable: true,
          args: {
            name: "text",
          },
        },
        {
          name: "--hooks-only",
          description:
            "Whether or not to only remove artifacts from build hooks [env var: `HATCH_BUILD_HOOKS_ONLY`]",
        },
        {
          name: "--no-hooks",
          description:
            "Whether or not to ignore artifacts from build hooks [env var: `HATCH_BUILD_NO_HOOKS`]",
        },
        {
          name: "--ext",
          description:
            "Whether or not to only remove artifacts from build hooks for distributing binary Python packages, such as compiled extensions. Equivalent to `--hooks-only -t wheel`",
        },
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: {
        name: "text",
      },
    },
    {
      name: "config",
      description: "Manage the config file",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      subcommands: [
        {
          name: "explore",
          description: "Open the config location in your file manager",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "find",
          description: "Show the location of the config file",
          options: [
            {
              name: ["--copy", "-c"],
              description: "Copy the path to the config file to the clipboard",
            },
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "restore",
          description: "Restore the config file to default settings",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "set",
          description:
            "\n    Assign values to config file entries. If the value is omitted,\n    you will be prompted, with the input hidden if it is sensitive.\n",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: [
            {
              name: "text",
            },
            {
              name: "text",
            },
          ],
        },
        {
          name: "show",
          description: "Show the contents of the config file",
          options: [
            {
              name: ["--all", "-a"],
              description: "Do not scrub secret fields",
            },
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "update",
          description: "Update the config file with any new fields",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
      ],
    },
    {
      name: "dep",
      description: "Manage environment dependencies",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      subcommands: [
        {
          name: "hash",
          description: "Output a hash of the currently defined dependencies",
          options: [
            {
              name: ["--project-only", "-p"],
              description: "Whether or not to exclude environment dependencies",
            },
            {
              name: ["--env-only", "-e"],
              description: "Whether or not to exclude project dependencies",
            },
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "show",
          description: "Display dependencies in various formats",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          subcommands: [
            {
              name: "requirements",
              description: "Enumerate dependencies as a list of requirements",
              options: [
                {
                  name: ["--project-only", "-p"],
                  description:
                    "Whether or not to exclude environment dependencies",
                },
                {
                  name: ["--env-only", "-e"],
                  description: "Whether or not to exclude project dependencies",
                },
                {
                  name: ["--feature", "-f"],
                  description:
                    "Whether or not to only show the dependencies of the specified features",
                  isRepeatable: true,
                  args: {
                    name: "text",
                  },
                },
                {
                  name: "--all",
                  description:
                    "Whether or not to include the dependencies of all features",
                },
                {
                  name: "--help",
                  description: "Show this message and exit",
                },
              ],
            },
            {
              name: "table",
              description: "Enumerate dependencies in a tabular format",
              options: [
                {
                  name: ["--project-only", "-p"],
                  description:
                    "Whether or not to exclude environment dependencies",
                },
                {
                  name: ["--env-only", "-e"],
                  description: "Whether or not to exclude project dependencies",
                },
                {
                  name: ["--lines", "-l"],
                  description:
                    "Whether or not to show lines between table rows",
                },
                {
                  name: "--ascii",
                  description: "Whether or not to only use ASCII characters",
                },
                {
                  name: "--help",
                  description: "Show this message and exit",
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "env",
      description: "Manage project environments",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      subcommands: [
        {
          name: "create",
          description: "Create environments",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
          },
        },
        {
          name: "find",
          description: "Locate environments",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
          },
        },
        {
          name: "prune",
          description: "Remove all environments",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
        },
        {
          name: "remove",
          description: "Remove environments",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
          },
        },
        {
          name: "run",
          description:
            '\n    Run commands within project environments.\n\n    The `-e`/`--env` option overrides the equivalent [root option](#hatch) and the `HATCH_ENV` environment variable.\n\n    If environments provide matrices, then you may use the `-i`/`--include` and `-x`/`--exclude` options to\n    select or exclude certain variables, optionally followed by specific comma-separated values.\n    For example, if you have the following configuration:\n\n    === ":octicons-file-code-16: pyproject.toml"\n\n        \b\n        ```toml\n        [[tool.hatch.envs.test.matrix]]\n        python = ["3.9", "3.10"]\n        version = ["42", "3.14", "9000"]\n        ```\n\n    === ":octicons-file-code-16: hatch.toml"\n\n        \b\n        ```toml\n        [[envs.test.matrix]]\n        python = ["3.9", "3.10"]\n        version = ["42", "3.14", "9000"]\n        ```\n\n    then running:\n\n    \b\n    ```\n    hatch env run -i py=3.10 -x version=9000 test:pytest\n    ```\n\n    would execute `pytest` in the environments `test.py3.10-42` and `test.py3.10-3.14`.\n    Note that `py` may be used as an alias for `python`.\n',
          options: [
            {
              name: ["--env", "-e"],
              description: "The environments to target",
              isRepeatable: true,
              args: {
                name: "text",
              },
            },
            {
              name: ["--include", "-i"],
              description: "The matrix variables to include",
              isRepeatable: true,
              args: {
                name: "text",
              },
            },
            {
              name: ["--exclude", "-x"],
              description: "The matrix variables to exclude",
              isRepeatable: true,
              args: {
                name: "text",
              },
            },
            {
              name: ["--filter", "-f"],
              description: "The JSON data used to select environments",
              args: {
                name: "text",
              },
            },
            {
              name: "--force-continue",
              description:
                "Run every command and if there were any errors exit with the first code",
            },
            {
              name: "--ignore-compat",
              description:
                "Ignore incompatibility when selecting specific environments",
            },
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
            isVariadic: true,
          },
        },
        {
          name: "show",
          description: "Show the available environments",
          options: [
            {
              name: "--ascii",
              description: "Whether or not to only use ASCII characters",
            },
            {
              name: "--json",
              description: "Whether or not to output in JSON format",
            },
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
            isVariadic: true,
          },
        },
      ],
    },
    {
      name: "new",
      description: "Create or initialize a project",
      options: [
        {
          name: ["--interactive", "-i"],
          description: "Interactively choose details about the project",
        },
        {
          name: "--cli",
          description: "Give the project a command line interface",
        },
        {
          name: "--init",
          description: "Initialize an existing project",
        },
        {
          name: "-so",
          isRepeatable: true,
          args: {
            name: "text",
          },
        },
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: [
        {
          name: "text",
        },
        {
          name: "text",
        },
      ],
    },
    {
      name: "project",
      description: "View project information",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      subcommands: [
        {
          name: "metadata",
          description:
            "\n    Display project metadata.\n\n    If you want to view the raw readme file without rendering, you can use a JSON parser\n    like [jq](https://github.com/stedolan/jq):\n\n    \b\n    ```\n    hatch project metadata | jq -r .readme\n    ```\n",
          options: [
            {
              name: "--help",
              description: "Show this message and exit",
            },
          ],
          args: {
            name: "text",
          },
        },
      ],
    },
    {
      name: "publish",
      description: "Publish build artifacts",
      options: [
        {
          name: ["--repo", "-r"],
          description:
            "The repository with which to publish artifacts [env var: `HATCH_INDEX_REPO`]",
          args: {
            name: "text",
          },
        },
        {
          name: ["--user", "-u"],
          description:
            "The user with which to authenticate [env var: `HATCH_INDEX_USER`]",
          args: {
            name: "text",
          },
        },
        {
          name: ["--auth", "-a"],
          description:
            "The credentials to use for authentication [env var: `HATCH_INDEX_AUTH`]",
          args: {
            name: "text",
          },
        },
        {
          name: "--ca-cert",
          description:
            "The path to a CA bundle [env var: `HATCH_INDEX_CA_CERT`]",
          args: {
            name: "text",
          },
        },
        {
          name: "--client-cert",
          description:
            "The path to a client certificate, optionally containing the private key [env var: `HATCH_INDEX_CLIENT_CERT`]",
          args: {
            name: "text",
          },
        },
        {
          name: "--client-key",
          description:
            "The path to the client certificate's private key [env var: `HATCH_INDEX_CLIENT_KEY`]",
          args: {
            name: "text",
          },
        },
        {
          name: ["--no-prompt", "-n"],
          description: "Disable prompts, such as for missing required fields",
        },
        {
          name: "--initialize-auth",
          description:
            "Save first-time authentication information even if nothing was published",
        },
        {
          name: ["--publisher", "-p"],
          description:
            "The publisher plugin to use (default is `index`) [env var: `HATCH_PUBLISHER`]",
          args: {
            name: "text",
          },
        },
        {
          name: ["--option", "-o"],
          description:
            "Options to pass to the publisher plugin. This may be selected multiple times e.g. `-o foo=bar -o baz=23` [env var: `HATCH_PUBLISHER_OPTIONS`]",
          isRepeatable: true,
          args: {
            name: "text",
          },
        },
        {
          name: ["--yes", "-y"],
          description: "Confirm without prompting when the plugin is disabled",
        },
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: {
        name: "text",
        isVariadic: true,
      },
    },
    {
      name: "run",
      description:
        '\n    Run commands within project environments.\n    This is a convenience wrapper around the [`env run`](#hatch-env-run) command.\n\n    If the first argument contains a colon, then the preceding component will be\n    interpreted as the name of the environment to target, overriding the `-e`/`--env`\n    [root option](#hatch) and the `HATCH_ENV` environment variable.\n\n    If the environment provides matrices, then you may also provide leading arguments\n    starting with a `+` or `-` to select or exclude certain variables, optionally\n    followed by specific comma-separated values. For example, if you have the\n    following configuration:\n\n    === ":octicons-file-code-16: pyproject.toml"\n\n        \b\n        ```toml\n        [[tool.hatch.envs.test.matrix]]\n        python = ["3.9", "3.10"]\n        version = ["42", "3.14", "9000"]\n        ```\n\n    === ":octicons-file-code-16: hatch.toml"\n\n        \b\n        ```toml\n        [[envs.test.matrix]]\n        python = ["3.9", "3.10"]\n        version = ["42", "3.14", "9000"]\n        ```\n\n    then running:\n\n    \b\n    ```\n    hatch run +py=3.10 -version=9000 test:pytest\n    ```\n\n    would execute `pytest` in the environments `test.py3.10-42` and `test.py3.10-3.14`.\n    Note that `py` may be used as an alias for `python`.\n',
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: {
        name: "text",
        isVariadic: true,
      },
    },
    {
      name: "shell",
      description: "Enter a shell within a project's environment",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: [
        {
          name: "text",
        },
        {
          name: "text",
        },
        {
          name: "text",
          isVariadic: true,
        },
      ],
    },
    {
      name: "status",
      description: "Show information about the current environment",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
    },
    {
      name: "version",
      description: "View or set a project's version",
      options: [
        {
          name: "--help",
          description: "Show this message and exit",
        },
      ],
      args: {
        name: "text",
      },
    },
  ],
};

export default completionSpec;
