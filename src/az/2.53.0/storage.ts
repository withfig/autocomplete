const completion: Fig.Spec = {
  name: "storage",
  description: "Manage Azure Cloud Storage resources",
  subcommands: [
    {
      name: "account",
      description: "Manage storage accounts",
      subcommands: [
        {
          name: "check-name",
          description:
            "Check that the storage account name is valid and is not already in use",
          options: [
            {
              name: ["--name", "-n"],
              description:
                "The name of the storage account within the specified resource group",
              args: { name: "name" },
              isRequired: true,
            },
          ],
        },
        {
          name: "create",
          description: "Create a storage account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
              isRequired: true,
            },
            {
              name: "--access-tier",
              description:
                'Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The "Premium" access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type',
              args: {
                name: "access-tier",
                suggestions: ["Cool", "Hot", "Premium"],
              },
            },
            {
              name: "--account-type",
              description:
                "Specify the Active Directory account type for Azure Storage",
              args: { name: "account-type" },
            },
            {
              name: "--action",
              description:
                "The action of virtual network rule. Possible value is Allow",
              args: { name: "action" },
            },
            {
              name: ["--allow-protected-append-writes", "--allow-append", "-w"],
              description:
                "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted",
              args: {
                name: "allow-protected-append-writes",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--allow-blob-public-access",
              description:
                "Allow or disallow public access to all blobs or containers in the storage account. If not specified, the default value is currently true and will be changed to false for new accounts to follow best security practices. When true, containers in the account may be configured for public access. Note that setting this property to true does not enable anonymous access to any data in the account. The additional step of configuring the public access setting for a container is required to enable anonymous access",
              args: {
                name: "allow-blob-public-access",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--allow-cross-tenant-replication", "-r"],
              description:
                "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. If not specified, the default value is currently true and will be changed to false for new accounts to follow best security practices",
              args: {
                name: "allow-cross-tenant-replication",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--allow-shared-key-access", "-k"],
              description:
                "Indicate whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true",
              args: {
                name: "allow-shared-key-access",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--assign-identity",
              description:
                "Generate and assign a new Storage Account Identity for this storage account for use with key management services like Azure KeyVault",
            },
            {
              name: "--azure-storage-sid",
              description:
                "Specify the security identifier (SID) for Azure Storage. Required when --enable-files-adds is set to True",
              args: { name: "azure-storage-sid" },
            },
            {
              name: "--bypass",
              description: "Bypass traffic for space-separated uses",
              args: {
                name: "bypass",
                suggestions: ["AzureServices", "Logging", "Metrics", "None"],
              },
            },
            {
              name: "--custom-domain",
              description:
                "User domain assigned to the storage account. Name is the CNAME source",
              args: { name: "custom-domain" },
            },
            {
              name: "--default-action",
              description: "Default action to apply when no rule matches",
              args: { name: "default-action", suggestions: ["Allow", "Deny"] },
            },
            {
              name: ["--default-share-permission", "-d"],
              description:
                "Default share permission for users using Kerberos authentication if RBAC role is not assigned",
              args: {
                name: "default-share-permission",
                suggestions: [
                  "None",
                  "StorageFileDataSmbShareContributor",
                  "StorageFileDataSmbShareElevatedContributor",
                  "StorageFileDataSmbShareReader",
                ],
              },
            },
            {
              name: ["--dns-endpoint-type", "--endpoint"],
              description:
                "Allow you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier",
              args: {
                name: "dns-endpoint-type",
                suggestions: ["AzureDnsZone", "Standard"],
              },
            },
            {
              name: "--domain-guid",
              description:
                "Specify the domain GUID. Required when --enable-files-adds is set to True",
              args: { name: "domain-guid" },
            },
            {
              name: "--domain-name",
              description:
                "Specify the primary domain that the AD DNS server is authoritative for. Required when --enable-files-adds is set to True",
              args: { name: "domain-name" },
            },
            {
              name: "--domain-sid",
              description:
                "Specify the security identifier (SID). Required when --enable-files-adds is set to True",
              args: { name: "domain-sid" },
            },
            {
              name: "--edge-zone",
              description: "The name of edge zone",
              args: { name: "edge-zone" },
            },
            {
              name: "--enable-alw",
              description:
                "The account level immutability property. The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default",
              args: { name: "enable-alw", suggestions: ["false", "true"] },
            },
            {
              name: "--enable-files-aadds",
              description:
                "Enable Azure Active Directory Domain Services authentication for Azure Files",
              args: {
                name: "enable-files-aadds",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-files-aadkerb",
              description:
                "Enable Azure Files Active Directory Domain Service Kerberos Authentication for the storage account",
              args: {
                name: "enable-files-aadkerb",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-files-adds",
              description:
                "Enable Azure Files Active Directory Domain Service Authentication for storage account. When --enable-files-adds is set to true, Azure Active Directory Properties arguments must be provided",
              args: {
                name: "enable-files-adds",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--enable-hierarchical-namespace", "--hns"],
              description:
                "Allow the blob service to exhibit filesystem semantics. This property can be enabled only when storage account kind is StorageV2",
              args: {
                name: "enable-hierarchical-namespace",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-large-file-share",
              description:
                "Enable the capability to support large file shares with more than 5 TiB capacity for storage account.Once the property is enabled, the feature cannot be disabled. Currently only supported for LRS and ZRS replication types, hence account conversions to geo-redundant accounts would not be possible. For more information, please refer to https://go.microsoft.com/fwlink/?linkid=2086047",
              args: { name: "enable-large-file-share" },
            },
            {
              name: "--enable-local-user",
              description: "Enable local user features",
              args: {
                name: "enable-local-user",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-nfs-v3",
              description: "NFS 3.0 protocol support enabled if sets to true",
              args: { name: "enable-nfs-v3", suggestions: ["false", "true"] },
            },
            {
              name: "--enable-sftp",
              description: "Enable Secure File Transfer Protocol",
              args: { name: "enable-sftp", suggestions: ["false", "true"] },
            },
            {
              name: "--encryption-key-name",
              description: "The name of the KeyVault key",
              args: { name: "encryption-key-name" },
            },
            {
              name: "--encryption-key-source",
              description: "The default encryption key source",
              args: {
                name: "encryption-key-source",
                suggestions: ["Microsoft.Keyvault", "Microsoft.Storage"],
              },
            },
            {
              name: ["--encryption-key-type-for-queue", "-q"],
              description:
                'Set the encryption key type for Queue service. "Account": Queue will be encrypted with account-scoped encryption key. "Service": Queue will always be encrypted with service-scoped keys. Currently the default encryption key type is "Service"',
              args: {
                name: "encryption-key-type-for-queue",
                suggestions: ["Account", "Service"],
              },
            },
            {
              name: ["--encryption-key-type-for-table", "-t"],
              description:
                'Set the encryption key type for Table service. "Account": Table will be encrypted with account-scoped encryption key. "Service": Table will always be encrypted with service-scoped keys. Currently the default encryption key type is "Service"',
              args: {
                name: "encryption-key-type-for-table",
                suggestions: ["Account", "Service"],
              },
            },
            {
              name: "--encryption-key-vault",
              description: "The Uri of the KeyVault",
              args: { name: "encryption-key-vault" },
            },
            {
              name: "--encryption-key-version",
              description:
                'The version of the KeyVault key to use, which will opt out of implicit key rotation. Please use "" to opt in key auto-rotation again',
              args: { name: "encryption-key-version" },
            },
            {
              name: "--encryption-services",
              description: "Specifies which service(s) to encrypt",
              args: {
                name: "encryption-services",
                suggestions: ["blob", "file", "queue", "table"],
              },
            },
            {
              name: "--forest-name",
              description:
                "Specify the Active Directory forest to get. Required when --enable-files-adds is set to True",
              args: { name: "forest-name" },
            },
            {
              name: "--https-only",
              description:
                "Allow https traffic only to storage service if set to true. The default value is true",
              args: { name: "https-only", suggestions: ["false", "true"] },
            },
            {
              name: "--identity-type",
              description: "The identity type",
              args: {
                name: "identity-type",
                suggestions: [
                  "None",
                  "SystemAssigned",
                  "SystemAssigned",
                  "UserAssigned",
                  "UserAssigned",
                ],
              },
            },
            {
              name: ["--immutability-period-in-days", "--immutability-period"],
              description:
                "The immutability period for the blobs in the container since the policy creation, in days",
              args: { name: "immutability-period-in-days" },
            },
            {
              name: "--immutability-state",
              description:
                "Defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allow-protected-append-write property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted",
              args: {
                name: "immutability-state",
                suggestions: ["Disabled", "Locked", "Unlocked"],
              },
            },
            {
              name: ["--key-expiration-period-in-days", "--key-exp-days"],
              description:
                "Expiration period in days of the Key Policy assigned to the storage account",
              args: { name: "key-expiration-period-in-days" },
            },
            {
              name: ["--key-vault-federated-client-id", "-f"],
              description:
                "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account",
              args: { name: "key-vault-federated-client-id" },
            },
            {
              name: ["--key-vault-user-identity-id", "-u"],
              description:
                "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account",
              args: { name: "key-vault-user-identity-id" },
            },
            {
              name: "--kind",
              description: "Indicate the type of storage account",
              args: {
                name: "kind",
                suggestions: [
                  "BlobStorage",
                  "BlockBlobStorage",
                  "FileStorage",
                  "Storage",
                  "StorageV2",
                ],
              },
            },
            {
              name: ["--location", "-l"],
              description:
                "Location. Values from: az account list-locations. You can configure the default location using az configure --defaults location=<location>",
              args: { name: "location" },
            },
            {
              name: "--min-tls-version",
              description:
                "The minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property",
              args: {
                name: "min-tls-version",
                suggestions: ["TLS1_0", "TLS1_1", "TLS1_2"],
              },
            },
            {
              name: "--net-bios-domain-name",
              description:
                "Specify the NetBIOS domain name. Required when --enable-files-adds is set to True",
              args: { name: "net-bios-domain-name" },
            },
            {
              name: "--public-network-access",
              description:
                "Enable or disable public network access to the storage account. Possible values include: Enabled or Disabled",
              args: {
                name: "public-network-access",
                suggestions: ["Disabled", "Enabled"],
              },
            },
            {
              name: "--publish-internet-endpoints",
              description:
                "A boolean flag which indicates whether internet routing storage endpoints are to be published",
              args: {
                name: "publish-internet-endpoints",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--publish-microsoft-endpoints",
              description:
                "A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              args: {
                name: "publish-microsoft-endpoints",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--require-infrastructure-encryption", "-i"],
              description:
                "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest",
              args: {
                name: "require-infrastructure-encryption",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--routing-choice",
              description:
                "Routing Choice defines the kind of network routing opted by the user",
              args: {
                name: "routing-choice",
                suggestions: ["InternetRouting", "MicrosoftRouting"],
              },
            },
            {
              name: "--sam-account-name",
              description:
                "Specify the Active Directory SAMAccountName for Azure Storage",
              args: { name: "sam-account-name" },
            },
            {
              name: ["--sas-expiration-period", "--sas-exp"],
              description:
                "Expiration period of the SAS Policy assigned to the storage account, DD.HH:MM:SS",
              args: { name: "sas-expiration-period" },
            },
            {
              name: "--sku",
              description: "The storage account SKU",
              args: {
                name: "sku",
                suggestions: [
                  "Premium_LRS",
                  "Premium_ZRS",
                  "Standard_GRS",
                  "Standard_GZRS",
                  "Standard_LRS",
                  "Standard_RAGRS",
                  "Standard_RAGZRS",
                  "Standard_ZRS",
                ],
              },
            },
            {
              name: "--subnet",
              description:
                "Name or ID of subnet. If name is supplied, --vnet-name must be supplied",
              args: { name: "subnet" },
            },
            {
              name: "--tags",
              description:
                'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags',
              args: { name: "tags" },
            },
            {
              name: "--user-identity-id",
              description:
                "The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here",
              args: { name: "user-identity-id" },
            },
            {
              name: "--vnet-name",
              description: "Name of a virtual network",
              args: { name: "vnet-name" },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete a storage account",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: ["--yes", "-y"],
              description: "Do not prompt for confirmation",
            },
          ],
        },
        {
          name: "failover",
          description:
            "Failover request can be triggered for a storage account in case of availability issues",
          options: [
            {
              name: ["--failover-type", "--type"],
              description:
                "The parameter is set to 'Planned' to indicate whether a Planned failover is requested",
              args: { name: "failover-type" },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: "--no-wait",
              description:
                "Do not wait for the long-running operation to finish",
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: ["--yes", "-y"],
              description: "Do not prompt for confirmation",
            },
          ],
        },
        {
          name: "generate-sas",
          description:
            "Generate a shared access signature for the storage account",
          options: [
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid",
              args: { name: "expiry" },
              isRequired: true,
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (a)dd (c)reate (d)elete (f)ilter_by_tags (i)set_immutability_policy (l)ist (p)rocess (r)ead (t)ag (u)pdate (w)rite (x)delete_previous_version (y)permanent_delete. Can be combined",
              args: { name: "permissions" },
              isRequired: true,
            },
            {
              name: "--resource-types",
              description:
                "The resource types the SAS is applicable for. Allowed values: (s)ervice (c)ontainer (o)bject. Can be combined",
              args: { name: "resource-types" },
              isRequired: true,
            },
            {
              name: "--services",
              description:
                "The storage services the SAS is applicable for. Allowed values: (b)lob (f)ile (q)ueue (t)able. Can be combined",
              args: { name: "services" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Must be used in conjunction with either storage account key or a SAS token. Environment Variable: AZURE_STORAGE_ACCOUNT",
              args: { name: "account-name" },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--encryption-scope",
              description:
                "A predefined encryption scope used to encrypt the data on the service",
              args: { name: "encryption-scope" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Defaults to the time of the request",
              args: { name: "start" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "list",
          description: "List storage accounts",
          options: [
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
          ],
        },
        {
          name: "revoke-delegation-keys",
          description: "Revoke all user delegation keys for a storage account",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "show",
          description: "Show storage account properties",
          options: [
            {
              name: "--expand",
              description:
                'May be used to expand the properties within account\'s properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. Known values are: "geoReplicationStats" and "blobRestoreStatus". Default value is None',
              args: { name: "expand" },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "show-connection-string",
          description: "Get the connection string for a storage account",
          options: [
            {
              name: "--blob-endpoint",
              description: "Custom endpoint for blobs",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--file-endpoint",
              description: "Custom endpoint for files",
              args: { name: "file-endpoint" },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--key",
              description: "The key to use",
              args: {
                name: "key",
                suggestions: ["key1", "key2", "primary", "secondary"],
              },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: "--protocol",
              description: "The default endpoint protocol",
              args: { name: "protocol", suggestions: ["http", "https"] },
            },
            {
              name: "--queue-endpoint",
              description: "Custom endpoint for queues",
              args: { name: "queue-endpoint" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--sas-token",
              description: "The SAS token to be used in the connection-string",
              args: { name: "sas-token" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: "--table-endpoint",
              description: "Custom endpoint for tables",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "show-usage",
          description:
            "Show the current count and limit of the storage accounts under the subscription",
          options: [
            {
              name: ["--location", "-l"],
              description:
                "Location. Values from: az account list-locations. You can configure the default location using az configure --defaults location=<location>",
              args: { name: "location" },
              isRequired: true,
            },
          ],
        },
        {
          name: "update",
          description: "Update the properties of a storage account",
          options: [
            {
              name: "--access-tier",
              description:
                'Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The "Premium" access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type',
              args: {
                name: "access-tier",
                suggestions: ["Cool", "Hot", "Premium"],
              },
            },
            {
              name: "--account-type",
              description:
                "Specify the Active Directory account type for Azure Storage",
              args: { name: "account-type" },
            },
            {
              name: "--add",
              description:
                "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
              args: { name: "add" },
            },
            {
              name: ["--allow-protected-append-writes", "--allow-append", "-w"],
              description:
                "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted",
              args: {
                name: "allow-protected-append-writes",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--allow-blob-public-access",
              description:
                "Allow or disallow public access to all blobs or containers in the storage account. If not specified, the default value is currently true and will be changed to false for new account to follow best security practices. When true, containers in the account may be configured for public access. Note that setting this property to true does not enable anonymous access to any data in the account. The additional step of configuring the public access setting for a container is required to enable anonymous access",
              args: {
                name: "allow-blob-public-access",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--allow-cross-tenant-replication", "-r"],
              description:
                "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. If not specified, the default value is currently true and will be changed to false for new accounts to follow best security practices",
              args: {
                name: "allow-cross-tenant-replication",
                suggestions: ["false", "true"],
              },
            },
            {
              name: ["--allow-shared-key-access", "-k"],
              description:
                "Indicate whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true",
              args: {
                name: "allow-shared-key-access",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--assign-identity",
              description:
                "Generate and assign a new Storage Account Identity for this storage account for use with key management services like Azure KeyVault",
            },
            {
              name: "--azure-storage-sid",
              description:
                "Specify the security identifier (SID) for Azure Storage. Required when --enable-files-adds is set to True",
              args: { name: "azure-storage-sid" },
            },
            {
              name: "--bypass",
              description: "Bypass traffic for space-separated uses",
              args: {
                name: "bypass",
                suggestions: ["AzureServices", "Logging", "Metrics", "None"],
              },
            },
            {
              name: "--custom-domain",
              description:
                'User domain assigned to the storage account. Name is the CNAME source. Use "" to clear existing value',
              args: { name: "custom-domain" },
            },
            {
              name: "--default-action",
              description: "Default action to apply when no rule matches",
              args: { name: "default-action", suggestions: ["Allow", "Deny"] },
            },
            {
              name: ["--default-share-permission", "-d"],
              description:
                "Default share permission for users using Kerberos authentication if RBAC role is not assigned",
              args: {
                name: "default-share-permission",
                suggestions: [
                  "None",
                  "StorageFileDataSmbShareContributor",
                  "StorageFileDataSmbShareElevatedContributor",
                  "StorageFileDataSmbShareReader",
                ],
              },
            },
            {
              name: "--domain-guid",
              description:
                "Specify the domain GUID. Required when --enable-files-adds is set to True",
              args: { name: "domain-guid" },
            },
            {
              name: "--domain-name",
              description:
                "Specify the primary domain that the AD DNS server is authoritative for. Required when --enable-files-adds is set to True",
              args: { name: "domain-name" },
            },
            {
              name: "--domain-sid",
              description:
                "Specify the security identifier (SID). Required when --enable-files-adds is set to True",
              args: { name: "domain-sid" },
            },
            {
              name: "--enable-files-aadds",
              description:
                "Enable Azure Active Directory Domain Services authentication for Azure Files",
              args: {
                name: "enable-files-aadds",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-files-aadkerb",
              description:
                "Enable Azure Files Active Directory Domain Service Kerberos Authentication for the storage account",
              args: {
                name: "enable-files-aadkerb",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-files-adds",
              description:
                "Enable Azure Files Active Directory Domain Service Authentication for storage account. When --enable-files-adds is set to true, Azure Active Directory Properties arguments must be provided",
              args: {
                name: "enable-files-adds",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-large-file-share",
              description:
                "Enable the capability to support large file shares with more than 5 TiB capacity for storage account.Once the property is enabled, the feature cannot be disabled. Currently only supported for LRS and ZRS replication types, hence account conversions to geo-redundant accounts would not be possible. For more information, please refer to https://go.microsoft.com/fwlink/?linkid=2086047",
              args: { name: "enable-large-file-share" },
            },
            {
              name: "--enable-local-user",
              description: "Enable local user features",
              args: {
                name: "enable-local-user",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-sftp",
              description: "Enable Secure File Transfer Protocol",
              args: { name: "enable-sftp", suggestions: ["false", "true"] },
            },
            {
              name: "--encryption-key-name",
              description: "The name of the KeyVault key",
              args: { name: "encryption-key-name" },
            },
            {
              name: "--encryption-key-source",
              description: "The default encryption key source",
              args: {
                name: "encryption-key-source",
                suggestions: ["Microsoft.Keyvault", "Microsoft.Storage"],
              },
            },
            {
              name: "--encryption-key-vault",
              description: "The Uri of the KeyVault",
              args: { name: "encryption-key-vault" },
            },
            {
              name: "--encryption-key-version",
              description:
                'The version of the KeyVault key to use, which will opt out of implicit key rotation. Please use "" to opt in key auto-rotation again',
              args: { name: "encryption-key-version" },
            },
            {
              name: "--encryption-services",
              description: "Specifies which service(s) to encrypt",
              args: {
                name: "encryption-services",
                suggestions: ["blob", "file", "queue", "table"],
              },
            },
            {
              name: "--force-string",
              description:
                "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
            },
            {
              name: "--forest-name",
              description:
                "Specify the Active Directory forest to get. Required when --enable-files-adds is set to True",
              args: { name: "forest-name" },
            },
            {
              name: "--https-only",
              description: "Allows https traffic only to storage service",
              args: { name: "https-only", suggestions: ["false", "true"] },
            },
            {
              name: "--identity-type",
              description: "The identity type",
              args: {
                name: "identity-type",
                suggestions: [
                  "None",
                  "SystemAssigned",
                  "SystemAssigned",
                  "UserAssigned",
                  "UserAssigned",
                ],
              },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--immutability-period-in-days", "--immutability-period"],
              description:
                "The immutability period for the blobs in the container since the policy creation, in days",
              args: { name: "immutability-period-in-days" },
            },
            {
              name: "--immutability-state",
              description:
                "Defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allow-protected-append-write property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted",
              args: {
                name: "immutability-state",
                suggestions: ["Disabled", "Locked", "Unlocked"],
              },
            },
            {
              name: ["--key-expiration-period-in-days", "--key-exp-days"],
              description:
                "Expiration period in days of the Key Policy assigned to the storage account",
              args: { name: "key-expiration-period-in-days" },
            },
            {
              name: ["--key-vault-federated-client-id", "-f"],
              description:
                "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account",
              args: { name: "key-vault-federated-client-id" },
            },
            {
              name: ["--key-vault-user-identity-id", "-u"],
              description:
                "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account",
              args: { name: "key-vault-user-identity-id" },
            },
            {
              name: "--min-tls-version",
              description:
                "The minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property",
              args: {
                name: "min-tls-version",
                suggestions: ["TLS1_0", "TLS1_1", "TLS1_2"],
              },
            },
            {
              name: ["--name", "-n"],
              description: "The storage account name",
              args: { name: "name" },
            },
            {
              name: "--net-bios-domain-name",
              description:
                "Specify the NetBIOS domain name. Required when --enable-files-adds is set to True",
              args: { name: "net-bios-domain-name" },
            },
            {
              name: "--public-network-access",
              description:
                "Enable or disable public network access to the storage account. Possible values include: Enabled or Disabled",
              args: {
                name: "public-network-access",
                suggestions: ["Disabled", "Enabled"],
              },
            },
            {
              name: "--publish-internet-endpoints",
              description:
                "A boolean flag which indicates whether internet routing storage endpoints are to be published",
              args: {
                name: "publish-internet-endpoints",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--publish-microsoft-endpoints",
              description:
                "A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              args: {
                name: "publish-microsoft-endpoints",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--remove",
              description:
                "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
              args: { name: "remove" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--routing-choice",
              description:
                "Routing Choice defines the kind of network routing opted by the user",
              args: {
                name: "routing-choice",
                suggestions: ["InternetRouting", "MicrosoftRouting"],
              },
            },
            {
              name: "--sam-account-name",
              description:
                "Specify the Active Directory SAMAccountName for Azure Storage",
              args: { name: "sam-account-name" },
            },
            {
              name: ["--sas-expiration-period", "--sas-exp"],
              description:
                "Expiration period of the SAS Policy assigned to the storage account, DD.HH:MM:SS",
              args: { name: "sas-expiration-period" },
            },
            {
              name: "--set",
              description:
                "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
              args: { name: "set" },
            },
            {
              name: "--sku",
              description:
                "Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value",
              args: {
                name: "sku",
                suggestions: [
                  "Premium_LRS",
                  "Premium_ZRS",
                  "Standard_GRS",
                  "Standard_GZRS",
                  "Standard_LRS",
                  "Standard_RAGRS",
                  "Standard_RAGZRS",
                  "Standard_ZRS",
                ],
              },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: "--tags",
              description:
                'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags',
              args: { name: "tags" },
            },
            {
              name: "--use-subdomain",
              description: "Specify whether to use indirect CNAME validation",
              args: { name: "use-subdomain", suggestions: ["false", "true"] },
            },
            {
              name: "--user-identity-id",
              description:
                "The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here",
              args: { name: "user-identity-id" },
            },
          ],
        },
        {
          name: "blob-inventory-policy",
          description: "Manage storage account Blob Inventory Policy",
          subcommands: [
            {
              name: "create",
              description: "Create Blob Inventory Policy for storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--policy",
                  description:
                    "The Storage Account Blob Inventory Policy, string in JSON format or json file path. See more details in https://docs.microsoft.com/azure/storage/blobs/blob-inventory#inventory-policy",
                  args: { name: "policy" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete Blob Inventory Policy associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: ["--yes", "-y"],
                  description: "Do not prompt for confirmation",
                },
              ],
            },
            {
              name: "show",
              description:
                "Show Blob Inventory Policy properties associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update Blob Inventory Policy associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
              ],
            },
          ],
        },
        {
          name: "blob-service-properties",
          description:
            "Manage the properties of a storage account's blob service",
          subcommands: [
            {
              name: "show",
              description:
                "Show the properties of a storage account's blob service",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update the properties of a storage account's blob service",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: ["--change-feed-retention-days", "--change-feed-days"],
                  description:
                    "Indicate the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.(Use --enable-change-feed without --change-feed-days to indicate null)",
                  args: { name: "change-feed-retention-days" },
                },
                {
                  name: [
                    "--container-delete-retention-days",
                    "--container-days",
                  ],
                  description:
                    "Indicate the number of days that the deleted container should be retained. The minimum specified value can be 1 and the maximum value can be 365",
                  args: { name: "container-delete-retention-days" },
                },
                {
                  name: [
                    "--enable-container-delete-retention",
                    "--container-retention",
                  ],
                  description:
                    "Enable container delete retention policy for container soft delete when set to true. Disable container delete retention policy when set to false",
                  args: {
                    name: "enable-container-delete-retention",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--default-service-version", "-d"],
                  description:
                    "Indicate the default version to use for requests to the Blob service if an incoming request's version is not specified",
                  args: { name: "default-service-version" },
                },
                {
                  name: "--delete-retention-days",
                  description:
                    "Indicate the number of days that the deleted blob should be retained. The value must be in range [1,365]. It must be provided when --enable-delete-retention is true",
                  args: { name: "delete-retention-days" },
                },
                {
                  name: "--enable-change-feed",
                  description:
                    "Indicate whether change feed event logging is enabled. If it is true, you enable the storage account to begin capturing changes. The default value is true. You can see more details in https://docs.microsoft.com/azure/storage/blobs/storage-blob-change-feed?tabs=azure-portal#register-by-using-azure-cli",
                  args: {
                    name: "enable-change-feed",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--enable-delete-retention",
                  description:
                    "Indicate whether delete retention policy is enabled for the blob service",
                  args: {
                    name: "enable-delete-retention",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--enable-last-access-tracking", "-t"],
                  description:
                    "When set to true last access time based tracking policy is enabled",
                  args: {
                    name: "enable-last-access-tracking",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--enable-restore-policy",
                  description: "Enable blob restore policy when it set to true",
                  args: {
                    name: "enable-restore-policy",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--enable-versioning",
                  description: "Versioning is enabled if set to true",
                  args: {
                    name: "enable-versioning",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--restore-days",
                  description:
                    "The number of days for the blob can be restored. It should be greater than zero and less than Delete Retention Days",
                  args: { name: "restore-days" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
              ],
            },
            {
              name: "cors-rule",
              description:
                "Manage the Cross-Origin Resource Sharing (CORS) rules of a storage account's blob service properties",
              subcommands: [
                {
                  name: "add",
                  description: "Add a CORS rule for a storage account",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--allowed-methods", "--methods"],
                      description:
                        "Space-separated list of HTTP verbs (methods) allowed to be executed by the origin",
                      args: { name: "allowed-methods" },
                      isRequired: true,
                    },
                    {
                      name: ["--allowed-origins", "--origins"],
                      description:
                        'Space-separated list of origin domains that will be allowed via CORS, or "*" to allow all domains',
                      args: { name: "allowed-origins" },
                      isRequired: true,
                    },
                    {
                      name: ["--max-age-in-seconds", "--max-age"],
                      description:
                        "The number of seconds that the client/browser should cache a preflight response",
                      args: { name: "max-age-in-seconds" },
                      isRequired: true,
                    },
                    {
                      name: "--allowed-headers",
                      description:
                        "Space-separated list of headers allowed to be part of the cross-origin request",
                      args: { name: "allowed-headers" },
                    },
                    {
                      name: "--exposed-headers",
                      description:
                        "Space-separated list of response headers to expose to CORS clients",
                      args: { name: "exposed-headers" },
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "clear",
                  description: "Clear all CORS rules for a storage account",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "list",
                  description:
                    "List all CORS rules of a storage account's blob service properties",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "encryption-scope",
          description: "Manage encryption scope for a storage account",
          subcommands: [
            {
              name: "create",
              description: "Create an encryption scope within storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the encryption scope within the specified storage account",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--key-source", "-s"],
                  description: "The provider for the encryption scope",
                  args: {
                    name: "key-source",
                    suggestions: ["Microsoft.KeyVault", "Microsoft.Storage"],
                  },
                },
                {
                  name: ["--key-uri", "-u"],
                  description:
                    "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope",
                  args: { name: "key-uri" },
                },
                {
                  name: ["--require-infrastructure-encryption", "-i"],
                  description:
                    "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest",
                  args: {
                    name: "require-infrastructure-encryption",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "list",
              description: "List encryption scopes within storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--filter",
                  description:
                    "When specified, only encryption scope names starting with the filter will be listed",
                  args: { name: "filter" },
                },
                {
                  name: "--include",
                  description:
                    "When specified, will list encryption scopes with the specific state",
                  args: {
                    name: "include",
                    suggestions: ["All", "Disabled", "Enabled"],
                  },
                },
                {
                  name: "--marker",
                  description:
                    "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
                  args: { name: "marker" },
                },
                {
                  name: "--maxpagesize",
                  description:
                    "The maximum number of encryption scopes that will be included in the list response",
                  args: { name: "maxpagesize" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show properties for specified encryption scope within storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the encryption scope within the specified storage account",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update properties for specified encryption scope within storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the encryption scope within the specified storage account",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--key-source", "-s"],
                  description: "The provider for the encryption scope",
                  args: {
                    name: "key-source",
                    suggestions: ["Microsoft.KeyVault", "Microsoft.Storage"],
                  },
                },
                {
                  name: ["--key-uri", "-u"],
                  description:
                    "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope",
                  args: { name: "key-uri" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--state",
                  description:
                    "Change the state the encryption scope. When disabled, all blob read/write operations using this encryption scope will fail",
                  args: { name: "state", suggestions: ["Disabled", "Enabled"] },
                },
              ],
            },
          ],
        },
        {
          name: "file-service-properties",
          description:
            "Manage the properties of file service in storage account",
          subcommands: [
            {
              name: "show",
              description:
                "Show the properties of file service in storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update the properties of file service in storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: "--auth-methods",
                  description:
                    "SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'",
                  args: { name: "auth-methods" },
                },
                {
                  name: "--channel-encryption",
                  description:
                    "SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'",
                  args: { name: "channel-encryption" },
                },
                {
                  name: "--delete-retention-days",
                  description:
                    "Indicate the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365",
                  args: { name: "delete-retention-days" },
                },
                {
                  name: "--enable-delete-retention",
                  description:
                    "Enable file service properties for share soft delete",
                  args: {
                    name: "enable-delete-retention",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--enable-smb-multichannel", "--mc"],
                  description:
                    "Set SMB Multichannel setting for file service. Applies to Premium FileStorage only",
                  args: {
                    name: "enable-smb-multichannel",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: ["--kerb-ticket-encryption", "-k"],
                  description:
                    "Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'",
                  args: { name: "kerb-ticket-encryption" },
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
                {
                  name: "--versions",
                  description:
                    "SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'",
                  args: { name: "versions" },
                },
              ],
            },
          ],
        },
        {
          name: "hns-migration",
          description:
            "Manage storage account migration to enable hierarchical namespace",
          subcommands: [
            {
              name: "start",
              description:
                "Validate/Begin migrating a storage account to enable hierarchical namespace",
              options: [
                {
                  name: ["--request-type", "--type"],
                  description:
                    "Start a validation request for migration or start a migration request",
                  args: {
                    name: "request-type",
                    suggestions: ["upgrade", "validation"],
                  },
                  isRequired: true,
                },
                {
                  name: "--ids",
                  description:
                    "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
                  args: { name: "ids" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The storage account name",
                  args: { name: "name" },
                },
                {
                  name: "--no-wait",
                  description:
                    "Do not wait for the long-running operation to finish",
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--subscription",
                  description:
                    "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
                  args: { name: "subscription" },
                },
              ],
            },
            {
              name: "stop",
              description:
                "Stop the enabling hierarchical namespace migration of a storage account",
              options: [
                {
                  name: "--ids",
                  description:
                    "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
                  args: { name: "ids" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The storage account name",
                  args: { name: "name" },
                },
                {
                  name: "--no-wait",
                  description:
                    "Do not wait for the long-running operation to finish",
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--subscription",
                  description:
                    "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
                  args: { name: "subscription" },
                },
              ],
            },
          ],
        },
        {
          name: "keys",
          description: "Manage storage account keys",
          subcommands: [
            {
              name: "list",
              description:
                "List the access keys or Kerberos keys (if active directory enabled) for a storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--expand-key-type",
                  description: "Specify the expanded key types to be listed",
                  args: { name: "expand-key-type" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "renew",
              description:
                "Regenerate one of the access keys or Kerberos keys (if active directory enabled) for a storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--key",
                  description: "The key options to regenerate",
                  args: {
                    name: "key",
                    suggestions: ["key1", "key2", "primary", "secondary"],
                  },
                  isRequired: true,
                },
                {
                  name: "--key-type",
                  description:
                    "The key type to regenerate. If --key-type is not specified, one of access keys will be regenerated by default",
                  args: { name: "key-type", suggestions: ["kerb"] },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
          ],
        },
        {
          name: "local-user",
          description: "Manage storage account local users",
          subcommands: [
            {
              name: "create",
              description: "Create a local user for a given storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
                {
                  name: "--has-shared-key",
                  description:
                    "Indicates whether shared key exists. Set it to false to remove existing shared key",
                  args: {
                    name: "has-shared-key",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--has-ssh-key",
                  description:
                    "Indicates whether ssh key exists. Set it to false to remove existing SSH key",
                  args: { name: "has-ssh-key", suggestions: ["false", "true"] },
                },
                {
                  name: "--has-ssh-password",
                  description:
                    "Indicates whether ssh password exists. Set it to false to remove existing SSH password",
                  args: {
                    name: "has-ssh-password",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--home-directory",
                  description: "The home directory",
                  args: { name: "home-directory" },
                },
                {
                  name: "--permission-scope",
                  description:
                    "The permission scope argument list which includes the permissions, service, and resource_name.The permissions can be a combination of the below possible values: Read(r), Write (w), Delete (d), List (l), and Create (c). The service has possible values: blob, file. The resource-name is the container name or the file share name. Example: --permission-scope permissions=r service=blob resource-name=container1Can specify multiple permission scopes: --permission-scope permissions=rw service=blob resource-name=container1--permission-scope permissions=rwd service=file resource-name=share2",
                  args: { name: "permission-scope" },
                },
                {
                  name: "--ssh-authorized-key",
                  description:
                    'SSH authorized keys for SFTP. Includes an optional description and key. The key is the base64 encoded SSH public key , with format: e.g. ssh-rsa AAAABBBB.Example: --ssh_authorized_key description=description key="ssh-rsa AAAABBBB"or --ssh_authorized_key key="ssh-rsa AAAABBBB"',
                  args: { name: "ssh-authorized-key" },
                },
              ],
            },
            {
              name: "delete",
              description: "Delete a local user",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "list",
              description: "List local users for a storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "list-keys",
              description:
                "List sharedkeys and sshAuthorizedKeys for a local user",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "regenerate-password",
              description: "Regenerate sshPassword for a local user",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "show",
              description: "Show info for a local user",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "update",
              description: "Update properties for a local user",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--user-name", "--name", "-n"],
                  description:
                    "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account",
                  args: { name: "user-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
                {
                  name: "--has-shared-key",
                  description:
                    "Indicates whether shared key exists. Set it to false to remove existing shared key",
                  args: {
                    name: "has-shared-key",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--has-ssh-key",
                  description:
                    "Indicates whether ssh key exists. Set it to false to remove existing SSH key",
                  args: { name: "has-ssh-key", suggestions: ["false", "true"] },
                },
                {
                  name: "--has-ssh-password",
                  description:
                    "Indicates whether ssh password exists. Set it to false to remove existing SSH password",
                  args: {
                    name: "has-ssh-password",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--home-directory",
                  description: "The home directory",
                  args: { name: "home-directory" },
                },
                {
                  name: "--permission-scope",
                  description:
                    "The permission scope argument list which includes the permissions, service, and resource_name.The permissions can be a combination of the below possible values: Read(r), Write (w), Delete (d), List (l), and Create (c). The service has possible values: blob, file. The resource-name is the container name or the file share name. Example: --permission-scope permissions=r service=blob resource-name=container1Can specify multiple permission scopes: --permission-scope permissions=rw service=blob resource-name=container1--permission-scope permissions=rwd service=file resource-name=share2",
                  args: { name: "permission-scope" },
                },
                {
                  name: "--ssh-authorized-key",
                  description:
                    'SSH authorized keys for SFTP. Includes an optional description and key. The key is the base64 encoded SSH public key , with format: e.g. ssh-rsa AAAABBBB.Example: --ssh_authorized_key description=description key="ssh-rsa AAAABBBB"or --ssh_authorized_key key="ssh-rsa AAAABBBB"',
                  args: { name: "ssh-authorized-key" },
                },
              ],
            },
          ],
        },
        {
          name: "management-policy",
          description: "Manage storage account management policies",
          subcommands: [
            {
              name: "create",
              description:
                "Create the data policy rules associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--policy",
                  description:
                    "The Storage Account ManagementPolicies Rules, in JSON format. See more details in: https://docs.microsoft.com/azure/storage/common/storage-lifecycle-managment-concepts",
                  args: { name: "policy" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete the data policy rules associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "show",
              description:
                "Get the data policy rules associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
            {
              name: "update",
              description:
                "Update the data policy rules associated with the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
              ],
            },
          ],
        },
        {
          name: "migration",
          description: "Manage Storage Account Migration",
          subcommands: [
            {
              name: "show",
              description:
                "Get the status of the ongoing migration for the specified storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                },
                {
                  name: "--ids",
                  description:
                    "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
                  args: { name: "ids" },
                },
                {
                  name: ["--migration-name", "--name", "-n"],
                  description:
                    "The name of the Storage Account Migration. It should always be 'default'",
                  args: { name: "migration-name", suggestions: ["default"] },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--subscription",
                  description:
                    "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
                  args: { name: "subscription" },
                },
              ],
            },
            {
              name: "start",
              description:
                "Account Migration request can be triggered for a storage account to change its redundancy level. The migration updates the non-zonal redundant storage account to a zonal redundant account or vice-versa in order to have better reliability and availability. Zone-redundant storage (ZRS) replicates your storage account synchronously across three Azure availability zones in the primary region",
              options: [
                {
                  name: ["--target-sku-name", "--sku"],
                  description: "Target sku name for the account",
                  args: {
                    name: "target-sku-name",
                    suggestions: [
                      "Premium_LRS",
                      "Premium_ZRS",
                      "Standard_GRS",
                      "Standard_GZRS",
                      "Standard_LRS",
                      "Standard_RAGRS",
                      "Standard_RAGZRS",
                      "Standard_ZRS",
                    ],
                  },
                  isRequired: true,
                },
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only",
                  args: { name: "account-name" },
                },
                {
                  name: "--ids",
                  description:
                    "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
                  args: { name: "ids" },
                },
                {
                  name: "--name",
                  description:
                    "Current value is 'default' for customer initiated migration",
                  args: { name: "name" },
                },
                {
                  name: "--no-wait",
                  description:
                    "Do not wait for the long-running operation to finish",
                  args: {
                    name: "no-wait",
                    suggestions: [
                      "0",
                      "1",
                      "f",
                      "false",
                      "n",
                      "no",
                      "t",
                      "true",
                      "y",
                      "yes",
                    ],
                  },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--subscription",
                  description:
                    "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
                  args: { name: "subscription" },
                },
                {
                  name: "--type",
                  description:
                    "SrpAccountMigrationType in ARM contract which is 'accountMigrations'",
                  args: { name: "type" },
                },
              ],
            },
          ],
        },
        {
          name: "network-rule",
          description: "Manage network rules",
          subcommands: [
            {
              name: "add",
              description: "Add a network rule",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--action",
                  description:
                    "The action of virtual network rule. Possible value is Allow",
                  args: { name: "action" },
                },
                {
                  name: "--ip-address",
                  description:
                    "IPv4 address or CIDR range. Can supply a list: --ip-address ip1 [ip2]",
                  args: { name: "ip-address" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--resource-id",
                  description: "The resource id to add in network rule",
                  args: { name: "resource-id" },
                },
                {
                  name: "--subnet",
                  description:
                    "Name or ID of subnet. If name is supplied, --vnet-name must be supplied",
                  args: { name: "subnet" },
                },
                {
                  name: "--tenant-id",
                  description: "The tenant id to add in network rule",
                  args: { name: "tenant-id" },
                },
                {
                  name: "--vnet-name",
                  description: "Name of a virtual network",
                  args: { name: "vnet-name" },
                },
              ],
            },
            {
              name: "list",
              description: "List network rules",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "remove",
              description: "Remove a network rule",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--ip-address",
                  description:
                    "IPv4 address or CIDR range. Can supply a list: --ip-address ip1 [ip2]",
                  args: { name: "ip-address" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--resource-id",
                  description: "The resource id to add in network rule",
                  args: { name: "resource-id" },
                },
                {
                  name: "--subnet",
                  description:
                    "Name or ID of subnet. If name is supplied, --vnet-name must be supplied",
                  args: { name: "subnet" },
                },
                {
                  name: "--tenant-id",
                  description: "The tenant id to add in network rule",
                  args: { name: "tenant-id" },
                },
                {
                  name: "--vnet-name",
                  description: "Name of a virtual network",
                  args: { name: "vnet-name" },
                },
              ],
            },
          ],
        },
        {
          name: "or-policy",
          description: "Manage storage account Object Replication Policy",
          subcommands: [
            {
              name: "create",
              description:
                "Create Object Replication Service Policy for storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--destination-container", "--dcont"],
                  description:
                    "The destination storage container name. Required when no --policy provided",
                  args: { name: "destination-container" },
                },
                {
                  name: ["--destination-account", "-d"],
                  description:
                    "The destination storage account name or resource Id. Apply --account-name value as destination account when there is no destination account provided in --policy and --destination-account",
                  args: { name: "destination-account" },
                },
                {
                  name: ["--min-creation-time", "-t"],
                  description:
                    "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z",
                  args: { name: "min-creation-time" },
                },
                {
                  name: ["--policy", "-p"],
                  description:
                    "The object replication policy definition between two storage accounts, in JSON format. Multiple rules can be defined in one policy",
                  args: { name: "policy" },
                },
                {
                  name: "--policy-id",
                  description:
                    'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                  args: { name: "policy-id" },
                },
                {
                  name: ["--prefix-match", "--prefix"],
                  description:
                    "Optional. Filter the results to replicate only blobs whose names begin with the specified prefix",
                  args: { name: "prefix-match" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--rule-id",
                  description:
                    "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account",
                  args: { name: "rule-id" },
                },
                {
                  name: ["--source-container", "--scont"],
                  description:
                    "The source storage container name. Required when no --policy provided",
                  args: { name: "source-container" },
                },
                {
                  name: ["--source-account", "-s"],
                  description:
                    "The source storage account name or resource Id. Required when no --policy provided",
                  args: { name: "source-account" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete specified Object Replication Service Policy associated with the specified storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--policy-id",
                  description:
                    'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                  args: { name: "policy-id" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "list",
              description:
                "List Object Replication Service Policies associated with the specified storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show the properties of specified Object Replication Service Policy for storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--policy-id",
                  description:
                    'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                  args: { name: "policy-id" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update Object Replication Service Policy properties for storage account",
              options: [
                {
                  name: ["--account-name", "-n"],
                  description: "The storage account name",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: ["--destination-account", "-d"],
                  description:
                    "The destination storage account name or resource Id. Apply --account-name value as destination account when there is no destination account provided in --policy and --destination-account",
                  args: { name: "destination-account" },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: ["--policy", "-p"],
                  description:
                    "The object replication policy definition between two storage accounts, in JSON format. Multiple rules can be defined in one policy",
                  args: { name: "policy" },
                },
                {
                  name: "--policy-id",
                  description:
                    'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                  args: { name: "policy-id" },
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
                {
                  name: ["--source-account", "-s"],
                  description:
                    "The source storage account name or resource Id. Required when no --policy provided",
                  args: { name: "source-account" },
                },
              ],
            },
            {
              name: "rule",
              description: "Manage Object Replication Service Policy Rules",
              subcommands: [
                {
                  name: "add",
                  description:
                    "Add rule to the specified Object Replication Service Policy",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--destination-container", "-d"],
                      description: "The destination storage container name",
                      args: { name: "destination-container" },
                      isRequired: true,
                    },
                    {
                      name: "--policy-id",
                      description:
                        'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                      args: { name: "policy-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--source-container", "-s"],
                      description: "The source storage container name",
                      args: { name: "source-container" },
                      isRequired: true,
                    },
                    {
                      name: ["--min-creation-time", "-t"],
                      description:
                        "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z",
                      args: { name: "min-creation-time" },
                    },
                    {
                      name: ["--prefix-match", "--prefix"],
                      description:
                        "Optional. Filter the results to replicate only blobs whose names begin with the specified prefix",
                      args: { name: "prefix-match" },
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "list",
                  description:
                    "List all the rules in the specified Object Replication Service Policy",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: "--policy-id",
                      description:
                        'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                      args: { name: "policy-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "remove",
                  description:
                    "Remove the specified rule from the specified Object Replication Service Policy",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: "--policy-id",
                      description:
                        'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                      args: { name: "policy-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--rule-id", "-r"],
                      description:
                        "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account",
                      args: { name: "rule-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "show",
                  description:
                    "Show the properties of specified rule in Object Replication Service Policy",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: "--policy-id",
                      description:
                        'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                      args: { name: "policy-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--rule-id", "-r"],
                      description:
                        "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account",
                      args: { name: "rule-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                  ],
                },
                {
                  name: "update",
                  description:
                    "Update rule properties to Object Replication Service Policy",
                  options: [
                    {
                      name: ["--account-name", "-n"],
                      description: "The storage account name",
                      args: { name: "account-name" },
                      isRequired: true,
                    },
                    {
                      name: "--policy-id",
                      description:
                        'The ID of object replication policy or "default" if the policy ID is unknown. Policy Id will be auto-generated when setting on destination account. Required when setting on source account',
                      args: { name: "policy-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--rule-id", "-r"],
                      description:
                        "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account",
                      args: { name: "rule-id" },
                      isRequired: true,
                    },
                    {
                      name: ["--destination-container", "-d"],
                      description: "The destination storage container name",
                      args: { name: "destination-container" },
                    },
                    {
                      name: ["--min-creation-time", "-t"],
                      description:
                        "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z",
                      args: { name: "min-creation-time" },
                    },
                    {
                      name: ["--prefix-match", "--prefix"],
                      description:
                        "Optional. Filter the results to replicate only blobs whose names begin with the specified prefix",
                      args: { name: "prefix-match" },
                    },
                    {
                      name: ["--resource-group", "-g"],
                      description:
                        "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                      args: { name: "resource-group" },
                    },
                    {
                      name: ["--source-container", "-s"],
                      description: "The source storage container name",
                      args: { name: "source-container" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "private-endpoint-connection",
          description: "Manage storage account private endpoint connection",
          subcommands: [
            {
              name: "approve",
              description:
                "Approve a private endpoint connection request for storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                },
                {
                  name: "--description",
                  description: "Comments for approve operation",
                  args: { name: "description" },
                },
                {
                  name: "--id",
                  description:
                    "The ID of the private endpoint connection associated with the Storage Account. You can get it using az storage account show",
                  args: { name: "id" },
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the private endpoint connection associated with the Storage Account",
                  args: { name: "name" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "The resource group name of specified storage account",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a private endpoint connection request for storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                },
                {
                  name: "--id",
                  description:
                    "The ID of the private endpoint connection associated with the Storage Account. You can get it using az storage account show",
                  args: { name: "id" },
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the private endpoint connection associated with the Storage Account",
                  args: { name: "name" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "The resource group name of specified storage account",
                  args: { name: "resource-group" },
                },
                {
                  name: ["--yes", "-y"],
                  description: "Do not prompt for confirmation",
                },
              ],
            },
            {
              name: "reject",
              description:
                "Reject a private endpoint connection request for storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                },
                {
                  name: "--description",
                  description: "Comments for reject operation",
                  args: { name: "description" },
                },
                {
                  name: "--id",
                  description:
                    "The ID of the private endpoint connection associated with the Storage Account. You can get it using az storage account show",
                  args: { name: "id" },
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the private endpoint connection associated with the Storage Account",
                  args: { name: "name" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "The resource group name of specified storage account",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show details of a private endpoint connection request for storage account",
              options: [
                {
                  name: "--account-name",
                  description: "The storage account name",
                  args: { name: "account-name" },
                },
                {
                  name: "--id",
                  description:
                    "The ID of the private endpoint connection associated with the Storage Account. You can get it using az storage account show",
                  args: { name: "id" },
                },
                {
                  name: ["--name", "-n"],
                  description:
                    "The name of the private endpoint connection associated with the Storage Account",
                  args: { name: "name" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "The resource group name of specified storage account",
                  args: { name: "resource-group" },
                },
              ],
            },
          ],
        },
        {
          name: "private-link-resource",
          description: "Manage storage account private link resources",
          subcommands: [
            {
              name: "list",
              description:
                "Get the private link resources that need to be created for a storage account",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. Required",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                  isRequired: true,
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "azcopy",
      description:
        "[EXPERIMENTAL] Manage storage operations utilizing AzCopy.\n\n\t\tOpen issues here: https://github.com/Azure/azure-storage-azcopy",
      subcommands: [
        {
          name: "run-command",
          description:
            "Run a command directly using the AzCopy CLI. Please use SAS tokens for authentication",

          args: {
            name: "<COMMAND_ARGS>",
            description:
              'Command to run using azcopy. Please start commands with "azcopy "',
            isOptional: true,
          },
        },
        {
          name: "blob",
          description:
            "Manage object storage for unstructured data (blobs) using AzCopy",
          subcommands: [
            {
              name: "delete",
              description:
                "Delete blobs from a storage blob container using AzCopy",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The delete target container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--recursive", "-r"],
                  description: "Recursively delete blobs",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: ["--target", "-t"],
                  description: "The delete target path",
                  args: { name: "target" },
                },
              ],
            },
            {
              name: "download",
              description:
                "Download blobs from a storage blob container using AzCopy",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The download source container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: ["--destination", "-d"],
                  description: "The destination file path to download to",
                  args: { name: "destination" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--recursive", "-r"],
                  description: "Recursively download blobs",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: ["--source", "-s"],
                  description: "The download source path",
                  args: { name: "source" },
                },
              ],
            },
            {
              name: "sync",
              description:
                "Sync blobs recursively to a storage blob container using AzCopy",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The sync destination container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: ["--source", "-s"],
                  description: "The source file path to sync from",
                  args: { name: "source" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--destination", "-d"],
                  description: "The sync destination path",
                  args: { name: "destination" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "upload",
              description:
                "Upload blobs to a storage blob container using AzCopy",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The upload destination container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: ["--source", "-s"],
                  description: "The source file path to upload from",
                  args: { name: "source" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--destination", "-d"],
                  description: "The upload destination path",
                  args: { name: "destination" },
                },
                {
                  name: ["--recursive", "-r"],
                  description: "Recursively upload blobs",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "blob",
      description:
        "Manage object storage for unstructured data (blobs).\n\n\t\tPlease specify one of the following authentication parameters for your commands: --auth-mode, --account-key, --connection-string, --sas-token. You also can use corresponding environment variables to store your authentication credentials, e.g. AZURE_STORAGE_KEY, AZURE_STORAGE_CONNECTION_STRING and AZURE_STORAGE_SAS_TOKEN",
      subcommands: [
        {
          name: "delete",
          description: "Mark a blob or snapshot for deletion",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--delete-snapshots",
              description:
                'Required if the blob has associated snapshots. Values include: "only": Deletes only the blobs snapshots. "include": Deletes the blob along with all snapshots',
              args: {
                name: "delete-snapshots",
                suggestions: ["include", "only"],
              },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to delete",
              args: { name: "snapshot" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete-batch",
          description: "Delete blobs from a blob container recursively",
          options: [
            {
              name: ["--source", "-s"],
              description:
                "The blob container from where the files will be deleted",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--delete-snapshots",
              description: "Required if the blob has associated snapshots",
              args: {
                name: "delete-snapshots",
                suggestions: ["include", "only"],
              },
            },
            {
              name: "--dryrun",
              description:
                "Show the summary of the operations to be taken instead of actually deleting the file(s)",
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description: "An ETag value, or the wildcard character (*)",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "The active lease id for the blob",
              args: { name: "lease-id" },
            },
            {
              name: "--pattern",
              description:
                "The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "download",
          description: "Download a blob to a file path",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--end-range",
              description:
                "End of byte range to use for downloading a section of the blob. If end_range is given, start_range must be provided. The start_range and end_range params are inclusive. Ex: start_range=0, end_range=511 will download first 512 bytes of blob",
              args: { name: "end-range" },
            },
            {
              name: ["--file", "-f"],
              description:
                "Path of file to write out to. If not specified, stdout will be used and max_connections will be set to 1",
              args: { name: "file" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: "--max-connections",
              description:
                "The number of parallel connections with which to download",
              args: { name: "max-connections" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--open-mode",
              description:
                "Mode to use when opening the file. Note that specifying append only open_mode prevents parallel download. So, max_connections must be set to 1 if this open_mode is used",
              args: { name: "open-mode" },
            },
            {
              name: "--overwrite",
              description:
                "Overwrite an existing file when specified. Default value is true",
              args: { name: "overwrite", suggestions: ["false", "true"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve",
              args: { name: "snapshot" },
            },
            {
              name: "--start-range",
              description:
                "Start of byte range to use for downloading a section of the blob. If no end_range is given, all bytes after the start_range will be downloaded. The start_range and end_range params are inclusive. Ex: start_range=0, end_range=511 will download first 512 bytes of blob",
              args: { name: "start-range" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--validate-content",
              description:
                "If true, calculates an MD5 hash for each chunk of the blob. The storage service checks the hash of the content that has arrived with the hash that was sent. This is primarily valuable for detecting bitflips on the wire if using http instead of https, as https (the default), will already validate. Note that this MD5 hash is not stored with the blob. Also note that if enabled, the memory-efficient algorithm will not be used because computing the MD5 hash requires buffering entire blocks, and doing so defeats the purpose of the memory-efficient algorithm",
            },
            {
              name: "--version-id",
              description:
                "An optional blob version ID. This parameter is only for versioning enabled account",
              args: { name: "version-id" },
            },
          ],
        },
        {
          name: "download-batch",
          description: "Download blobs from a blob container recursively",
          options: [
            {
              name: ["--destination", "-d"],
              description:
                "The existing destination folder for this download operation",
              args: { name: "destination" },
              isRequired: true,
            },
            {
              name: ["--source", "-s"],
              description:
                "The blob container from where the files will be downloaded",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--dryrun",
              description:
                "Show the summary of the operations to be taken instead of actually downloading the file(s)",
            },
            {
              name: "--max-connections",
              description:
                "The number of parallel connections with which to download",
              args: { name: "max-connections" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--overwrite",
              description:
                "Overwrite an existing file when specified. Default value is false",
            },
            {
              name: "--pattern",
              description:
                "The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a blob in a container",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "The snapshot parameter is an opaque DateTime value that, when present, specifies the snapshot",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "filter",
          description:
            "List blobs across all containers whose tags match a given search expression",
          options: [
            {
              name: "--tag-filter",
              description:
                'The expression to find blobs whose tags matches the specified condition. eg. ""yourtagname"=\'firsttag\' and "yourtagname2"=\'secondtag\'"',
              args: { name: "tag-filter" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description:
                "Used when you want to list blobs under a specified container",
              args: { name: "container-name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
          ],
        },
        {
          name: "generate-sas",
          description: "Generate a shared access signature for the blob",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--as-user",
              description:
                "Indicates that this command return the SAS signed with the user delegation key. The expiry parameter and '--auth-mode login' are required if this argument is specified",
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--cache-control",
              description:
                "Response header value for Cache-Control when resource is accessed using this shared access signature",
              args: { name: "cache-control" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--content-disposition",
              description:
                "Response header value for Content-Disposition when resource is accessed using this shared access signature",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description:
                "Response header value for Content-Encoding when resource is accessed using this shared access signature",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description:
                "Response header value for Content-Language when resource is accessed using this shared access signature",
              args: { name: "content-language" },
            },
            {
              name: "--content-type",
              description:
                "Response header value for Content-Type when resource is accessed using this shared access signature",
              args: { name: "content-type" },
            },
            {
              name: "--encryption-scope",
              description:
                "A predefined encryption scope used to encrypt the data on the service",
              args: { name: "encryption-scope" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--full-uri",
              description:
                "Indicates that this command return the full blob URI and the shared access signature token",
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (a)dd (c)reate (d)elete (e)xecute (i)set_immutability_policy (m)ove (r)ead (t)ag (w)rite (x)delete_previous_version (y)permanent_delete. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the container's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--snapshot",
              description:
                "An optional blob snapshot ID. Opaque DateTime value that, when present, specifies the blob snapshot to grant permission",
              args: { name: "snapshot" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "list",
          description: "List blobs in a given container",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--delimiter",
              description:
                "When the request includes this parameter, the operation returns a BlobPrefix element in the result list that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string",
              args: { name: "delimiter" },
            },
            {
              name: "--include",
              description:
                "Specify one or more additional datasets to include in the response. Options include: (c)opy, (d)eleted, (m)etadata, (s)napshots, (v)ersions, (t)ags, (i)mmutabilitypolicy, (l)egalhold, (d)eletedwithversions. Can be combined",
              args: { name: "include" },
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description:
                'Specify the maximum number to return. If the request does not specify num_results, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remaining of the results. Provide "*" to return all',
              args: { name: "num-results" },
            },
            {
              name: "--prefix",
              description:
                "Filter the results to return only blobs whose name begins with the specified prefix",
              args: { name: "prefix" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--show-next-marker",
              description: "Show nextMarker in result when specified",
              args: { name: "show-next-marker" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "move",
          description: "Move a blob in a storage container",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: ["--destination-blob", "-d"],
              description:
                "The destination blob name. It should be an absolute path under the container. e.g.'topdir1/dirbar'",
              args: { name: "destination-blob" },
              isRequired: true,
            },
            {
              name: ["--source-blob", "-s"],
              description:
                "The source blob name. It should be an absolute path under the container. e.g.'topdir1/dirsubfoo'",
              args: { name: "source-blob" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--lease-id",
              description:
                "Optional. A lease ID for the new_path. The new_path must have an active lease and the lease ID must match",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--source-if-match",
              description:
                "Optional. An ETag value. Specify this header to perform the rename operation only if the source's ETag matches the value specified",
              args: { name: "source-if-match" },
            },
            {
              name: "--source-if-modified-since",
              description:
                "Optional. A date and time value. Specify this header to perform the rename operation only if the source has been modified since the specified date and time",
              args: { name: "source-if-modified-since" },
            },
            {
              name: "--source-if-none-match",
              description:
                'Optional. An ETag value or the special wildcard ("*") value. Specify this header to perform the rename operation only if the source\'s ETag does not match the value specified',
              args: { name: "source-if-none-match" },
            },
            {
              name: "--source-if-unmodified-since",
              description:
                "Optional. A date and time value. Specify this header to perform the rename operation only if the source has not been modified since the specified date and time",
              args: { name: "source-if-unmodified-since" },
            },
            {
              name: "--source-lease-id",
              description:
                "Optional. A lease ID for the source_path. The source_path must have an active lease and the lease ID must match",
              args: { name: "source-lease-id" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "query",
          description:
            "Enable users to select/project on blob or blob snapshot data by providing simple query expressions",
          options: [
            {
              name: "--query-expression",
              description:
                "The query expression in SQL. The maximum size of the query expression is 256KiB. For more information about the expression syntax, please see https://docs.microsoft.com/azure/storage/blobs/query-acceleration-sql-reference",
              args: { name: "query-expression" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--in-column-separator",
              description: "The string used to separate columns",
              args: { name: "in-column-separator" },
            },
            {
              name: "--in-escape-char",
              description:
                "The string used as an escape character. Default to empty",
              args: { name: "in-escape-char" },
            },
            {
              name: "--in-has-header",
              description:
                "Whether the blob data includes headers in the first line. The default value is False, meaning that the data will be returned inclusive of the first line. If set to True, the data will be returned exclusive of the first line",
            },
            {
              name: "--in-line-separator",
              description:
                "The string used to separate records. default value:",
              args: { name: "in-line-separator" },
            },
            {
              name: "--in-quote-char",
              description: "The string used to quote a specific field",
              args: { name: "in-quote-char" },
            },
            {
              name: "--in-record-separator",
              description:
                "The string used to separate records. default value:",
              args: { name: "in-record-separator" },
            },
            {
              name: "--input-format",
              description:
                "Serialization type of the data currently stored in the blob. The default is to treat the blob data as CSV data formatted in the default dialect.The blob data will be reformatted according to that profile when blob format is specified. If you choose json, please specify Output Json Text Configuration Arguments accordingly; If you choose csv, please specify Output Delimited Text Configuration Arguments",
              args: { name: "input-format", suggestions: ["csv", "json"] },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--out-column-separator",
              description: "The string used to separate columns",
              args: { name: "out-column-separator" },
            },
            {
              name: "--out-escape-char",
              description:
                "The string used as an escape character. Default to empty",
              args: { name: "out-escape-char" },
            },
            {
              name: "--out-has-header",
              description:
                "Whether the blob data includes headers in the first line. The default value is False, meaning that the data will be returned inclusive of the first line. If set to True, the data will be returned exclusive of the first line",
            },
            {
              name: "--out-line-separator",
              description:
                "The string used to separate records. default value:",
              args: { name: "out-line-separator" },
            },
            {
              name: "--out-quote-char",
              description: "The string used to quote a specific field",
              args: { name: "out-quote-char" },
            },
            {
              name: "--out-record-separator",
              description:
                "The string used to separate records. default value:",
              args: { name: "out-record-separator" },
            },
            {
              name: "--output-format",
              description:
                "Output serialization type for the data stream. By default the data will be returned as it is represented in the blob. By providing an output format, the blob data will be reformatted according to that profile. If you choose json, please specify Output Json Text Configuration Arguments accordingly; If you choose csv, please specify Output Delimited Text Configuration Arguments",
              args: { name: "output-format", suggestions: ["csv", "json"] },
            },
            {
              name: "--result-file",
              description: "Specify the file path to save result",
              args: { name: "result-file" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "restore",
          description: "Restore blobs in the specified blob ranges",
          options: [
            {
              name: ["--account-name", "-n"],
              description: "The storage account name",
              args: { name: "account-name" },
              isRequired: true,
            },
            {
              name: ["--time-to-restore", "-t"],
              description:
                "Restore blob to the specified time, which should be UTC datetime in (Y-m-d'T'H:M:S'Z')",
              args: { name: "time-to-restore" },
              isRequired: true,
            },
            {
              name: ["--blob-range", "-r"],
              description:
                "Blob ranges to restore. You need to two values to specify start_range and end_range for each blob range, e.g. -r blob1 blob2. Note: Empty means account start as start range value, and means account end for end range",
              args: { name: "blob-range" },
            },
            {
              name: "--no-wait",
              description:
                "Do not wait for the long-running operation to finish",
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
          ],
        },
        {
          name: "rewrite",
          description:
            "Create a new Block Blob where the content of the blob is read from a given URL",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--source-uri", "-u"],
              description:
                "A URL of up to 2 KB in length that specifies a file or blob. The value should be URL-encoded as it would appear in a request URI. If the source is in another account, the source must either be public or must be authenticated via a shared access signature. If the source is public, no authentication is required",
              args: { name: "source-uri" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--encryption-scope",
              description:
                "A predefined encryption scope used to encrypt the data on the service. An encryption scope can be created using the Management API and referenced here by name. If a default encryption scope has been defined at the container, this value will override it if the container-level scope is configured to allow overrides. Otherwise an error will be raised",
              args: { name: "encryption-scope" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description:
                "Required if the blob has an active lease. Value can be a BlobLeaseClient object or the lease ID as a string",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--tier",
              description:
                "A standard blob tier value to set the blob to. For this version of the library, this is only applicable to block blobs on standard storage accounts",
              args: {
                name: "tier",
                suggestions: [
                  "Archive",
                  "Cold",
                  "Cool",
                  "Hot",
                  "P10",
                  "P15",
                  "P20",
                  "P30",
                  "P4",
                  "P40",
                  "P50",
                  "P6",
                  "P60",
                  "P70",
                  "P80",
                ],
              },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "set-legal-hold",
          description: "Set blob legal hold",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: "--legal-hold",
              description:
                "Specified if a legal hold should be set on the blob",
              args: { name: "legal-hold", suggestions: ["false", "true"] },
              isRequired: true,
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "set-tier",
          description: "Set the block or page tiers on the blob",
          options: [
            {
              name: "--tier",
              description: "The tier value to set the blob to",
              args: { name: "tier" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: ["--rehydrate-priority", "-r"],
              description:
                "Indicate the priority with which to rehydrate an archived blob. The priority can be set on a blob only once, default value is Standard",
              args: {
                name: "rehydrate-priority",
                suggestions: ["High", "Standard"],
              },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "The timeout parameter is expressed in seconds. This method may make multiple calls to the Azure service and the timeout will apply to each call individually",
              args: { name: "timeout" },
            },
            {
              name: ["--type", "-t"],
              description: "The blob type",
              args: { name: "type", suggestions: ["block", "page"] },
            },
          ],
        },
        {
          name: "show",
          description: "Get the details of a blob",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve",
              args: { name: "snapshot" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "snapshot",
          description: "Creates a snapshot of the blob",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "sync",
          description: "Sync blobs recursively to a storage blob container",
          options: [
            {
              name: ["--container", "-c"],
              description: "The sync destination container",
              args: { name: "container" },
              isRequired: true,
            },
            {
              name: ["--source", "-s"],
              description: "The source file path to sync from",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--delete-destination",
              description:
                "Defines whether to delete extra files from the destination that are not present at the source. Could be set to true, false, or prompt. If set to prompt, the user will be asked a question before scheduling files and blobs for deletion",
              args: {
                name: "delete-destination",
                suggestions: ["false", "prompt", "true"],
              },
            },
            {
              name: ["--destination", "-d"],
              description:
                "The destination path that will be prepended to the blob name",
              args: { name: "destination" },
            },
            {
              name: "--exclude-path",
              description:
                "Exclude these paths. This option does not support wildcard characters (*). Checks relative path prefix. For example: myFolder;myFolder/subDirName/file.pdf",
              args: { name: "exclude-path" },
            },
            {
              name: "--exclude-pattern",
              description:
                "Exclude these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
              args: { name: "exclude-pattern" },
            },
            {
              name: "--include-pattern",
              description:
                "Include only these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
              args: { name: "include-pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
          ],
          args: {
            name: "<EXTRA_OPTIONS>",
            description:
              "Other options which will be passed through to azcopy as it is. Please put all the extra options after a --",
            isOptional: true,
          },
        },
        {
          name: "undelete",
          description: "Restore soft deleted blob or snapshot",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Sets system properties on the blob",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--clear-content-settings",
              description:
                "If this flag is set, then if any one or more of the following properties (--content-cache-control, --content-disposition, --content-encoding, --content-language, --content-md5, --content-type) is set, then all of these properties are set together. If a value is not provided for a given property when at least one of the properties listed below is set, then that property will be cleared",
              args: {
                name: "clear-content-settings",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "upload",
          description: "Upload a file to a storage blob",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--blob-url",
              description:
                "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
              args: { name: "blob-url" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--data",
              description: "The blob data to upload",
              args: { name: "data" },
            },
            {
              name: "--encryption-scope",
              description:
                "A predefined encryption scope used to encrypt the data on the service",
              args: { name: "encryption-scope" },
            },
            {
              name: ["--file", "-f"],
              description: "Path of the file to upload as the blob content",
              args: { name: "file" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description:
                "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "Required if the blob has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: "--length",
              description:
                "Number of bytes to read from the stream. This is optional, but should be supplied for optimal performance. Cooperate with --data",
              args: { name: "length" },
            },
            {
              name: "--max-connections",
              description:
                "Maximum number of parallel connections to use when the blob size exceeds 64MB",
              args: { name: "max-connections" },
            },
            {
              name: "--maxsize-condition",
              description:
                "The max length in bytes permitted for an append blob",
              args: { name: "maxsize-condition" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--overwrite",
              description:
                "Whether the blob to be uploaded should overwrite the current data. If True, blob upload operation will overwrite the existing data. If set to False, the operation will fail with ResourceExistsError. The exception to the above is with Append blob types: if set to False and the data already exists, an error will not be raised and the data will be appended to the existing blob. If set overwrite=True, then the existing append blob will be deleted, and a new one created. Defaults to False",
              args: { name: "overwrite", suggestions: ["false", "true"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--socket-timeout",
              description:
                "The socket timeout(secs), used by the service to regulate data flow",
              args: { name: "socket-timeout" },
            },
            {
              name: "--tags",
              description:
                'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags',
              args: { name: "tags" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--tier",
              description:
                "The tier value to set the blob to. For page blob, the tier correlates to the size of the blob and number of allowed IOPS. Possible values are P10, P15, P20, P30, P4, P40, P50, P6, P60, P70, P80 and this is only applicable to page blobs on premium storage accounts; For block blob, possible values are Archive, Cold, Cool, and Hot. This is only applicable to block blobs on standard storage accounts",
              args: { name: "tier" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: ["--type", "-t"],
              description:
                "Default to 'page' for *.vhd files, or 'block' otherwise",
              args: { name: "type", suggestions: ["append", "block", "page"] },
            },
            {
              name: "--validate-content",
              description:
                "Specify that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived",
            },
          ],
        },
        {
          name: "upload-batch",
          description:
            "Upload files from a local directory to a blob container",
          options: [
            {
              name: ["--destination", "-d"],
              description:
                "The blob container where the files will be uploaded",
              args: { name: "destination" },
              isRequired: true,
            },
            {
              name: ["--source", "-s"],
              description:
                "The directory where the files to be uploaded are located",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--destination-path",
              description:
                "The destination path that will be prepended to the blob name",
              args: { name: "destination-path" },
            },
            {
              name: "--dryrun",
              description:
                "Show the summary of the operations to be taken instead of actually uploading the file(s)",
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-none-match",
              description: "An ETag value, or the wildcard character (*)",
              args: { name: "if-none-match" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description: "The active lease id for the blob",
              args: { name: "lease-id" },
            },
            {
              name: "--max-connections",
              description:
                "Maximum number of parallel connections to use when the blob size exceeds 64MB",
              args: { name: "max-connections" },
            },
            {
              name: "--maxsize-condition",
              description:
                "The max length in bytes permitted for an append blob",
              args: { name: "maxsize-condition" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--overwrite",
              description:
                "Whether the blob to be uploaded should overwrite the current data. If True, blob upload operation will overwrite the existing data. If set to False, the operation will fail with ResourceExistsError. The exception to the above is with Append blob types: if set to False and the data already exists, an error will not be raised and the data will be appended to the existing blob. If set overwrite=True, then the existing append blob will be deleted, and a new one created. Defaults to False",
              args: { name: "overwrite", suggestions: ["false", "true"] },
            },
            {
              name: "--pattern",
              description:
                "The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--tags-condition",
              description:
                "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
              args: { name: "tags-condition" },
            },
            {
              name: "--tier",
              description:
                "The tier value to set the blob to. For page blob, the tier correlates to the size of the blob and number of allowed IOPS. Possible values are P10, P15, P20, P30, P4, P40, P50, P6, P60, P70, P80 and this is only applicable to page blobs on premium storage accounts; For block blob, possible values are Archive, Cold, Cool, and Hot. This is only applicable to block blobs on standard storage accounts",
              args: { name: "tier" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: ["--type", "-t"],
              description:
                "Defaults to 'page' for *.vhd files, or 'block' otherwise. The setting will override blob types for every file",
              args: { name: "type", suggestions: ["append", "block", "page"] },
            },
            {
              name: "--validate-content",
              description:
                "Specifies that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived",
            },
          ],
        },
        {
          name: "url",
          description: "Create the url to access a blob",
          options: [
            {
              name: ["--container-name", "-c"],
              description: "The container name",
              args: { name: "container-name" },
              isRequired: true,
            },
            {
              name: ["--name", "-n"],
              description: "The blob name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--protocol",
              description: "Protocol to use",
              args: { name: "protocol", suggestions: ["http", "https"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "An string value that uniquely identifies the snapshot. The value of this query parameter indicates the snapshot version",
              args: { name: "snapshot" },
            },
          ],
        },
        {
          name: "access",
          description:
            "Manage the access control properties of a blob when Hierarchical Namespace is enabled",
          subcommands: [
            {
              name: "set",
              description: "Set the access control properties of a blob",
              options: [
                {
                  name: ["--acl-spec", "-a"],
                  description:
                    'The ACL specification to set on the path in the format "[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,...". e.g."user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask::rwx"',
                  args: { name: "acl-spec" },
                  isRequired: true,
                },
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the path has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "show",
              description: "Show the access control properties of a blob",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the path has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--user-principle-names",
                  description:
                    'Valid only when Hierarchical Namespace is enabled for the account. If "true", the user identity values returned for owner, group, and acl will be transformed from Azure Active Directory Object IDs to User Principal Names. If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names',
                },
              ],
            },
            {
              name: "update",
              description: "Update the access control properties of a blob",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: ["--acl-spec", "-a"],
                  description:
                    'The ACL specification to set on the path in the format "[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,...". e.g."user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask::rwx"',
                  args: { name: "acl-spec" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--group",
                  description: "The owning group for the directory",
                  args: { name: "group" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the path has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--owner",
                  description: "The owning user for the directory",
                  args: { name: "owner" },
                },
                {
                  name: "--permissions",
                  description:
                    "The POSIX access permissions for the file owner,the file owning group, and others. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "copy",
          description:
            "Manage blob copy operations. Use az storage blob show to check the status of the blobs",
          subcommands: [
            {
              name: "cancel",
              description: "Abort an ongoing copy operation",
              options: [
                {
                  name: "--copy-id",
                  description:
                    "The copy operation to abort. This can be either an ID string, or an instance of BlobProperties",
                  args: { name: "copy-id" },
                  isRequired: true,
                },
                {
                  name: ["--destination-blob", "-b"],
                  description:
                    "Name of the destination blob. If it exists, it will be overwritten",
                  args: { name: "destination-blob" },
                  isRequired: true,
                },
                {
                  name: ["--destination-container", "-c"],
                  description: "The container name",
                  args: { name: "destination-container" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description:
                    "Required if the destination blob has an active infinite lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "start",
              description:
                "Copy a blob asynchronously. Use az storage blob show to check the status of the blobs",
              options: [
                {
                  name: ["--destination-blob", "-b"],
                  description:
                    "Name of the destination blob. If it exists, it will be overwritten",
                  args: { name: "destination-blob" },
                  isRequired: true,
                },
                {
                  name: ["--destination-container", "-c"],
                  description: "The container name",
                  args: { name: "destination-container" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--destination-blob-type",
                  description:
                    'Defines the type of blob at the destination. Value of "Detect" determines the type based on source blob type',
                  args: {
                    name: "destination-blob-type",
                    suggestions: [
                      "AppendBlob",
                      "BlockBlob",
                      "Detect",
                      "PageBlob",
                    ],
                  },
                },
                {
                  name: "--destination-if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "destination-if-match" },
                },
                {
                  name: "--destination-if-modified-since",
                  description:
                    "A DateTime value. Azure expects the date value passed in to be UTC. If timezone is included, any non-UTC datetimes will be converted to UTC. If a date is passed in without timezone info, it is assumed to be UTC. Specify this conditional header to copy the blob only if the destination blob has been modified since the specified date/time. If the destination blob has not been modified, the Blob service returns status code 412 (Precondition Failed)",
                  args: { name: "destination-if-modified-since" },
                },
                {
                  name: "--destination-if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "destination-if-none-match" },
                },
                {
                  name: "--destination-if-unmodified-since",
                  description:
                    "A DateTime value. Azure expects the date value passed in to be UTC. If timezone is included, any non-UTC datetimes will be converted to UTC. If a date is passed in without timezone info, it is assumed to be UTC. Specify this conditional header to copy the blob only if the destination blob has not been modified since the specified date/time. If the destination blob has been modified, the Blob service returns status code 412 (Precondition Failed)",
                  args: { name: "destination-if-unmodified-since" },
                },
                {
                  name: "--destination-lease-id",
                  description:
                    "The lease ID specified for this header must match the lease ID of the estination blob. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed)",
                  args: { name: "destination-lease-id" },
                },
                {
                  name: "--destination-tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "destination-tags-condition" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: ["--rehydrate-priority", "-r"],
                  description:
                    "Indicate the priority with which to rehydrate an archived blob",
                  args: { name: "rehydrate-priority" },
                },
                {
                  name: "--requires-sync",
                  description:
                    "Enforce that the service will not return a response until the copy is complete",
                  args: {
                    name: "requires-sync",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-account-key",
                  description: "The storage account key of the source blob",
                  args: { name: "source-account-key" },
                },
                {
                  name: "--source-account-name",
                  description: "The storage account name of the source blob",
                  args: { name: "source-account-name" },
                },
                {
                  name: "--source-blob",
                  description: "The blob name for the source storage account",
                  args: { name: "source-blob" },
                },
                {
                  name: "--source-container",
                  description:
                    "The container name for the source storage account",
                  args: { name: "source-container" },
                },
                {
                  name: "--source-if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "source-if-match" },
                },
                {
                  name: "--source-if-modified-since",
                  description:
                    "A DateTime value. Azure expects the date value passed in to be UTC. If timezone is included, any non-UTC datetimes will be converted to UTC. If a date is passed in without timezone info, it is assumed to be UTC. Specify this conditional header to copy the blob only if the source blob has been modified since the specified date/time",
                  args: { name: "source-if-modified-since" },
                },
                {
                  name: "--source-if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "source-if-none-match" },
                },
                {
                  name: "--source-if-unmodified-since",
                  description:
                    "A DateTime value. Azure expects the date value passed in to be UTC. If timezone is included, any non-UTC datetimes will be converted to UTC. If a date is passed in without timezone info, it is assumed to be UTC. Specify this conditional header to copy the blob only if the source blob has not been modified since the specified date/time",
                  args: { name: "source-if-unmodified-since" },
                },
                {
                  name: "--source-lease-id",
                  description:
                    "Specify this to perform the Copy Blob operation only if the lease ID given matches the active lease ID of the source blob",
                  args: { name: "source-lease-id" },
                },
                {
                  name: "--source-path",
                  description: "The file path for the source storage account",
                  args: { name: "source-path" },
                },
                {
                  name: "--source-sas",
                  description:
                    "The shared access signature for the source storage account",
                  args: { name: "source-sas" },
                },
                {
                  name: "--source-share",
                  description: "The share name for the source storage account",
                  args: { name: "source-share" },
                },
                {
                  name: "--source-snapshot",
                  description:
                    "The blob snapshot for the source storage account",
                  args: { name: "source-snapshot" },
                },
                {
                  name: "--source-tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "source-tags-condition" },
                },
                {
                  name: ["--source-uri", "-u"],
                  description:
                    "A URL of up to 2 KB in length that specifies an Azure file or blob. The value should be URL-encoded as it would appear in a request URI. If the source is in another account, the source must either be public or must be authenticated via a shared access signature. If the source is public, no authentication is required. Examples: https://myaccount.blob.core.windows.net/mycontainer/myblob, https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>, https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken",
                  args: { name: "source-uri" },
                },
                {
                  name: "--tags",
                  description:
                    'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags',
                  args: { name: "tags" },
                },
                {
                  name: "--tier",
                  description:
                    "The tier value to set the blob to. For page blob, the tier correlates to the size of the blob and number of allowed IOPS. Possible values are P10, P15, P20, P30, P4, P40, P50, P6, P60, P70, P80 and this is only applicable to page blobs on premium storage accounts; For block blob, possible values are Archive, Cold, Cool, and Hot. This is only applicable to block blobs on standard storage accounts",
                  args: { name: "tier" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "start-batch",
              description:
                "Copy multiple blobs to a blob container. Use az storage blob show to check the status of the blobs",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--destination-blob-type",
                  description:
                    'Defines the type of blob at the destination. Value of "Detect" determines the type based on source blob type',
                  args: {
                    name: "destination-blob-type",
                    suggestions: [
                      "AppendBlob",
                      "BlockBlob",
                      "Detect",
                      "PageBlob",
                    ],
                  },
                },
                {
                  name: ["--destination-container", "-c"],
                  description:
                    "The blob container where the selected source files or blobs will be copied to",
                  args: { name: "destination-container" },
                },
                {
                  name: "--destination-path",
                  description:
                    "The destination path that will be prepended to the blob name",
                  args: { name: "destination-path" },
                },
                {
                  name: "--dryrun",
                  description:
                    "List the files or blobs to be uploaded. No actual data transfer will occur",
                },
                {
                  name: "--pattern",
                  description:
                    "The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
                  args: { name: "pattern" },
                },
                {
                  name: ["--rehydrate-priority", "-r"],
                  description:
                    "Indicate the priority with which to rehydrate an archived blob",
                  args: { name: "rehydrate-priority" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-account-key",
                  description: "The account key for the source storage account",
                  args: { name: "source-account-key" },
                },
                {
                  name: "--source-account-name",
                  description:
                    "The source storage account from which the files or blobs are copied to the destination. If omitted, the destination account is used",
                  args: { name: "source-account-name" },
                },
                {
                  name: "--source-container",
                  description:
                    "The source container from which blobs are copied",
                  args: { name: "source-container" },
                },
                {
                  name: "--source-sas",
                  description:
                    "The shared access signature for the source storage account",
                  args: { name: "source-sas" },
                },
                {
                  name: "--source-share",
                  description: "The source share from which files are copied",
                  args: { name: "source-share" },
                },
                {
                  name: "--source-uri",
                  description:
                    "A URI specifying a file share or blob container from which the files or blobs are copied",
                  args: { name: "source-uri" },
                },
                {
                  name: "--tier",
                  description:
                    "The tier value to set the blob to. For page blob, the tier correlates to the size of the blob and number of allowed IOPS. Possible values are P10, P15, P20, P30, P4, P40, P50, P6, P60, P70, P80 and this is only applicable to page blobs on premium storage accounts; For block blob, possible values are Archive, Cold, Cool, and Hot. This is only applicable to block blobs on standard storage accounts",
                  args: { name: "tier" },
                },
              ],
            },
          ],
        },
        {
          name: "directory",
          description:
            "Manage blob directories in storage account container.\n\n\t\tTo use the directory commands, please make sure your storage account type is StorageV2",
          subcommands: [
            {
              name: "create",
              description:
                "Create a storage blob directory in a storage container",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--directory-path", "-d"],
                  description: "The directory path name",
                  args: { name: "directory-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description:
                    "Required if the directory to be overwritten has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--permissions",
                  description:
                    "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--umask",
                  description:
                    "Optional and only valid if Hierarchical Namespace is enabled for the account. The umask restricts permission settings for file and directory, and will only be applied when default Acl does not exist in parent directory. If the umask bit has set, it means that the corresponding permission will be disabled. In this way, the resulting permission is given by p & ^u, where p is the permission and u is the umask. Only 4-digit octal notation (e.g. 0022) is supported here",
                  args: { name: "umask" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a storage blob directory in a storage container",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--directory-path", "-d"],
                  description: "The directory path name",
                  args: { name: "directory-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--fail-not-exist",
                  description:
                    "Specify whether to throw an exception when the directory doesn't exist",
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag does not match the value specified",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the directory has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--marker",
                  description:
                    "Optional. When deleting a directory without the Hierarchical Namespace, the number of paths that are deleted with each invocation is limited. If the number of paths to be deleted exceeds this limit, a continuation token is returned. When a continuation token is returned, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory",
                  args: { name: "marker" },
                },
                {
                  name: "--recursive",
                  description:
                    'If "true", all paths beneath the directory will be deleted. If "false" and the directory is non-empty, an error occurs',
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "download",
              description: "Download blobs to a local file path",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The download source container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: ["--destination-path", "-d"],
                  description:
                    "The destination local directory path to download",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--source-path", "-s"],
                  description:
                    "The download source directory path. It should be an absolute path to container",
                  args: { name: "source-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--recursive", "-r"],
                  description:
                    "Recursively download blobs. If enabled, all the blobs including the blobs in subdirectories will be downloaded",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "exists",
              description:
                "Check for the existence of a blob directory in a storage container",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--directory-path", "-d"],
                  description: "The directory path name",
                  args: { name: "directory-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "The snapshot parameter is an opaque DateTime value that, when present, specifies the snapshot",
                  args: { name: "snapshot" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "list",
              description:
                "List blobs and blob subdirectories in a storage directory",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--directory-path", "-d"],
                  description: "The directory path name",
                  args: { name: "directory-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--delimiter",
                  description:
                    "When the request includes this parameter, the operation returns a :class:~azure.storage.blob.models.BlobPrefix element in the result list that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string",
                  args: { name: "delimiter" },
                },
                {
                  name: "--include",
                  description:
                    "Specifies one or more additional datasets to include in the response",
                  args: { name: "include" },
                },
                {
                  name: "--marker",
                  description:
                    "An opaque continuation token. This value can be retrieved from the next_marker field of a previous generator object if num_results was specified and that generator has finished enumerating results. If specified, this generator will begin returning results from the point where the previous generator stopped",
                  args: { name: "marker" },
                },
                {
                  name: "--num-results",
                  description:
                    'Specifies the maximum number of results to return. Provide "*" to return all',
                  args: { name: "num-results" },
                },
                {
                  name: "--prefix",
                  description:
                    "Filters the results to return only blobs whose names begin with the specified prefix",
                  args: { name: "prefix" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "move",
              description:
                "Move a storage directory to another storage blob directory in a storage container",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--destination-path", "-d"],
                  description:
                    "The destination blob directory path. It can be a directory or subdirectory name, e.g. dir, dir/subdir. If the destination path exists and is empty, the source will be moved into the destination path. If the destination path does not exist, the destination path will be created and overwritten by the source. To control the move operation for nonempty path, you can use --move-mode to determine its behavior",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--source-path", "-s"],
                  description: "The source blob directory path",
                  args: { name: "source-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description:
                    "A lease ID for destination directory_path. The destination directory_path must have an active lease and the lease ID must match",
                  args: { name: "lease-id" },
                },
                {
                  name: "--move-mode",
                  description:
                    "Valid only when namespace is enabled. This parameter determines the behavior of the move operation. If the destination directory is empty, for both two mode, the destination directory will be overwritten. But if the destination directory is not empty, in legacy mode the move operation will fail and in posix mode, the source directory will be moved into the destination directory",
                  args: { name: "move-mode", suggestions: ["legacy", "posix"] },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-if-match",
                  description:
                    "Optional. An ETag value. Specify this header to perform the move operation only if the source's ETag matches the value specified",
                  args: { name: "source-if-match" },
                },
                {
                  name: "--source-if-modified-since",
                  description:
                    "Optional. A date and time value. Specify this header to perform the move operation only if the source has been modified since the specified date and time",
                  args: { name: "source-if-modified-since" },
                },
                {
                  name: "--source-if-none-match",
                  description:
                    'Optional. An ETag value or the special wildcard ("*") value. Specify this header to perform the move operation only if the source\'s ETag does not match the value specified',
                  args: { name: "source-if-none-match" },
                },
                {
                  name: "--source-if-unmodified-since",
                  description:
                    "Optional. A date and time value. Specify this header to perform the move operation only if the source has not been modified since the specified date and time",
                  args: { name: "source-if-unmodified-since" },
                },
                {
                  name: "--source-lease-id",
                  description:
                    "Optional. A lease ID for the source_path. The source_path must have an active lease and the lease ID must match",
                  args: { name: "source-lease-id" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show a storage blob directory properties in a storage container",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--directory-path", "-d"],
                  description: "The directory path name",
                  args: { name: "directory-path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform theoperation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to performthe operation only if the resource's ETag does not match the value specified. Specify the wildcardcharacter () to perform the operation only if the resource does not exist, and fail the operationif it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "upload",
              description:
                "Upload blobs or subdirectories to a storage blob directory",
              options: [
                {
                  name: ["--container", "-c"],
                  description: "The upload destination container",
                  args: { name: "container" },
                  isRequired: true,
                },
                {
                  name: ["--destination-path", "-d"],
                  description:
                    "The destination path that will be prepended to the blob name",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--source", "-s"],
                  description: "The source file path to upload from",
                  args: { name: "source" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--recursive", "-r"],
                  description:
                    "Recursively upload blobs. If enabled, all the blobs including the blobs in subdirectories will be uploaded",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "access",
              description:
                "Manage the access control properties of a directory when Hierarchical Namespace is enabled",
              subcommands: [
                {
                  name: "set",
                  description:
                    "Set the access control properties of a directory",
                  options: [
                    {
                      name: ["--acl-spec", "-a"],
                      description:
                        'The ACL specification to set on the path in the format "[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,...". e.g."user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask::rwx"',
                      args: { name: "acl-spec" },
                      isRequired: true,
                    },
                    {
                      name: ["--container-name", "-c"],
                      description: "The container name",
                      args: { name: "container-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--directory-path", "-d"],
                      description: "The directory path name",
                      args: { name: "directory-path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--if-match",
                      description:
                        "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                      args: { name: "if-match" },
                    },
                    {
                      name: "--if-modified-since",
                      description:
                        "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-modified-since" },
                    },
                    {
                      name: "--if-none-match",
                      description:
                        'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                      args: { name: "if-none-match" },
                    },
                    {
                      name: "--if-unmodified-since",
                      description:
                        "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-unmodified-since" },
                    },
                    {
                      name: "--lease-id",
                      description: "Required if the path has an active lease",
                      args: { name: "lease-id" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
                {
                  name: "show",
                  description:
                    "Show the access control properties of a directory",
                  options: [
                    {
                      name: ["--container-name", "-c"],
                      description: "The container name",
                      args: { name: "container-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--directory-path", "-d"],
                      description: "The directory path name",
                      args: { name: "directory-path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--if-match",
                      description:
                        "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                      args: { name: "if-match" },
                    },
                    {
                      name: "--if-modified-since",
                      description:
                        "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-modified-since" },
                    },
                    {
                      name: "--if-none-match",
                      description:
                        'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                      args: { name: "if-none-match" },
                    },
                    {
                      name: "--if-unmodified-since",
                      description:
                        "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-unmodified-since" },
                    },
                    {
                      name: "--lease-id",
                      description: "Required if the path has an active lease",
                      args: { name: "lease-id" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                    {
                      name: "--user-principle-names",
                      description:
                        'Valid only when Hierarchical Namespace is enabled for the account. If "true", the user identity values returned for owner, group, and acl will be transformed from Azure Active Directory Object IDs to User Principal Names. If "false", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names',
                    },
                  ],
                },
                {
                  name: "update",
                  description:
                    "Update the access control properties of a directory",
                  options: [
                    {
                      name: ["--container-name", "-c"],
                      description: "The container name",
                      args: { name: "container-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--directory-path", "-d"],
                      description: "The directory path name",
                      args: { name: "directory-path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: ["--acl-spec", "-a"],
                      description:
                        'The ACL specification to set on the path in the format "[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,[default:]user|group|other|mask:[entity id or UPN]:r|-w|-x|-,...". e.g."user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask::rwx"',
                      args: { name: "acl-spec" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--group",
                      description: "The owning group for the directory",
                      args: { name: "group" },
                    },
                    {
                      name: "--if-match",
                      description:
                        "An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes",
                      args: { name: "if-match" },
                    },
                    {
                      name: "--if-modified-since",
                      description:
                        "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-modified-since" },
                    },
                    {
                      name: "--if-none-match",
                      description:
                        'An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource\'s ETag does not match the value specified. The ETag must be specified in quotes',
                      args: { name: "if-none-match" },
                    },
                    {
                      name: "--if-unmodified-since",
                      description:
                        "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-unmodified-since" },
                    },
                    {
                      name: "--lease-id",
                      description: "Required if the path has an active lease",
                      args: { name: "lease-id" },
                    },
                    {
                      name: "--owner",
                      description: "The owning user for the directory",
                      args: { name: "owner" },
                    },
                    {
                      name: "--permissions",
                      description:
                        "The POSIX access permissions for the file owner,the file owning group, and others. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported",
                      args: { name: "permissions" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
              ],
            },
            {
              name: "metadata",
              description: "Manage directory metadata",
              subcommands: [
                {
                  name: "show",
                  description:
                    "Show all user-defined metadata for the specified blob directory",
                  options: [
                    {
                      name: ["--container-name", "-c"],
                      description: "The container name",
                      args: { name: "container-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--directory-path", "-d"],
                      description: "The directory path name",
                      args: { name: "directory-path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--cpk",
                      description:
                        "Decrypts the data on the service-side with the given key. Use of customer-provided keys must be done over HTTPS. As the encryption key itself is provided in the request, a secure connection must be established to transfer the key",
                      args: { name: "cpk" },
                    },
                    {
                      name: "--if-match",
                      description:
                        "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                      args: { name: "if-match" },
                    },
                    {
                      name: "--if-modified-since",
                      description:
                        "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-modified-since" },
                    },
                    {
                      name: "--if-none-match",
                      description:
                        "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                      args: { name: "if-none-match" },
                    },
                    {
                      name: "--if-unmodified-since",
                      description:
                        "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-unmodified-since" },
                    },
                    {
                      name: "--lease-id",
                      description: "Required if the blob has an active lease",
                      args: { name: "lease-id" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--snapshot",
                      description:
                        "The snapshot parameter is an opaque value that, when present, specifies the blob snapshot to retrieve",
                      args: { name: "snapshot" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
                {
                  name: "update",
                  description:
                    "Set user-defined metadata for the specified blob directory as one or more name-value pairs",
                  options: [
                    {
                      name: ["--container-name", "-c"],
                      description: "The container name",
                      args: { name: "container-name" },
                      isRequired: true,
                    },
                    {
                      name: ["--directory-path", "-d"],
                      description: "The directory path name",
                      args: { name: "directory-path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--cpk",
                      description:
                        "Encrypts the data on the service-side with the given key. Use of customer-provided keys must be done over HTTPS. As the encryption key itself is provided in the request, a secure connection must be established to transfer the key",
                      args: { name: "cpk" },
                    },
                    {
                      name: "--if-match",
                      description:
                        "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                      args: { name: "if-match" },
                    },
                    {
                      name: "--if-modified-since",
                      description:
                        "Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-modified-since" },
                    },
                    {
                      name: "--if-none-match",
                      description:
                        "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                      args: { name: "if-none-match" },
                    },
                    {
                      name: "--if-unmodified-since",
                      description:
                        "Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                      args: { name: "if-unmodified-since" },
                    },
                    {
                      name: "--lease-id",
                      description: "Required if the blob has an active lease",
                      args: { name: "lease-id" },
                    },
                    {
                      name: "--metadata",
                      description:
                        "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                      args: { name: "metadata" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "immutability-policy",
          description: "Manage blob immutability policy",
          subcommands: [
            {
              name: "delete",
              description: "Delete blob's immutability policy",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "set",
              description: "Set blob's immutability policy",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry-time",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry-time" },
                },
                {
                  name: "--policy-mode",
                  description: "Lock or Unlock the policy",
                  args: {
                    name: "policy-mode",
                    suggestions: ["Locked", "Unlocked"],
                  },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "incremental-copy",
          description: "Manage blob incremental copy operations",
          subcommands: [
            {
              name: "cancel",
              description:
                "Aborts a pending copy_blob operation, and leaves a destination blob with zero length and full metadata",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--copy-id",
                  description:
                    "Copy identifier provided in the copy.id of the original copy_blob operation",
                  args: { name: "copy-id" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description:
                    "Required if the destination blob has an active infinite lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "start",
              description:
                "Copies an incremental copy of a blob asynchronously",
              options: [
                {
                  name: ["--destination-blob", "-b"],
                  description:
                    "Name of the destination blob. If the exists, it will be overwritten",
                  args: { name: "destination-blob" },
                  isRequired: true,
                },
                {
                  name: ["--destination-container", "-c"],
                  description: "The container name",
                  args: { name: "destination-container" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--destination-if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify an ETag value for this conditional header to copy the blob only if the specified ETag value matches the ETag value for an existing destination blob. If the ETag for the destination blob does not match the ETag specified for If-Match, the Blob service returns status code 412 (Precondition Failed)",
                  args: { name: "destination-if-match" },
                },
                {
                  name: "--destination-if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "destination-if-modified-since" },
                },
                {
                  name: "--destination-if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify an ETag value for this conditional header to copy the blob only if the specified ETag value does not match the ETag value for the destination blob. Specify the wildcard character () to perform the operation only if the destination blob does not exist. If the specified condition isn't met, the Blob service returns status code 412 (Precondition Failed)",
                  args: { name: "destination-if-none-match" },
                },
                {
                  name: "--destination-if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "destination-if-unmodified-since" },
                },
                {
                  name: "--destination-lease-id",
                  description:
                    "The lease ID specified for this header must match the lease ID of the destination blob. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed)",
                  args: { name: "destination-lease-id" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-account-key",
                  description: "The storage account key of the source blob",
                  args: { name: "source-account-key" },
                },
                {
                  name: "--source-account-name",
                  description: "The storage account name of the source blob",
                  args: { name: "source-account-name" },
                },
                {
                  name: "--source-blob",
                  description: "The blob name for the source storage account",
                  args: { name: "source-blob" },
                },
                {
                  name: "--source-container",
                  description:
                    "The container name for the source storage account",
                  args: { name: "source-container" },
                },
                {
                  name: "--source-lease-id",
                  description:
                    "Specify this to perform the Copy Blob operation only if the lease ID given matches the active lease ID of the source blob",
                  args: { name: "source-lease-id" },
                },
                {
                  name: "--source-sas",
                  description:
                    "The shared access signature for the source storage account",
                  args: { name: "source-sas" },
                },
                {
                  name: "--source-snapshot",
                  description:
                    "The blob snapshot for the source storage account",
                  args: { name: "source-snapshot" },
                },
                {
                  name: ["--source-uri", "-u"],
                  description:
                    "A URL of up to 2 KB in length that specifies an Azure page blob. The value should be URL-encoded as it would appear in a request URI. The copy source must be a snapshot and include a valid SAS token or be public. Example: https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>&sastoken",
                  args: { name: "source-uri" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "lease",
          description: "Manage storage blob leases",
          subcommands: [
            {
              name: "acquire",
              description: "Request a new lease",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-duration",
                  description:
                    "Specify the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. Default is -1 (infinite lease)",
                  args: { name: "lease-duration" },
                },
                {
                  name: "--proposed-lease-id",
                  description:
                    "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format",
                  args: { name: "proposed-lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "break",
              description:
                "Break the lease, if the container or blob has an active lease",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-break-period",
                  description:
                    "This is the proposed duration of seconds that the lease should continue before it is broken, between 0 and 60 seconds. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately",
                  args: { name: "lease-break-period" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "change",
              description: "Change the lease ID of an active lease",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--proposed-lease-id",
                  description:
                    "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format",
                  args: { name: "proposed-lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "release",
              description: "Release the lease",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "renew",
              description: "Renew the lease",
              options: [
                {
                  name: ["--blob-name", "-b"],
                  description: "The blob name",
                  args: { name: "blob-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage blob metadata",
          subcommands: [
            {
              name: "show",
              description:
                "Return all user-defined metadata for the specified blob or snapshot",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--blob-url",
                  description:
                    "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
                  args: { name: "blob-url" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve",
                  args: { name: "snapshot" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Sets user-defined metadata for the blob as one or more name-value pairs",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--blob-url",
                  description:
                    "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
                  args: { name: "blob-url" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description: "Required if the blob has an active lease",
                  args: { name: "lease-id" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve",
                  args: { name: "snapshot" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "service-properties",
          description: "Manage storage blob service properties",
          subcommands: [
            {
              name: "show",
              description:
                "Gets the properties of a storage account's Blob service, including Azure Storage Analytics",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update",
              description: "Update storage blob service properties",
              options: [
                {
                  name: "--404-document",
                  description:
                    "Represents the path to the error document that should be shown when an error 404 is issued, in other words, when a browser requests a page that does not exist",
                  args: { name: "404-document" },
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--add",
                  description:
                    "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
                  args: { name: "add" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--delete-retention",
                  description: "Enables soft-delete",
                  args: {
                    name: "delete-retention",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--delete-retention-period",
                  description:
                    "Number of days that soft-deleted blob will be retained. Must be in range [1,365]",
                  args: { name: "delete-retention-period" },
                },
                {
                  name: "--force-string",
                  description:
                    "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
                },
                {
                  name: "--index-document",
                  description:
                    'Represents the name of the index document. This is commonly "index.html"',
                  args: { name: "index-document" },
                },
                {
                  name: "--remove",
                  description:
                    "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
                  args: { name: "remove" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--set",
                  description:
                    "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
                  args: { name: "set" },
                },
                {
                  name: "--static-website",
                  description: "Enables static-website",
                  args: {
                    name: "static-website",
                    suggestions: ["false", "true"],
                  },
                },
              ],
            },
            {
              name: "delete-policy",
              description:
                "Manage storage blob delete-policy service properties",
              subcommands: [
                {
                  name: "show",
                  description: "Show the storage blob delete-policy",
                  options: [
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                  ],
                },
                {
                  name: "update",
                  description: "Update the storage blob delete-policy",
                  options: [
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--days-retained",
                      description:
                        "Number of days that soft-deleted blob will be retained. Must be in range [1,365]",
                      args: { name: "days-retained" },
                    },
                    {
                      name: "--enable",
                      description: "Enables/disables soft-delete",
                      args: { name: "enable", suggestions: ["false", "true"] },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "tag",
          description: "Manage blob tags",
          subcommands: [
            {
              name: "list",
              description:
                "Get tags on a blob or specific blob version, or snapshot",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--blob-url",
                  description:
                    "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
                  args: { name: "blob-url" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve",
                  args: { name: "snapshot" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--version-id",
                  description:
                    "An optional blob version ID. This parameter is only for versioning enabled account",
                  args: { name: "version-id" },
                },
              ],
            },
            {
              name: "set",
              description:
                "Set tags on a blob or specific blob version, but not snapshot",
              options: [
                {
                  name: "--tags",
                  description:
                    "Space-separated tags: key[=value] [key[=value] ...]. Tags are case-sensitive. The tag set may contain at most 10 tags. Tag keys must be between 1 and 128 characters, and tag values must be between 0 and 256 characters. Valid tag key and value characters include: lowercase and uppercase letters, digits (0-9), space ( ), plus (+), minus (-), period (.), solidus (/), colon (:), equals (=), underscore (_)",
                  args: { name: "tags" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--blob-url",
                  description:
                    "The full endpoint URL to the Blob, including SAS token and snapshot if used. This could be either the primary endpoint, or the secondary endpoint depending on the current location_mode",
                  args: { name: "blob-url" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                },
                {
                  name: ["--name", "-n"],
                  description: "The blob name",
                  args: { name: "name" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--version-id",
                  description:
                    "An optional blob version ID. This parameter is only for versioning enabled account",
                  args: { name: "version-id" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "container",
      description:
        "Manage blob storage containers.\n\n\t\tPlease specify one of the following authentication parameters for your commands: --auth-mode, --account-key, --connection-string, --sas-token. You also can use corresponding environment variables to store your authentication credentials, e.g. AZURE_STORAGE_KEY, AZURE_STORAGE_CONNECTION_STRING and AZURE_STORAGE_SAS_TOKEN",
      subcommands: [
        {
          name: "create",
          description: "Create a container in a storage account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--default-encryption-scope", "-d"],
              description:
                "Default the container to use specified encryption scope for all writes",
              args: { name: "default-encryption-scope" },
            },
            {
              name: "--fail-on-exist",
              description: "Throw an exception if the container already exists",
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--prevent-encryption-scope-override", "-p"],
              description:
                "Block override of encryption scope from the container default",
              args: {
                name: "prevent-encryption-scope-override",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--public-access",
              description:
                "Specifies whether data in the container may be accessed publicly",
              args: {
                name: "public-access",
                suggestions: ["blob", "container", "off"],
              },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Argument 'resource_group_name' has been deprecated and will be removed in a future release. Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description: "Mark the specified container for deletion",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--bypass-immutability-policy",
              description:
                'Bypasses upcoming service behavior that will block a container from being deleted if it has a immutability-policy. Specifying this will ignore arguments aside from those used to identify the container ("--name", "--account-name")',
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-not-exist",
              description: "Throw an exception if the container does not exist",
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description:
                "If specified, delete_container only succeeds if the container's lease is active and matches this ID. Required if the container has an active lease",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a storage container",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "generate-sas",
          description: "Generate a SAS token for a storage container",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--as-user",
              description:
                "Indicates that this command return the SAS signed with the user delegation key. The expiry parameter and '--auth-mode login' are required if this argument is specified",
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--cache-control",
              description:
                "Response header value for Cache-Control when resource is accessed using this shared access signature",
              args: { name: "cache-control" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--content-disposition",
              description:
                "Response header value for Content-Disposition when resource is accessed using this shared access signature",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description:
                "Response header value for Content-Encoding when resource is accessed using this shared access signature",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description:
                "Response header value for Content-Language when resource is accessed using this shared access signature",
              args: { name: "content-language" },
            },
            {
              name: "--content-type",
              description:
                "Response header value for Content-Type when resource is accessed using this shared access signature",
              args: { name: "content-type" },
            },
            {
              name: "--encryption-scope",
              description:
                "A predefined encryption scope used to encrypt the data on the service",
              args: { name: "encryption-scope" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (a)dd (c)reate (d)elete (e)xecute (f)ilter_by_tags (i)set_immutability_policy (l)ist (m)ove (r)ead (t)ag (w)rite (x)delete_previous_version (y)permanent_delete. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the container's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
          ],
        },
        {
          name: "list",
          description: "List containers in a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--include-deleted",
              description:
                "Specify that deleted containers to be returned in the response. This is for container restore enabled account. The default value is False",
            },
            {
              name: "--include-metadata",
              description:
                "Specify that container metadata to be returned in the response",
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description:
                'Specify the maximum number to return. If the request does not specify num_results, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remaining of the results. Provide "*" to return all',
              args: { name: "num-results" },
            },
            {
              name: "--prefix",
              description:
                "Filter the results to return only blobs whose name begins with the specified prefix",
              args: { name: "prefix" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--show-next-marker",
              description: "Show nextMarker in result when specified",
              args: { name: "show-next-marker" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "restore",
          description: "Restore soft-deleted container",
          options: [
            {
              name: "--deleted-version",
              description:
                "Specify the version of the deleted container to restore",
              args: { name: "deleted-version" },
              isRequired: true,
            },
            {
              name: ["--name", "-n"],
              description:
                "Specify the name of the deleted container to restore",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "set-permission",
          description: "Set the permissions for the specified container",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--if-modified-since",
              description:
                "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-modified-since" },
            },
            {
              name: "--if-unmodified-since",
              description:
                "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
              args: { name: "if-unmodified-since" },
            },
            {
              name: "--lease-id",
              description:
                "If specified, only succeed if the container's lease is active and matches this ID",
              args: { name: "lease-id" },
            },
            {
              name: "--public-access",
              description:
                "Specifies whether data in the container may be accessed publicly",
              args: {
                name: "public-access",
                suggestions: ["blob", "container", "off"],
              },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description:
            "Return all user-defined metadata and system properties for the specified container",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--lease-id",
              description:
                "If specified, only succeed if the container's lease is active and matches this ID",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show-permission",
          description: "Get the permissions for the specified container",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--lease-id",
              description:
                "If specified, only succeed if the container's lease is active and matches this ID",
              args: { name: "lease-id" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "immutability-policy",
          description: "Manage container immutability policies",
          subcommands: [
            {
              name: "create",
              description: "Create or update an unlocked immutability policy",
              options: [
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--allow-protected-append-writes", "-w"],
                  description:
                    "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API",
                  args: {
                    name: "allow-protected-append-writes",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--allow-protected-append-writes-all", "--w-all"],
                  description:
                    "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Block Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive",
                  args: {
                    name: "allow-protected-append-writes-all",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--period",
                  description:
                    "The immutability period for the blobs in the container since the policy creation, in days",
                  args: { name: "period" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "delete",
              description: "Aborts an unlocked immutability policy",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. Required",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--if-match",
                  description:
                    'The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. Required',
                  args: { name: "if-match" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "extend",
              description:
                "Extend the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy",
              options: [
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                  isRequired: true,
                },
                {
                  name: ["--allow-protected-append-writes", "-w"],
                  description:
                    "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API",
                  args: {
                    name: "allow-protected-append-writes",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--allow-protected-append-writes-all", "--w-all"],
                  description:
                    "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Block Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive",
                  args: {
                    name: "allow-protected-append-writes-all",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--period",
                  description:
                    "The immutability period for the blobs in the container since the policy creation, in days",
                  args: { name: "period" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "lock",
              description: "Sets the ImmutabilityPolicy to Locked state",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. Required",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--if-match",
                  description:
                    'The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. Required',
                  args: { name: "if-match" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Gets the existing immutability policy along with the corresponding ETag in response headers and body",
              options: [
                {
                  name: "--account-name",
                  description:
                    "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. Required",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--if-match",
                  description:
                    'The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. Default value is None',
                  args: { name: "if-match" },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
          ],
        },
        {
          name: "lease",
          description: "Manage blob storage container leases",
          subcommands: [
            {
              name: "acquire",
              description: "Request a new lease",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-duration",
                  description:
                    "Specify the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. Default is -1 (infinite lease)",
                  args: { name: "lease-duration" },
                },
                {
                  name: "--proposed-lease-id",
                  description:
                    "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format",
                  args: { name: "proposed-lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "break",
              description:
                "Break the lease, if the container has an active lease",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-break-period",
                  description:
                    "This is the proposed duration of seconds that the lease should continue before it is broken, between 0 and 60 seconds. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately",
                  args: { name: "lease-break-period" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "change",
              description: "Change the lease ID of an active lease",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Lease ID for active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--proposed-lease-id",
                  description:
                    "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format",
                  args: { name: "proposed-lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "release",
              description: "Release the lease",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Lease ID for active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "renew",
              description: "Renew the lease",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--lease-id",
                  description: "Lease ID for active lease",
                  args: { name: "lease-id" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character () to perform the operation only if the resource does not exist, and fail the operation if it does exist",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--tags-condition",
                  description:
                    "Specify a SQL where clause on blob tags to operate only on blobs with a matching value",
                  args: { name: "tags-condition" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "legal-hold",
          description: "Manage container legal holds",
          subcommands: [
            {
              name: "clear",
              description: "Clear legal hold tags",
              options: [
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--tags",
                  description:
                    "Space-separated tags. Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case",
                  args: { name: "tags" },
                  isRequired: true,
                },
                {
                  name: ["--allow-protected-append-writes-all", "--w-all"],
                  description:
                    "When enabled, new blocks can be written to both Append and Block Blobs while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted",
                  args: {
                    name: "allow-protected-append-writes-all",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "set",
              description: "Set legal hold tags",
              options: [
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--tags",
                  description:
                    "Space-separated tags. Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case",
                  args: { name: "tags" },
                  isRequired: true,
                },
                {
                  name: ["--allow-protected-append-writes-all", "--w-all"],
                  description:
                    "When enabled, new blocks can be written to both Append and Block Blobs while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted",
                  args: {
                    name: "allow-protected-append-writes-all",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
            {
              name: "show",
              description: "Get the legal hold properties of a container",
              options: [
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT",
                  args: { name: "account-name" },
                  isRequired: true,
                },
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--resource-group", "-g"],
                  description:
                    "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
                  args: { name: "resource-group" },
                },
              ],
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage container metadata",
          subcommands: [
            {
              name: "show",
              description:
                "Return all user-defined metadata for the specified container",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The container name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description:
                    "If specified, only succeed if the container's lease is active and matches this ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Set one or more user-defined name-value pairs for the specified container",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The container name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--lease-id",
                  description:
                    "If specified, only succeed if the container's lease is active and matches this ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "policy",
          description: "Manage container stored access policies",
          subcommands: [
            {
              name: "create",
              description:
                "Create a stored access policy on the containing object",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--lease-id",
                  description: "The container lease ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (a)dd (c)reate (d)elete (e)xecute (f)ilter_by_tags (i)set_immutability_policy (l)ist (m)ove (r)ead (t)ag (w)rite (x)delete_previous_version (y)permanent_delete. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a stored access policy on a containing object",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description: "The container lease ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "list",
              description: "List stored access policies on a containing object",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description: "The container lease ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "show",
              description: "Show a stored access policy on a containing object",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--lease-id",
                  description: "The container lease ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update",
              description: "Set a stored access policy on a containing object",
              options: [
                {
                  name: ["--container-name", "-c"],
                  description: "The container name",
                  args: { name: "container-name" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--lease-id",
                  description: "The container lease ID",
                  args: { name: "lease-id" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (a)dd (c)reate (d)elete (e)xecute (f)ilter_by_tags (i)set_immutability_policy (l)ist (m)ove (r)ead (t)ag (w)rite (x)delete_previous_version (y)permanent_delete. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "container-rm",
      description:
        "Manage Azure containers using the Microsoft.Storage resource provider",
      subcommands: [
        {
          name: "create",
          description:
            "Create a new container under the specified storage account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
              isRequired: true,
            },
            {
              name: ["--default-encryption-scope", "-d"],
              description:
                "Default the container to use specified encryption scope for all writes",
              args: { name: "default-encryption-scope" },
            },
            {
              name: ["--deny-encryption-scope-override", "--deny-override"],
              description:
                "Block override of encryption scope from the container default",
              args: {
                name: "deny-encryption-scope-override",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--enable-vlw",
              description:
                "The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process",
              args: { name: "enable-vlw", suggestions: ["false", "true"] },
            },
            {
              name: "--fail-on-exist",
              description: "Throw an exception if the container already exists",
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--public-access",
              description:
                "Specify whether data in the container may be accessed publicly",
              args: {
                name: "public-access",
                suggestions: ["blob", "container", "off"],
              },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--root-squash",
              description: "Enable NFSv3 squash on blob container",
              args: {
                name: "root-squash",
                suggestions: ["AllSquash", "NoRootSquash", "RootSquash"],
              },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete the specified container under its account",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: ["--yes", "-y"],
              description: "Do not prompt for confirmation",
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a container",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "list",
          description:
            "List all containers under the specified storage account",
          options: [
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
              isRequired: true,
            },
            {
              name: "--include-deleted",
              description: "Include soft deleted containers when specified",
              args: { name: "include-deleted" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
          ],
        },
        {
          name: "migrate-vlw",
          description:
            "Migrate a blob container from container level WORM to object level immutability enabled container",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
            },
            {
              name: "--no-wait",
              description:
                "Do not wait for the long-running operation to finish",
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "show",
          description: "Show the properties for a specified container",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "update",
          description: "Update the properties for a container",
          options: [
            {
              name: "--add",
              description:
                "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
              args: { name: "add" },
            },
            {
              name: "--force-string",
              description:
                "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--name", "-n"],
              description: "The container name",
              args: { name: "name" },
            },
            {
              name: "--public-access",
              description:
                "Specify whether data in the container may be accessed publicly",
              args: {
                name: "public-access",
                suggestions: ["blob", "container", "off"],
              },
            },
            {
              name: "--remove",
              description:
                "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
              args: { name: "remove" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--root-squash",
              description: "Enable NFSv3 squash on blob container",
              args: {
                name: "root-squash",
                suggestions: ["AllSquash", "NoRootSquash", "RootSquash"],
              },
            },
            {
              name: "--set",
              description:
                "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
              args: { name: "set" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
      ],
    },
    {
      name: "copy",
      description: "Copy files or directories to or from Azure storage",
      options: [
        {
          name: "--account-key",
          description:
            "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
          args: { name: "account-key" },
        },
        {
          name: "--account-name",
          description: "Storage account name of copy destination",
          args: { name: "account-name" },
        },
        {
          name: "--blob-type",
          description: "The type of blob at the destination",
          args: {
            name: "blob-type",
            suggestions: ["AppendBlob", "BlockBlob", "PageBlob"],
          },
        },
        {
          name: "--cap-mbps",
          description:
            "Caps the transfer rate, in megabits per second. Moment-by-moment throughput might vary slightly from the cap. If this option is set to zero, or it is omitted, the throughput isn't capped",
          args: { name: "cap-mbps" },
        },
        {
          name: "--connection-string",
          description:
            "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
          args: { name: "connection-string" },
        },
        {
          name: "--content-type",
          description: "Specify content type of the file",
          args: { name: "content-type" },
        },
        {
          name: ["--destination", "-d"],
          description:
            "The path/url of copy destination. It can be a local path, an url to azure storage server. If you provide destination parameter here, you do not need to provide arguments in copy destination arguments group and copy destination arguments will be deprecated in future",
          args: { name: "destination" },
        },
        {
          name: "--destination-account-name",
          description:
            "Option '--destination-account-name' has been deprecated and will be removed in a future release. Use '--account-name' instead. Storage account name of copy destination",
          args: { name: "destination-account-name" },
        },
        {
          name: "--destination-blob",
          description:
            "Blob name in blob container of copy destination storage account",
          args: { name: "destination-blob" },
        },
        {
          name: "--destination-container",
          description: "Container name of copy destination storage account",
          args: { name: "destination-container" },
        },
        {
          name: "--destination-file-path",
          description:
            "File path in file share of copy destination storage account",
          args: { name: "destination-file-path" },
        },
        {
          name: "--destination-local-path",
          description:
            "Option '--destination-local-path' has been deprecated and will be removed in a future release. Use '--destination' instead. The path/url of copy destination. It can be a local path, an url to azure storage server. If you provide destination parameter here, you do not need to provide arguments in copy destination arguments group and copy destination arguments will be deprecated in future",
          args: { name: "destination-local-path" },
        },
        {
          name: "--destination-share",
          description: "File share name of copy destination storage account",
          args: { name: "destination-share" },
        },
        {
          name: "--exclude-path",
          description:
            "Exclude these paths. This option does not support wildcard characters (*). Checks relative path prefix. For example: myFolder;myFolder/subDirName/file.pdf",
          args: { name: "exclude-path" },
        },
        {
          name: "--exclude-pattern",
          description:
            "Exclude these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
          args: { name: "exclude-pattern" },
        },
        {
          name: "--follow-symlinks",
          description:
            "Follow symbolic links when uploading from local file system",
          args: { name: "follow-symlinks" },
        },
        {
          name: "--include-path",
          description:
            "Include only these paths. This option does not support wildcard characters (*). Checks relative path prefix. For example:myFolder;myFolder/subDirName/file.pdf",
          args: { name: "include-path" },
        },
        {
          name: "--include-pattern",
          description:
            "Include only these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
          args: { name: "include-pattern" },
        },
        {
          name: "--preserve-s2s-access-tier",
          description:
            "Preserve access tier during service to service copy. Please refer to https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers to ensure destination storage account support setting access tier. In the cases that setting access tier is not supported, please use --preserve-s2s-access-tier false to bypass copying access tier. (Default true)",
          args: {
            name: "preserve-s2s-access-tier",
            suggestions: ["false", "true"],
          },
        },
        {
          name: "--put-md5",
          description:
            "Create an MD5 hash of each file, and save the hash as the Content-MD5 property of the destination blob/file.Only available when uploading",
          args: { name: "put-md5" },
        },
        {
          name: ["--recursive", "-r"],
          description: "Look into sub-directories recursively",
          args: { name: "recursive" },
        },
        {
          name: "--sas-token",
          description:
            "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
          args: { name: "sas-token" },
        },
        {
          name: ["--source", "-s"],
          description:
            "The path/url of copy source. It can be a local path, an url to azure storage server or AWS S3 buckets. If you provide source parameter here, you do not need to provide arguments in copy source arguments group and copy source arguments will be deprecated in future",
          args: { name: "source" },
        },
        {
          name: "--source-account-key",
          description:
            "Account key of copy source storage account. Must be used in conjunction with source storage account name",
          args: { name: "source-account-key" },
        },
        {
          name: "--source-account-name",
          description: "Account name of copy source storage account",
          args: { name: "source-account-name" },
        },
        {
          name: "--source-blob",
          description:
            "Blob name in blob container of copy source storage account",
          args: { name: "source-blob" },
        },
        {
          name: ["--source-connection-string", "--src-conn"],
          description: "Connection string of source storage account",
          args: { name: "source-connection-string" },
        },
        {
          name: "--source-container",
          description: "Container name of copy source storage account",
          args: { name: "source-container" },
        },
        {
          name: "--source-file-path",
          description: "File path in file share of copy source storage account",
          args: { name: "source-file-path" },
        },
        {
          name: "--source-local-path",
          description:
            "Option '--source-local-path' has been deprecated and will be removed in a future release. Use '--source' instead. The path/url of copy source. It can be a local path, an url to azure storage server or AWS S3 buckets. If you provide source parameter here, you do not need to provide arguments in copy source arguments group and copy source arguments will be deprecated in future",
          args: { name: "source-local-path" },
        },
        {
          name: "--source-sas",
          description:
            "Shared Access Signature (SAS) token of copy source. Must be used in conjunction with source storage account name",
          args: { name: "source-sas" },
        },
        {
          name: "--source-share",
          description: "File share name of copy source storage account",
          args: { name: "source-share" },
        },
      ],
      args: {
        name: "<EXTRA_OPTIONS>",
        description:
          "Other options which will be passed through to azcopy as it is. Please put all the extra options after a --",
        isOptional: true,
      },
    },
    {
      name: "remove",
      description: "Delete blobs or files from Azure Storage",
      options: [
        {
          name: "--account-key",
          description:
            "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
          args: { name: "account-key" },
        },
        {
          name: "--account-name",
          description:
            "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
          args: { name: "account-name" },
        },
        {
          name: "--connection-string",
          description:
            "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
          args: { name: "connection-string" },
        },
        {
          name: ["--container-name", "-c"],
          description: "The container name",
          args: { name: "container-name" },
        },
        {
          name: "--exclude-path",
          description:
            "Exclude these paths. This option does not support wildcard characters (*). Checks relative path prefix. For example: myFolder;myFolder/subDirName/file.pdf",
          args: { name: "exclude-path" },
        },
        {
          name: "--exclude-pattern",
          description:
            "Exclude these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
          args: { name: "exclude-pattern" },
        },
        {
          name: "--include-path",
          description:
            "Include only these paths. This option does not support wildcard characters (*). Checks relative path prefix. For example:myFolder;myFolder/subDirName/file.pdf",
          args: { name: "include-path" },
        },
        {
          name: "--include-pattern",
          description:
            "Include only these files where the name matches the pattern list. For example: .jpg;.pdf;exactName. This option supports wildcard characters (*)",
          args: { name: "include-pattern" },
        },
        {
          name: ["--name", "-n"],
          description: "The blob name",
          args: { name: "name" },
        },
        {
          name: ["--path", "-p"],
          description: "The path to the file within the file share",
          args: { name: "path" },
        },
        {
          name: ["--recursive", "-r"],
          description: "Look into sub-directories recursively",
          args: { name: "recursive" },
        },
        {
          name: "--sas-token",
          description:
            "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
          args: { name: "sas-token" },
        },
        {
          name: ["--share-name", "-s"],
          description: "The file share name",
          args: { name: "share-name" },
        },
      ],
    },
    {
      name: "cors",
      description:
        "Manage storage service Cross-Origin Resource Sharing (CORS)",
      subcommands: [
        {
          name: "add",
          description: "Add a CORS rule to a storage account",
          options: [
            {
              name: "--methods",
              description:
                "Space-separated list of HTTP methods allowed to be executed by the origin",
              args: { name: "methods" },
              isRequired: true,
            },
            {
              name: "--origins",
              description:
                "Space-separated list of origin domains that will be allowed via CORS, or '*' to allow all domains",
              args: { name: "origins" },
              isRequired: true,
            },
            {
              name: "--services",
              description:
                "The storage service(s) to add rules to. Allowed options are: (b)lob, (f)ile, (q)ueue, (t)able. Can be combined",
              args: { name: "services" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--allowed-headers",
              description:
                "Space-separated list of response headers allowed to be part of the cross-origin request",
              args: { name: "allowed-headers" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--exposed-headers",
              description:
                "Space-separated list of response headers to expose to CORS clients",
              args: { name: "exposed-headers" },
            },
            {
              name: "--max-age",
              description:
                "The maximum number of seconds the client/browser should cache a preflight response",
              args: { name: "max-age" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "clear",
          description: "Remove all CORS rules from a storage account",
          options: [
            {
              name: "--services",
              description:
                "The storage service(s) to remove rules from. Allowed options are: (b)lob, (f)ile, (q)ueue, (t)able. Can be combined",
              args: { name: "services" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "list",
          description: "List all CORS rules for a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--services",
              description:
                "The storage service(s) to list rules for. Allowed options are: (b)lob, (f)ile, (q)ueue, (t)able. Can be combined",
              args: { name: "services" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
      ],
    },
    {
      name: "directory",
      description: "Manage file storage directories",
      subcommands: [
        {
          name: "create",
          description:
            "Create a new directory under the specified share or parent directory",
          options: [
            {
              name: ["--name", "-n"],
              description: "The directory name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-on-exist",
              description: "Throw an exception if the directory already exists",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete the specified empty directory",
          options: [
            {
              name: ["--name", "-n"],
              description: "The directory name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-not-exist",
              description: "Throw an exception if the directory does not exist",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a storage directory",
          options: [
            {
              name: ["--name", "-n"],
              description: "The directory name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "list",
          description: "List directories in a share",
          options: [
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--exclude-extended-info",
              description:
                'Specify to exclude "timestamps", "Etag", "Attributes", "PermissionKey" info from response',
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: ["--name", "-n"],
              description: "The directory name",
              args: { name: "name" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description:
            "Get all user-defined metadata and system properties for the specified directory",
          options: [
            {
              name: ["--name", "-n"],
              description: "The directory name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage file storage directory metadata",
          subcommands: [
            {
              name: "show",
              description:
                "Get all user-defined metadata for the specified directory",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The directory name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "A string that represents the snapshot version, if applicable",
                  args: { name: "snapshot" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Set one or more user-defined name-value pairs for the specified directory",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The directory name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "A string that represents the snapshot version, if applicable",
                  args: { name: "snapshot" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "entity",
      description: "Manage table storage entities",
      subcommands: [
        {
          name: "delete",
          description: "Delete an existing entity in a table",
          options: [
            {
              name: "--partition-key",
              description: "The PartitionKey of the entity",
              args: { name: "partition-key" },
              isRequired: true,
            },
            {
              name: "--row-key",
              description: "The RowKey of the entity",
              args: { name: "row-key" },
              isRequired: true,
            },
            {
              name: ["--table-name", "-t"],
              description: "The table name",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "insert",
          description: "Insert an entity into a table",
          options: [
            {
              name: ["--entity", "-e"],
              description:
                "Space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey",
              args: { name: "entity" },
              isRequired: true,
            },
            {
              name: ["--table-name", "-t"],
              description: "The name of the table to insert the entity into",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--if-exists",
              description:
                "Behavior when an entity already exists for the specified PartitionKey and RowKey",
              args: {
                name: "if-exists",
                suggestions: ["fail", "merge", "replace"],
              },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "merge",
          description:
            "Update an existing entity by merging the entity's properties",
          options: [
            {
              name: ["--entity", "-e"],
              description:
                "Space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey",
              args: { name: "entity" },
              isRequired: true,
            },
            {
              name: ["--table-name", "-t"],
              description: "The table name",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "query",
          description: "List entities which satisfy a query",
          options: [
            {
              name: ["--table-name", "-t"],
              description: "The table name",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--filter",
              description: "Specify a filter to return certain entities",
              args: { name: "filter" },
            },
            {
              name: "--marker",
              description:
                "Space-separated list of key=value pairs. Must contain a nextpartitionkey and a nextrowkey",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description: "Number of entities returned per service request",
              args: { name: "num-results" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--select",
              description:
                "Space-separated list of properties to return for each entity",
              args: { name: "select" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "replace",
          description: "Update an existing entity in a table",
          options: [
            {
              name: ["--entity", "-e"],
              description:
                "Space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey",
              args: { name: "entity" },
              isRequired: true,
            },
            {
              name: ["--table-name", "-t"],
              description: "The table name",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--if-match",
              description:
                "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
              args: { name: "if-match" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "show",
          description: "Get a single entity in a table",
          options: [
            {
              name: "--partition-key",
              description: "The PartitionKey of the entity",
              args: { name: "partition-key" },
              isRequired: true,
            },
            {
              name: "--row-key",
              description: "The RowKey of the entity",
              args: { name: "row-key" },
              isRequired: true,
            },
            {
              name: ["--table-name", "-t"],
              description: "The table name",
              args: { name: "table-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--select",
              description:
                "Space-separated list of properties to return for each entity",
              args: { name: "select" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
      ],
    },
    {
      name: "file",
      description: "Manage file shares that use the SMB 3.0 protocol",
      subcommands: [
        {
          name: "delete",
          description: "Mark the specified file for deletion",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete-batch",
          description: "Delete files from an Azure Storage File Share",
          options: [
            {
              name: ["--source", "-s"],
              description:
                "The source of the file delete operation. The source can be the file share URL or the share name",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--dryrun",
              description:
                "List the files and blobs to be deleted. No actual data deletion will occur",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--pattern",
              description:
                "The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "download",
          description:
            "Download a file to a file path, with automatic chunking and progress notifications",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--dest",
              description:
                "Path of the file to write to. The source filename will be used if not specified",
              args: { name: "dest" },
            },
            {
              name: "--end-range",
              description:
                "End of byte range to use for downloading a section of the file. If --end-range is given, --start-range must be provided. The --start-range and --end-range params are inclusive. Ex: --start-range=0, --end-range=511 will download first 512 bytes of file",
              args: { name: "end-range" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--max-connections",
              description: "Maximum number of parallel connections to use",
              args: { name: "max-connections" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--open-mode",
              description:
                "Mode to use when opening the file. Note that specifying append only open_mode prevents parallel download. So, --max-connections must be set to 1 if this --open-mode is used",
              args: { name: "open-mode" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--start-range",
              description:
                "Start of byte range to use for downloading a section of the file. If no --end-range is given, all bytes after the --start-range will be downloaded. The --start-range and --end-range params are inclusive. Ex: --start-range=0, --end-range=511 will download first 512 bytes of file",
              args: { name: "start-range" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--validate-content",
              description:
                "If set to true, validates an MD5 hash for each retrieved portion of the file. This is primarily valuable for detecting bitflips on the wire if using http instead of https as https (the default) will already validate. As computing the MD5 takes processing time and more requests will need to be done due to the reduced chunk size there may be some increase in latency",
              args: { name: "validate-content" },
            },
          ],
        },
        {
          name: "download-batch",
          description:
            "Download files from an Azure Storage File Share to a local directory in a batch operation",
          options: [
            {
              name: ["--destination", "-d"],
              description:
                "The local directory where the files are downloaded to. This directory must already exist",
              args: { name: "destination" },
              isRequired: true,
            },
            {
              name: ["--source", "-s"],
              description:
                "The source of the file download operation. The source can be the file share URL or the share name",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--dryrun",
              description:
                "List the files and blobs to be downloaded. No actual data transfer will occur",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--max-connections",
              description:
                "The maximum number of parallel connections to use. Default value is 1",
              args: { name: "max-connections" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--pattern",
              description:
                "The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--validate-content",
              description:
                "If set, calculates an MD5 hash for each range of the file for validation",
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a file",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "generate-sas",
          description: "Generate a shared access signature for the file",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--cache-control",
              description:
                "Response header value for Cache-Control when resource is accessed using this shared access signature",
              args: { name: "cache-control" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--content-disposition",
              description:
                "Response header value for Content-Disposition when resource is accessed using this shared access signature",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description:
                "Response header value for Content-Encoding when resource is accessed using this shared access signature",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description:
                "Response header value for Content-Language when resource is accessed using this shared access signature",
              args: { name: "content-language" },
            },
            {
              name: "--content-type",
              description:
                "Response header value for Content-Type when resource is accessed using this shared access signature",
              args: { name: "content-type" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (c)reate (d)elete (r)ead (w)rite. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the container's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
          ],
        },
        {
          name: "list",
          description: "List files and directories in a share",
          options: [
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--exclude-dir",
              description: "List only files in the given share",
            },
            {
              name: "--exclude-extended-info",
              description:
                'Specify to exclude "timestamps", "Etag", "Attributes", "PermissionKey" info from response',
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description:
                'Specify the maximum number to return. If the request does not specify num_results, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remaining of the results. Provide "*" to return all',
              args: { name: "num-results" },
            },
            {
              name: ["--path", "-p"],
              description: "The directory path within the file share",
              args: { name: "path" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "resize",
          description: "Resize a file to the specified size",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--size",
              description: "Size to resize file to (in bytes)",
              args: { name: "size" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description:
            "Return all user-defined metadata, standard HTTP properties, and system properties for the file",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Set system properties on the file",
          options: [
            {
              name: ["--path", "-p"],
              description: "The path to the file within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--clear-content-settings",
              description:
                "If this flag is set, then if any one or more of the following properties (--content-cache-control, --content-disposition, --content-encoding, --content-language, --content-md5, --content-type) is set, then all of these properties are set together. If a value is not provided for a given property when at least one of the properties listed below is set, then that property will be cleared",
              args: {
                name: "clear-content-settings",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "upload",
          description:
            "Upload a file to a share that uses the SMB 3.0 protocol",
          options: [
            {
              name: "--source",
              description:
                "Path of the local file to upload as the file content",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--file-url",
              description:
                "The full endpoint URL to the File, including SAS token if used",
              args: { name: "file-url" },
            },
            {
              name: "--max-connections",
              description: "Maximum number of parallel connections to use",
              args: { name: "max-connections" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: ["--path", "-p"],
              description:
                "The path to the file within the file share. If the file name is omitted, the source file name will be used",
              args: { name: "path" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--validate-content",
              description:
                "If true, calculates an MD5 hash for each range of the file. The storage service checks the hash of the content that has arrived with the hash that was sent. This is primarily valuable for detecting bitflips on the wire if using http instead of https as https (the default) will already validate. Note that this MD5 hash is not stored with the file",
            },
          ],
        },
        {
          name: "upload-batch",
          description:
            "Upload files from a local directory to an Azure Storage File Share in a batch operation",
          options: [
            {
              name: ["--destination", "-d"],
              description: "The destination of the upload operation",
              args: { name: "destination" },
              isRequired: true,
            },
            {
              name: ["--source", "-s"],
              description: "The directory to upload files from",
              args: { name: "source" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--content-cache-control", "--content-cache"],
              description: "The cache control string",
              args: { name: "content-cache-control" },
            },
            {
              name: "--content-disposition",
              description:
                "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description: "The content encoding type",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description: "The content language",
              args: { name: "content-language" },
            },
            {
              name: "--content-md5",
              description: "The content's MD5 hash",
              args: { name: "content-md5" },
            },
            {
              name: "--content-type",
              description: "The content MIME type",
              args: { name: "content-type" },
            },
            {
              name: "--destination-path",
              description:
                "The directory where the source data is copied to. If omitted, data is copied to the root directory",
              args: { name: "destination-path" },
            },
            {
              name: "--dryrun",
              description:
                "List the files and blobs to be uploaded. No actual data transfer will occur",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--max-connections",
              description:
                "The maximum number of parallel connections to use. Default value is 1",
              args: { name: "max-connections" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--no-progress",
              description:
                "Include this flag to disable progress reporting for the command",
            },
            {
              name: "--pattern",
              description:
                "The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
              args: { name: "pattern" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--validate-content",
              description:
                "If set, calculates an MD5 hash for each range of the file for validation",
            },
          ],
        },
        {
          name: "url",
          description: "Create the url to access a file",
          options: [
            {
              name: ["--path", "-p"],
              description:
                "The path to the file/directory within the file share",
              args: { name: "path" },
              isRequired: true,
            },
            {
              name: ["--share-name", "-s"],
              description: "The file share name",
              args: { name: "share-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--protocol",
              description: "Protocol to use",
              args: { name: "protocol", suggestions: ["http", "https"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
          ],
        },
        {
          name: "copy",
          description: "Manage file copy operations",
          subcommands: [
            {
              name: "cancel",
              description: "Abort an ongoing copy operation",
              options: [
                {
                  name: "--copy-id",
                  description:
                    "The copy operation to abort. This can be either an ID, or an instance of FileProperties",
                  args: { name: "copy-id" },
                  isRequired: true,
                },
                {
                  name: ["--destination-path", "-p"],
                  description: "The path to the file within the file share",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--destination-share", "-s"],
                  description:
                    "Name of the destination share. The share must exist",
                  args: { name: "destination-share" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "start",
              description: "Copy a file asynchronously",
              options: [
                {
                  name: ["--destination-path", "-p"],
                  description: "The path to the file within the file share",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--destination-share", "-s"],
                  description:
                    "Name of the destination share. The share must exist",
                  args: { name: "destination-share" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--file-snapshot",
                  description:
                    "The file snapshot for the source storage account",
                  args: { name: "file-snapshot" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-account-key",
                  description: "The storage account key of the source blob",
                  args: { name: "source-account-key" },
                },
                {
                  name: "--source-account-name",
                  description: "The storage account name of the source blob",
                  args: { name: "source-account-name" },
                },
                {
                  name: "--source-blob",
                  description: "The blob name for the source storage account",
                  args: { name: "source-blob" },
                },
                {
                  name: "--source-container",
                  description:
                    "The container name for the source storage account",
                  args: { name: "source-container" },
                },
                {
                  name: "--source-path",
                  description: "The file path for the source storage account",
                  args: { name: "source-path" },
                },
                {
                  name: "--source-sas",
                  description:
                    "The shared access signature for the source storage account",
                  args: { name: "source-sas" },
                },
                {
                  name: "--source-share",
                  description: "The share name for the source storage account",
                  args: { name: "source-share" },
                },
                {
                  name: "--source-snapshot",
                  description:
                    "The blob snapshot for the source storage account",
                  args: { name: "source-snapshot" },
                },
                {
                  name: ["--source-uri", "-u"],
                  description:
                    "A URL of up to 2 KB in length that specifies an Azure file or blob. The value should be URL-encoded as it would appear in a request URI. If the source is in another account, the source must either be public or must be authenticated via a shared access signature. If the source is public, no authentication is required. Examples: https://myaccount.file.core.windows.net/myshare/mydir/myfile https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken",
                  args: { name: "source-uri" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "start-batch",
              description: "Copy multiple files or blobs to a file share",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--destination-path",
                  description:
                    "The directory where the source data is copied to. If omitted, data is copied to the root directory",
                  args: { name: "destination-path" },
                },
                {
                  name: "--destination-share",
                  description:
                    "The file share where the source data is copied to",
                  args: { name: "destination-share" },
                },
                {
                  name: "--dryrun",
                  description:
                    "List the files and blobs to be copied. No actual data transfer will occur",
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--pattern",
                  description:
                    "The pattern used for globbing files and blobs. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html",
                  args: { name: "pattern" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--source-account-key",
                  description:
                    "The account key for the source storage account. If omitted, the active login is used to determine the account key",
                  args: { name: "source-account-key" },
                },
                {
                  name: "--source-account-name",
                  description:
                    "The source storage account to copy the data from. If omitted, the destination account is used",
                  args: { name: "source-account-name" },
                },
                {
                  name: "--source-container",
                  description: "The source container blobs are copied from",
                  args: { name: "source-container" },
                },
                {
                  name: "--source-sas",
                  description:
                    "The shared access signature for the source storage account",
                  args: { name: "source-sas" },
                },
                {
                  name: "--source-share",
                  description: "The source share files are copied from",
                  args: { name: "source-share" },
                },
                {
                  name: "--source-uri",
                  description:
                    "A URI that specifies a the source file share or blob container",
                  args: { name: "source-uri" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage file metadata",
          subcommands: [
            {
              name: "show",
              description: "Return all user-defined metadata for the file",
              options: [
                {
                  name: ["--path", "-p"],
                  description: "The path to the file within the file share",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "A string that represents the snapshot version, if applicable",
                  args: { name: "snapshot" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description: "Update file metadata",
              options: [
                {
                  name: ["--path", "-p"],
                  description: "The path to the file within the file share",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: [
                    "--enable-file-backup-request-intent",
                    "--backup-intent",
                  ],
                  description:
                    "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "fs",
      description:
        "Manage file systems in Azure Data Lake Storage Gen2 account",
      subcommands: [
        {
          name: "create",
          description:
            "Create file system for Azure Data Lake Storage Gen2 account",
          options: [
            {
              name: ["--name", "-n"],
              description: "File system name (i.e. container name)",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: ["--default-encryption-scope", "-d"],
              description:
                "Specify the default encryption scope to set on the file system and use for all future writes",
              args: { name: "default-encryption-scope" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--prevent-encryption-scope-override", "-p"],
              description:
                "If true, prevents any request from specifying a different encryption scope than the scope set on the file system. Default value is false",
              args: {
                name: "prevent-encryption-scope-override",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--public-access",
              description:
                "Specify whether data in the file system may be accessed publicly and the level of access",
              args: {
                name: "public-access",
                suggestions: ["file", "filesystem", "off"],
              },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete a file system in ADLS Gen2 account",
          options: [
            {
              name: ["--name", "-n"],
              description: "File system name (i.e. container name)",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: ["--yes", "-y"],
              description: "Do not prompt for confirmation",
            },
          ],
        },
        {
          name: "exists",
          description:
            "Check for the existence of a file system in ADLS Gen2 account",
          options: [
            {
              name: ["--name", "-n"],
              description: "File system name (i.e. container name)",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "generate-sas",
          description:
            "Generate a SAS token for file system in ADLS Gen2 account",
          options: [
            {
              name: ["--name", "-n"],
              description: "File system name (i.e. container name)",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--as-user",
              description:
                "Indicates that this command return the SAS signed with the user delegation key. The expiry parameter and '--auth-mode login' are required if this argument is specified",
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--cache-control",
              description:
                "Response header value for Cache-Control when resource is accessedusing this shared access signature",
              args: { name: "cache-control" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--content-disposition",
              description:
                "Response header value for Content-Disposition when resource is accessedusing this shared access signature",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description:
                "Response header value for Content-Encoding when resource is accessedusing this shared access signature",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description:
                "Response header value for Content-Language when resource is accessedusing this shared access signature",
              args: { name: "content-language" },
            },
            {
              name: "--content-type",
              description:
                "Response header value for Content-Type when resource is accessedusing this shared access signature",
              args: { name: "content-type" },
            },
            {
              name: "--encryption-scope",
              description:
                "Specify the encryption scope for a request made so that all write operations will be service encrypted",
              args: { name: "encryption-scope" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--full-uri",
              description:
                "Indicate that this command return the full blob URI and the shared access signature token",
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (a)dd (c)reate (d)elete (e)xecute (l)ist (m)ove (o)wnership (p)ermissions (r)ead (w)rite. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description: "The name of a stored access policy",
              args: { name: "policy-name" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
          ],
        },
        {
          name: "list",
          description: "List file systems in ADLS Gen2 account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--include-metadata",
              description:
                'Specify that file system metadata be returned in the response. The default value is "False"',
              args: {
                name: "include-metadata",
                suggestions: ["false", "true"],
              },
            },
            {
              name: "--prefix",
              description:
                "Filter the results to return only file systems whose names begin with the specified prefix",
              args: { name: "prefix" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
          ],
        },
        {
          name: "list-deleted-path",
          description:
            "List the deleted (file or directory) paths under the specified file system",
          options: [
            {
              name: ["--file-system", "-f"],
              description: "File system name",
              args: { name: "file-system" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description: "Specify the maximum number to return",
              args: { name: "num-results" },
            },
            {
              name: "--path-prefix",
              description:
                "Filter the results to return only paths under the specified path",
              args: { name: "path-prefix" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description: "Show properties of file system in ADLS Gen2 account",
          options: [
            {
              name: ["--name", "-n"],
              description: "File system name (i.e. container name)",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "undelete-path",
          description: "Restore soft-deleted path",
          options: [
            {
              name: "--deleted-path-name",
              description: "Specifies the path (file or directory) to restore",
              args: { name: "deleted-path-name" },
              isRequired: true,
            },
            {
              name: "--deletion-id",
              description:
                "Specifies the version of the deleted path to restore. :keyword int timeout: The timeout parameter is expressed in seconds",
              args: { name: "deletion-id" },
              isRequired: true,
            },
            {
              name: ["--file-system", "-f"],
              description: "File system name",
              args: { name: "file-system" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--blob-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "blob-endpoint" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "access",
          description:
            "Manage file system access and permissions for Azure Data Lake Storage Gen2 account",
          subcommands: [
            {
              name: "remove-recursive",
              description:
                "Remove the Access Control on a path and sub-paths in Azure Data Lake Storage Gen2 account",
              options: [
                {
                  name: "--acl",
                  description:
                    'Remove POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, and a user or group identifier in the format "[scope:][type]:[id]"',
                  args: { name: "acl" },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The path to a file or directory in the specified file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--batch-size",
                  description:
                    "Optional. If data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000",
                  args: { name: "batch-size" },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--continuation",
                  description:
                    "Optional continuation token that can be used to resume previously stopped operation",
                  args: { name: "continuation" },
                },
                {
                  name: "--continue-on-failure",
                  description:
                    "If set to False, the operation will terminate quickly on encountering user errors (4XX). If True, the operation will ignore user errors and proceed with the operation on other sub-entities of the directory. Continuation token will only be returned when --continue-on-failure is True in case of user errors. If not set the default value is False for this",
                  args: {
                    name: "continue-on-failure",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--max-batches",
                  description:
                    "Optional. Define maximum number of batches that single change Access Control operation can execute. If maximum is reached before all sub-paths are processed, then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end",
                  args: { name: "max-batches" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "set",
              description:
                "Set the access control properties of a path(directory or file) in Azure Data Lake Storage Gen2 account",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The path to a file or directory in the specified file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--acl",
                  description:
                    'Invalid in conjunction with acl. POSIX access control rights on files and directories in the format "[scope:][type]:[id]:[permissions]". e.g. "user::rwx,group::r--,other::---,mask::rwx"',
                  args: { name: "acl" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--group",
                  description:
                    "The owning group of the file or directory. The group Azure Active Directory object ID or user principal name to set as the owning group. For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#changing-the-owning-group",
                  args: { name: "group" },
                },
                {
                  name: "--owner",
                  description:
                    "The owning user of the file or directory. The user Azure Active Directory object ID or user principal name to set as the owner. For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#the-owning-user",
                  args: { name: "owner" },
                },
                {
                  name: "--permissions",
                  description:
                    "Invalid in conjunction with acl. POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read(r), write(w), or execute(x) permission. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.'",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "set-recursive",
              description:
                "Set the Access Control on a path and sub-paths in Azure Data Lake Storage Gen2 account",
              options: [
                {
                  name: "--acl",
                  description:
                    'The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]". For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control',
                  args: { name: "acl" },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The path to a file or directory in the specified file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--batch-size",
                  description:
                    "Optional. If data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000",
                  args: { name: "batch-size" },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--continuation",
                  description:
                    "Optional continuation token that can be used to resume previously stopped operation",
                  args: { name: "continuation" },
                },
                {
                  name: "--continue-on-failure",
                  description:
                    "If set to False, the operation will terminate quickly on encountering user errors (4XX). If True, the operation will ignore user errors and proceed with the operation on other sub-entities of the directory. Continuation token will only be returned when --continue-on-failure is True in case of user errors. If not set the default value is False for this",
                  args: {
                    name: "continue-on-failure",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--max-batches",
                  description:
                    "Optional. Define maximum number of batches that single change Access Control operation can execute. If maximum is reached before all sub-paths are processed, then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end",
                  args: { name: "max-batches" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show the access control properties of a path (directory or file) in Azure Data Lake Storage Gen2 account",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The path to a file or directory in the specified file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update-recursive",
              description:
                "Modify the Access Control on a path and sub-paths in Azure Data Lake Storage Gen2 account",
              options: [
                {
                  name: "--acl",
                  description:
                    'The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]". For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control',
                  args: { name: "acl" },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The path to a file or directory in the specified file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--batch-size",
                  description:
                    "Optional. If data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000",
                  args: { name: "batch-size" },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--continuation",
                  description:
                    "Optional continuation token that can be used to resume previously stopped operation",
                  args: { name: "continuation" },
                },
                {
                  name: "--continue-on-failure",
                  description:
                    "If set to False, the operation will terminate quickly on encountering user errors (4XX). If True, the operation will ignore user errors and proceed with the operation on other sub-entities of the directory. Continuation token will only be returned when --continue-on-failure is True in case of user errors. If not set the default value is False for this",
                  args: {
                    name: "continue-on-failure",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: "--max-batches",
                  description:
                    "Optional. Define maximum number of batches that single change Access Control operation can execute. If maximum is reached before all sub-paths are processed, then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end",
                  args: { name: "max-batches" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "directory",
          description:
            "Manage directories in Azure Data Lake Storage Gen2 account",
          subcommands: [
            {
              name: "create",
              description: "Create a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--permissions",
                  description:
                    "POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read (4), write (2), or execute (1) permission. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. The sticky bit is also supported and in symbolic notation, its represented either by the letter t or T in the final character-place depending on whether the execution bit for the others category is set or unset respectively (e.g. rwxrw-rw- with sticky bit is represented as rwxrw-rwT. A rwxrw-rwx with sticky bit is represented as rwxrw-rwt), absence of t or T indicates sticky bit not set. In 4-digit octal notation, its represented by 1st digit (e.g. 1766 represents rwxrw-rw- with sticky bit and 0766 represents rwxrw-rw- without sticky bit). For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#levels-of-permission",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--umask",
                  description:
                    "When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created. The resulting permission is given by p & ^u, where p is the permission and u is the umask. For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#umask",
                  args: { name: "umask" },
                },
              ],
            },
            {
              name: "delete",
              description: "Delete a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: ["--yes", "-y"],
                  description: "Do not prompt for confirmation",
                },
              ],
            },
            {
              name: "download",
              description:
                "Download files from the directory in ADLS Gen2 file system to a local file path",
              options: [
                {
                  name: ["--destination-path", "-d"],
                  description:
                    "The destination local directory path to download",
                  args: { name: "destination-path" },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "The download source file system",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--recursive", "-r"],
                  description:
                    "Recursively download files. If enabled, all the files including the files in subdirectories will be downloaded",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: ["--source-path", "-s"],
                  description:
                    "The download source directory path. It should be an absolute path to file system",
                  args: { name: "source-path" },
                },
              ],
            },
            {
              name: "exists",
              description:
                "Check for the existence of a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "generate-sas",
              description:
                "Generate a SAS token for directory in ADLS Gen2 account",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--as-user",
                  description:
                    "Indicates that this command return the SAS signed with the user delegation key. The expiry parameter and '--auth-mode login' are required if this argument is specified",
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--cache-control",
                  description:
                    "Response header value for Cache-Control when resource is accessedusing this shared access signature",
                  args: { name: "cache-control" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--content-disposition",
                  description:
                    "Response header value for Content-Disposition when resource is accessedusing this shared access signature",
                  args: { name: "content-disposition" },
                },
                {
                  name: "--content-encoding",
                  description:
                    "Response header value for Content-Encoding when resource is accessedusing this shared access signature",
                  args: { name: "content-encoding" },
                },
                {
                  name: "--content-language",
                  description:
                    "Response header value for Content-Language when resource is accessedusing this shared access signature",
                  args: { name: "content-language" },
                },
                {
                  name: "--content-type",
                  description:
                    "Response header value for Content-Type when resource is accessedusing this shared access signature",
                  args: { name: "content-type" },
                },
                {
                  name: "--encryption-scope",
                  description:
                    "Specify the encryption scope for a request made so that all write operations will be service encrypted",
                  args: { name: "encryption-scope" },
                },
                {
                  name: "--expiry",
                  description:
                    "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
                  args: { name: "expiry" },
                },
                {
                  name: "--full-uri",
                  description:
                    "Indicate that this command return the full blob URI and the shared access signature token",
                },
                {
                  name: "--https-only",
                  description:
                    "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
                  args: { name: "https-only" },
                },
                {
                  name: "--ip",
                  description:
                    "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
                  args: { name: "ip" },
                },
                {
                  name: "--permissions",
                  description:
                    "The permissions the SAS grants. Allowed values: (a)dd (c)reate (d)elete (e)xecute (l)ist (m)ove (o)wnership (p)ermissions (r)ead (w)rite. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--policy-name",
                  description: "The name of a stored access policy",
                  args: { name: "policy-name" },
                },
                {
                  name: "--start",
                  description:
                    "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
                  args: { name: "start" },
                },
              ],
            },
            {
              name: "list",
              description: "List directories in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--num-results",
                  description:
                    "Specify the maximum number of results to return",
                  args: { name: "num-results" },
                },
                {
                  name: "--path",
                  description:
                    "Filter the results to return only paths under the specified path",
                  args: { name: "path" },
                },
                {
                  name: "--recursive",
                  description:
                    "Look into sub-directories recursively when set to true",
                  args: { name: "recursive", suggestions: ["false", "true"] },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "move",
              description: "Move a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--new-directory", "-d"],
                  description:
                    'The new directory name the users want to move to. The value must have the following format: "{filesystem}/{directory}/{subdirectory}"',
                  args: { name: "new-directory" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "show",
              description:
                "Show properties of a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "The name of directory",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "upload",
              description:
                "Upload files or subdirectories to a directory in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "The upload destination file system",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--source", "-s"],
                  description: "The source file path to upload from",
                  args: { name: "source" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--destination-path", "-d"],
                  description:
                    "The upload destination directory path. It should be an absolute path to file system. If the specified destination path does not exist, a new directory path will be created",
                  args: { name: "destination-path" },
                },
                {
                  name: ["--recursive", "-r"],
                  description:
                    "Recursively upload files. If enabled, all the files including the files in subdirectories will be uploaded",
                  args: { name: "recursive" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "metadata",
              description: "Manage the metadata for directory in file system",
              subcommands: [
                {
                  name: "show",
                  description:
                    "Return all user-defined metadata for the specified directory",
                  options: [
                    {
                      name: ["--file-system", "-f"],
                      description: "File system name (i.e. container name)",
                      args: { name: "file-system" },
                      isRequired: true,
                    },
                    {
                      name: ["--name", "-n"],
                      description: "The name of directory",
                      args: { name: "name" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
                {
                  name: "update",
                  description:
                    "Sets one or more user-defined name-value pairs for the specified file system",
                  options: [
                    {
                      name: ["--file-system", "-f"],
                      description: "File system name (i.e. container name)",
                      args: { name: "file-system" },
                      isRequired: true,
                    },
                    {
                      name: "--metadata",
                      description:
                        "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                      args: { name: "metadata" },
                      isRequired: true,
                    },
                    {
                      name: ["--name", "-n"],
                      description: "The name of directory",
                      args: { name: "name" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "file",
          description: "Manage files in Azure Data Lake Storage Gen2 account",
          subcommands: [
            {
              name: "append",
              description: "Append content to a file in ADLS Gen2 file system",
              options: [
                {
                  name: "--content",
                  description: "Content to be appended to file",
                  args: { name: "content" },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "create",
              description: "Create a new file in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--content-cache-control", "--content-cache"],
                  description: "The cache control string",
                  args: { name: "content-cache-control" },
                },
                {
                  name: "--content-disposition",
                  description:
                    "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
                  args: { name: "content-disposition" },
                },
                {
                  name: "--content-encoding",
                  description: "The content encoding type",
                  args: { name: "content-encoding" },
                },
                {
                  name: "--content-language",
                  description: "The content language",
                  args: { name: "content-language" },
                },
                {
                  name: "--content-md5",
                  description: "The content's MD5 hash",
                  args: { name: "content-md5" },
                },
                {
                  name: "--content-type",
                  description: "The content MIME type",
                  args: { name: "content-type" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--permissions",
                  description:
                    "POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read (4), write (2), or execute (1) permission. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. The sticky bit is also supported and in symbolic notation, its represented either by the letter t or T in the final character-place depending on whether the execution bit for the others category is set or unset respectively (e.g. rwxrw-rw- with sticky bit is represented as rwxrw-rwT. A rwxrw-rwx with sticky bit is represented as rwxrw-rwt), absence of t or T indicates sticky bit not set. In 4-digit octal notation, its represented by 1st digit (e.g. 1766 represents rwxrw-rw- with sticky bit and 0766 represents rwxrw-rw- without sticky bit). For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#levels-of-permission",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--umask",
                  description:
                    "When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created. The resulting permission is given by p & ^u, where p is the permission and u is the umask. For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#umask",
                  args: { name: "umask" },
                },
              ],
            },
            {
              name: "delete",
              description: "Delete a file in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: ["--yes", "-y"],
                  description: "Do not prompt for confirmation",
                },
              ],
            },
            {
              name: "download",
              description:
                "Download a file from the specified path in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--destination", "-d"],
                  description:
                    "The local file where the file or folder will be downloaded to. The source filename will be used if not specified",
                  args: { name: "destination" },
                },
                {
                  name: "--overwrite",
                  description:
                    "Overwrite an existing file when specified. Default value is false",
                  args: { name: "overwrite", suggestions: ["false", "true"] },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "exists",
              description:
                "Check for the existence of a file in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "list",
              description:
                "List files and directories in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--exclude-dir",
                  description: "List only files in the given file system",
                  args: { name: "exclude-dir" },
                },
                {
                  name: "--marker",
                  description:
                    "An opaque continuation token. This value can be retrieved from the next_marker field of a previous generator object. If specified, this generator will begin returning results from this point",
                  args: { name: "marker" },
                },
                {
                  name: "--num-results",
                  description:
                    "Specify the maximum number of results to return. If the request does not specify num_results or specifies a value greater than 5,000, the server will return up to 5,000 items",
                  args: { name: "num-results" },
                },
                {
                  name: "--path",
                  description:
                    "Filter the results to return only paths under the specified path",
                  args: { name: "path" },
                },
                {
                  name: "--recursive",
                  description:
                    "Look into sub-directories recursively when set to true",
                  args: { name: "recursive", suggestions: ["false", "true"] },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--show-next-marker",
                  description: "Show nextMarker in result when specified",
                  args: { name: "show-next-marker" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "move",
              description: "Move a file in ADLS Gen2 Account",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: "--new-path",
                  description:
                    'The new path the users want to move to. The value must have the following format: "{filesystem}/{directory}/{subdirectory}/{file}"',
                  args: { name: "new-path" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description:
                    "The original file path users want to move in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--content-cache-control", "--content-cache"],
                  description: "The cache control string",
                  args: { name: "content-cache-control" },
                },
                {
                  name: "--content-disposition",
                  description:
                    "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
                  args: { name: "content-disposition" },
                },
                {
                  name: "--content-encoding",
                  description: "The content encoding type",
                  args: { name: "content-encoding" },
                },
                {
                  name: "--content-language",
                  description: "The content language",
                  args: { name: "content-language" },
                },
                {
                  name: "--content-md5",
                  description: "The content's MD5 hash",
                  args: { name: "content-md5" },
                },
                {
                  name: "--content-type",
                  description: "The content MIME type",
                  args: { name: "content-type" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "set-expiry",
              description: "Sets the time a file will expire and be deleted",
              options: [
                {
                  name: "--expiry-options",
                  description:
                    "Required. Indicates mode of the expiry time. Possible values include: 'NeverExpire', 'RelativeToCreation', 'RelativeToNow', 'Absolute'",
                  args: {
                    name: "expiry-options",
                    suggestions: [
                      "Absolute",
                      "NeverExpire",
                      "RelativeToCreation",
                      "RelativeToNow",
                    ],
                  },
                  isRequired: true,
                },
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expires-on",
                  description:
                    "The time to set the file to expiry. When expiry_options is RelativeTo*, expires_on should be an int in milliseconds. If the type of expires_on is datetime, it should be in UTC time",
                  args: { name: "expires-on" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "show",
              description: "Show properties of file in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "upload",
              description:
                "Upload a file to a file path in ADLS Gen2 file system",
              options: [
                {
                  name: ["--file-system", "-f"],
                  description: "File system name (i.e. container name)",
                  args: { name: "file-system" },
                  isRequired: true,
                },
                {
                  name: ["--path", "-p"],
                  description: "The file path in a file system",
                  args: { name: "path" },
                  isRequired: true,
                },
                {
                  name: ["--source", "-s"],
                  description:
                    "Path of the local file to upload as the file content",
                  args: { name: "source" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: ["--content-cache-control", "--content-cache"],
                  description: "The cache control string",
                  args: { name: "content-cache-control" },
                },
                {
                  name: "--content-disposition",
                  description:
                    "Conveys additional information about how to process the response payload, and can also be used to attach additional metadata",
                  args: { name: "content-disposition" },
                },
                {
                  name: "--content-encoding",
                  description: "The content encoding type",
                  args: { name: "content-encoding" },
                },
                {
                  name: "--content-language",
                  description: "The content language",
                  args: { name: "content-language" },
                },
                {
                  name: "--content-md5",
                  description: "The content's MD5 hash",
                  args: { name: "content-md5" },
                },
                {
                  name: "--content-type",
                  description: "The content MIME type",
                  args: { name: "content-type" },
                },
                {
                  name: "--if-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified",
                  args: { name: "if-match" },
                },
                {
                  name: "--if-modified-since",
                  description:
                    "A Commence only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-modified-since" },
                },
                {
                  name: "--if-none-match",
                  description:
                    "An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag does not match the value specified",
                  args: { name: "if-none-match" },
                },
                {
                  name: "--if-unmodified-since",
                  description:
                    "A Commence only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z')",
                  args: { name: "if-unmodified-since" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--overwrite",
                  description: "Overwrite an existing file when specified",
                  args: { name: "overwrite", suggestions: ["false", "true"] },
                },
                {
                  name: "--permissions",
                  description:
                    "POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read (4), write (2), or execute (1) permission. Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. The sticky bit is also supported and in symbolic notation, its represented either by the letter t or T in the final character-place depending on whether the execution bit for the others category is set or unset respectively (e.g. rwxrw-rw- with sticky bit is represented as rwxrw-rwT. A rwxrw-rwx with sticky bit is represented as rwxrw-rwt), absence of t or T indicates sticky bit not set. In 4-digit octal notation, its represented by 1st digit (e.g. 1766 represents rwxrw-rw- with sticky bit and 0766 represents rwxrw-rw- without sticky bit). For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#levels-of-permission",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
                {
                  name: "--umask",
                  description:
                    "When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created. The resulting permission is given by p & ^u, where p is the permission and u is the umask. For more information, please refer to https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-access-control#umask",
                  args: { name: "umask" },
                },
              ],
            },
            {
              name: "metadata",
              description: "Manage the metadata for file in file system",
              subcommands: [
                {
                  name: "show",
                  description:
                    "Return all user-defined metadata for the specified file",
                  options: [
                    {
                      name: ["--file-system", "-f"],
                      description: "File system name (i.e. container name)",
                      args: { name: "file-system" },
                      isRequired: true,
                    },
                    {
                      name: ["--path", "-p"],
                      description: "The file path in a file system",
                      args: { name: "path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
                {
                  name: "update",
                  description:
                    "Sets one or more user-defined name-value pairs for the specified file system",
                  options: [
                    {
                      name: ["--file-system", "-f"],
                      description: "File system name (i.e. container name)",
                      args: { name: "file-system" },
                      isRequired: true,
                    },
                    {
                      name: "--metadata",
                      description:
                        "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                      args: { name: "metadata" },
                      isRequired: true,
                    },
                    {
                      name: ["--path", "-p"],
                      description: "The file path in a file system",
                      args: { name: "path" },
                      isRequired: true,
                    },
                    {
                      name: "--account-key",
                      description:
                        "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                      args: { name: "account-key" },
                    },
                    {
                      name: "--account-name",
                      description:
                        "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                      args: { name: "account-name" },
                    },
                    {
                      name: "--auth-mode",
                      description:
                        'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                      args: {
                        name: "auth-mode",
                        suggestions: ["key", "login"],
                      },
                    },
                    {
                      name: "--blob-endpoint",
                      description:
                        "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                      args: { name: "blob-endpoint" },
                    },
                    {
                      name: "--connection-string",
                      description:
                        "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                      args: { name: "connection-string" },
                    },
                    {
                      name: "--sas-token",
                      description:
                        "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                      args: { name: "sas-token" },
                    },
                    {
                      name: "--timeout",
                      description:
                        "Request timeout in seconds. Applies to each call to the service",
                      args: { name: "timeout" },
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage the metadata for file system",
          subcommands: [
            {
              name: "show",
              description:
                "Return all user-defined metadata for the specified file system",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "File system name (i.e. container name)",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Sets one or more user-defined name-value pairs for the specified file system",
              options: [
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                  isRequired: true,
                },
                {
                  name: ["--name", "-n"],
                  description: "File system name (i.e. container name)",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "service-properties",
          description: "Manage storage datalake service properties",
          subcommands: [
            {
              name: "show",
              description:
                "Show the properties of a storage account's datalake service, including Azure Storage Analytics",
              options: [
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Update the properties of a storage account's datalake service, including Azure Storage Analytics",
              options: [
                {
                  name: "--404-document",
                  description:
                    "Represent the path to the error document that should be shown when an error 404 is issued, in other words, when a browser requests a page that does not exist",
                  args: { name: "404-document" },
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--blob-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "blob-endpoint" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--delete-retention",
                  description: "Enable soft-delete",
                  args: {
                    name: "delete-retention",
                    suggestions: ["false", "true"],
                  },
                },
                {
                  name: ["--delete-retention-period", "--period"],
                  description:
                    "Number of days that soft-deleted fs will be retained. Must be in range [1,365]",
                  args: { name: "delete-retention-period" },
                },
                {
                  name: "--index-document",
                  description:
                    'Represent the name of the index document. This is commonly "index.html"',
                  args: { name: "index-document" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--static-website",
                  description: "Enable static-website",
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "logging",
      description: "Manage storage service logging information",
      subcommands: [
        {
          name: "off",
          description: "Turn off logging for a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--services",
              description:
                "The storage services from which to retrieve logging info: (b)lob (q)ueue (t)able. Can be combined",
              args: { name: "services" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description: "Show logging settings for a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--services",
              description:
                "The storage services from which to retrieve logging info: (b)lob (q)ueue (t)able. Can be combined",
              args: { name: "services" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Update logging settings for a storage account",
          options: [
            {
              name: "--log",
              description:
                "The operations for which to enable logging: (r)ead (w)rite (d)elete. Can be combined",
              args: { name: "log" },
              isRequired: true,
            },
            {
              name: "--retention",
              description:
                "Number of days for which to retain logs. 0 to disable",
              args: { name: "retention" },
              isRequired: true,
            },
            {
              name: "--services",
              description:
                "The storage service(s) for which to update logging info: (b)lob (q)ueue (t)able. Can be combined",
              args: { name: "services" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--version",
              description: "Version of the logging schema",
              args: { name: "version" },
            },
          ],
        },
      ],
    },
    {
      name: "message",
      description:
        "Manage queue storage messages.\n\n\t\tPlease specify one of the following authentication parameters for your commands: --auth-mode, --account-key, --connection-string, --sas-token. You also can use corresponding environment variables to store your authentication credentials, e.g. AZURE_STORAGE_KEY, AZURE_STORAGE_CONNECTION_STRING and AZURE_STORAGE_SAS_TOKEN",
      subcommands: [
        {
          name: "clear",
          description: "Delete all messages from the specified queue",
          options: [
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete the specified message",
          options: [
            {
              name: "--id",
              description: "The message id identifying the message to delete",
              args: { name: "id" },
              isRequired: true,
            },
            {
              name: "--pop-receipt",
              description:
                "A valid pop receipt value returned from an earlier call to the :func:~get_messages or :func:~update_message operation",
              args: { name: "pop-receipt" },
              isRequired: true,
            },
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "get",
          description:
            "Retrieve one or more messages from the front of the queue",
          options: [
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--num-messages",
              description:
                "A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation",
              args: { name: "num-messages" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--visibility-timeout",
              description:
                "Specify the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 1 second, and cannot be larger than 7 days. The visibility timeout of a message can be set to a value later than the expiry time",
              args: { name: "visibility-timeout" },
            },
          ],
        },
        {
          name: "peek",
          description:
            "Retrieve one or more messages from the front of the queue, but do not alter the visibility of the message",
          options: [
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--num-messages",
              description:
                "A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32. By default, a single message is peeked from the queue with this operation",
              args: { name: "num-messages" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "put",
          description: "Add a new message to the back of the message queue",
          options: [
            {
              name: "--content",
              description: "Message content, up to 64KB in size",
              args: { name: "content" },
              isRequired: true,
            },
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--time-to-live",
              description:
                "Specify the time-to-live interval for the message, in seconds. The time-to-live may be any positive number or -1 for infinity. If this parameter is omitted, the default time-to-live is 7 days",
              args: { name: "time-to-live" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--visibility-timeout",
              description:
                "If not specified, the default value is 0. Specify the new visibility timeout value, in seconds, relative to server time. The value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the expiry time. visibility_timeout should be set to a value smaller than the time_to_live value",
              args: { name: "visibility-timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Update the visibility timeout of a message",
          options: [
            {
              name: "--id",
              description: "The message id identifying the message to delete",
              args: { name: "id" },
              isRequired: true,
            },
            {
              name: "--pop-receipt",
              description:
                "A valid pop receipt value returned from an earlier call to the :func:~get_messages or :func:~update_message operation",
              args: { name: "pop-receipt" },
              isRequired: true,
            },
            {
              name: ["--queue-name", "-q"],
              description: "The queue name",
              args: { name: "queue-name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--content",
              description: "Message content, up to 64KB in size",
              args: { name: "content" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
            {
              name: "--visibility-timeout",
              description:
                "If not specified, the default value is 0. Specify the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the expiry time. A message can be updated until it has been deleted or has expired",
              args: { name: "visibility-timeout" },
            },
          ],
        },
      ],
    },
    {
      name: "metrics",
      description: "Manage storage service metrics",
      subcommands: [
        {
          name: "show",
          description: "Show metrics settings for a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--interval",
              description:
                "Filter the set of metrics to retrieve by time interval",
              args: {
                name: "interval",
                suggestions: ["both", "hour", "minute"],
              },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--services",
              description:
                "The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined",
              args: { name: "services" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Update metrics settings for a storage account",
          options: [
            {
              name: "--retention",
              description:
                "Number of days for which to retain metrics. 0 to disable. Applies to both hour and minute metrics if both are specified",
              args: { name: "retention" },
              isRequired: true,
            },
            {
              name: "--services",
              description:
                "The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined",
              args: { name: "services" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--api",
              description:
                "Specify whether to include API in metrics. Applies to both hour and minute metrics if both are specified. Must be specified if hour or minute metrics are enabled and being updated",
              args: { name: "api", suggestions: ["false", "true"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--hour",
              description: "Update the hourly metrics",
              args: { name: "hour", suggestions: ["false", "true"] },
            },
            {
              name: "--minute",
              description: "Update the by-minute metrics",
              args: { name: "minute", suggestions: ["false", "true"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
      ],
    },
    {
      name: "queue",
      description: "Manage storage queues",
      subcommands: [
        {
          name: "create",
          description: "Create a queue under the given account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The queue name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-on-exist",
              description:
                "Specify whether to throw an exception if the queue already exists",
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description:
            "Delete the specified queue and any messages it contains",
          options: [
            {
              name: ["--name", "-n"],
              description: "The queue name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-not-exist",
              description:
                "Specify whether to throw an exception if the queue doesn't exist",
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "exists",
          description: "Return a boolean indicating whether the queue exists",
          options: [
            {
              name: ["--name", "-n"],
              description: "The queue name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "generate-sas",
          description:
            "Generate a shared access signature for the queue.Use the returned signature with the sas_token parameter of QueueService",
          options: [
            {
              name: ["--name", "-n"],
              description: "The queue name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (a)dd (p)rocess (r)ead (u)pdate. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the share's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
          ],
        },
        {
          name: "list",
          description: "List queues in a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--include-metadata",
              description:
                "Specify that queue metadata be returned in the response",
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description:
                'Specify the maximum number to return. If the request does not specify num_results, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remaining of the results. Provide "*" to return all',
              args: { name: "num-results" },
            },
            {
              name: "--prefix",
              description:
                "Filter the results to return only queues whose names begin with the specified prefix",
              args: { name: "prefix" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--show-next-marker",
              description: "Show nextMarker in result when specified",
              args: { name: "show-next-marker" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "stats",
          description:
            "Retrieve statistics related to replication for the Queue service. It is only available when read-access geo-redundant replication is enabled for the storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--queue-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "queue-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "metadata",
          description: "Manage the metadata for a storage queue",
          subcommands: [
            {
              name: "show",
              description:
                "Return all user-defined metadata for the specified queue",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The queue name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description: "Set user-defined metadata on the specified queue",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The queue name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--auth-mode",
                  description:
                    'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
                  args: { name: "auth-mode", suggestions: ["key", "login"] },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "policy",
          description: "Manage shared access policies for a storage queue",
          subcommands: [
            {
              name: "create",
              description:
                "Create a stored access policy on the containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--queue-name", "-q"],
                  description: "The queue name",
                  args: { name: "queue-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (a)dd (p)rocess (r)ead (u)pdate. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--queue-name", "-q"],
                  description: "The queue name",
                  args: { name: "queue-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "list",
              description: "List stored access policies on a containing object",
              options: [
                {
                  name: ["--queue-name", "-q"],
                  description: "The queue name",
                  args: { name: "queue-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "show",
              description: "Show a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--queue-name", "-q"],
                  description: "The queue name",
                  args: { name: "queue-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update",
              description: "Set a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--queue-name", "-q"],
                  description: "The queue name",
                  args: { name: "queue-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (a)dd (p)rocess (r)ead (u)pdate. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--queue-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "queue-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "share",
      description: "Manage file shares",
      subcommands: [
        {
          name: "close-handle",
          description: "Close file handles of a file share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--close-all",
              description:
                "Whether or not to close all the file handles. Specify close-all or a specific handle-id",
              args: { name: "close-all", suggestions: ["false", "true"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--handle-id",
              description:
                "Specifies handle ID opened on the file or directory to be closed. Astrix (‘*’) is a wildcard that specifies all handles",
              args: { name: "handle-id" },
            },
            {
              name: ["--path", "-p"],
              description:
                "The path to the file/directory within the file share",
              args: { name: "path" },
            },
            {
              name: "--recursive",
              description:
                "Boolean that specifies if operation should apply to the directory specified in the URI, its files, with its subdirectories and their files",
              args: { name: "recursive", suggestions: ["false", "true"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "create",
          description: "Creates a new share under the specified account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-on-exist",
              description:
                "Specify whether to throw an exception when the share exists. False by default",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--quota",
              description:
                "Specifies the maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120)",
              args: { name: "quota" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "delete",
          description: "Mark the specified share for deletion",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--delete-snapshots",
              description:
                "Specify the deletion strategy when the share has snapshots",
              args: { name: "delete-snapshots", suggestions: ["include"] },
            },
            {
              name: "--fail-not-exist",
              description:
                "Specify whether to throw an exception when the share doesn't exists. False by default",
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable.Specify this argument to delete a specific snapshot only. delete_snapshots must be None if this is specified",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of a file share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "generate-sas",
          description: "Generate a shared access signature for the share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--cache-control",
              description:
                "Response header value for Cache-Control when resource is accessed using this shared access signature",
              args: { name: "cache-control" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--content-disposition",
              description:
                "Response header value for Content-Disposition when resource is accessed using this shared access signature",
              args: { name: "content-disposition" },
            },
            {
              name: "--content-encoding",
              description:
                "Response header value for Content-Encoding when resource is accessed using this shared access signature",
              args: { name: "content-encoding" },
            },
            {
              name: "--content-language",
              description:
                "Response header value for Content-Language when resource is accessed using this shared access signature",
              args: { name: "content-language" },
            },
            {
              name: "--content-type",
              description:
                "Response header value for Content-Type when resource is accessed using this shared access signature",
              args: { name: "content-type" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (c)reate (d)elete (l)ist (r)ead (w)rite. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the share's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
          ],
        },
        {
          name: "list",
          description: "List the file shares in a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--include-metadata",
              description:
                "Specifies that share metadata be returned in the response",
            },
            {
              name: "--include-snapshots",
              description:
                "Specifies that share snapshots be returned in the response",
            },
            {
              name: "--marker",
              description:
                "An opaque continuation token. This value can be retrieved from the next_marker field of a previous generator object if num_results was specified and that generator has finished enumerating results. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description:
                'Specify the maximum number to return. If the request does not specify num_results, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remaining of the results. Provide "*" to return all',
              args: { name: "num-results" },
            },
            {
              name: "--prefix",
              description:
                "Filter the results to return only blobs whose name begins with the specified prefix",
              args: { name: "prefix" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "list-handle",
          description: "List file handles of a file share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: ["--enable-file-backup-request-intent", "--backup-intent"],
              description:
                "Required parameter to use with OAuth (Azure AD) Authentication for Files. This will bypass any file/directory level permission checks and allow access, based on the allowed data actions, even if there are ACLs in place for those files/directories",
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--marker",
              description:
                "An opaque continuation token. This value can be retrieved from the next_marker field of a previous generator object if max_results was specified and that generator has finished enumerating results. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--max-results",
              description:
                "Specifies the maximum number of handles taken on files and/or directories to return. If the request does not specify max_results or specifies a value greater than 5,000, the server will return up to 5,000 items. Setting max_results to a value less than or equal to zero results in error response code 400 (Bad Request)",
              args: { name: "max-results" },
            },
            {
              name: ["--path", "-p"],
              description:
                "The path to the file/directory within the file share",
              args: { name: "path" },
            },
            {
              name: "--recursive",
              description:
                "Boolean that specifies if operation should apply to the directory specified in the URI, its files, with its subdirectories and their files",
              args: { name: "recursive", suggestions: ["false", "true"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "show",
          description:
            "Return all user-defined metadata and system properties for the specified share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--snapshot",
              description:
                "A string that represents the snapshot version, if applicable",
              args: { name: "snapshot" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "snapshot",
          description:
            "Create a snapshot of an existing share under the specified account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: "--quota",
              description:
                "Specifies the maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5 TB (5120 GB)",
              args: { name: "quota" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "stats",
          description:
            "Get the approximate size of the data stored on the share, rounded up to the nearest gigabyte",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "update",
          description: "Set service-defined properties for the specified share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--quota",
              description:
                "Specifies the maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5 TB (5120 GB)",
              args: { name: "quota" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--timeout",
              description:
                "Request timeout in seconds. Applies to each call to the service",
              args: { name: "timeout" },
            },
          ],
        },
        {
          name: "url",
          description: "Create a URI to access a file share",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--file-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "file-endpoint" },
            },
            {
              name: "--protocol",
              description: "Protocol to use",
              args: { name: "protocol", suggestions: ["http", "https"] },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            { name: "--unc", description: "Output UNC network path" },
          ],
        },
        {
          name: "metadata",
          description: "Manage the metadata of a file share",
          subcommands: [
            {
              name: "show",
              description:
                "Return all user-defined metadata for the specified share",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The file share name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--snapshot",
                  description:
                    "A string that represents the snapshot version, if applicable",
                  args: { name: "snapshot" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
            {
              name: "update",
              description:
                "Set one or more user-defined name-value pairs for the specified share",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The file share name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--metadata",
                  description:
                    "Metadata in space-separated key=value pairs. This overwrites any existing metadata",
                  args: { name: "metadata" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--timeout",
                  description:
                    "Request timeout in seconds. Applies to each call to the service",
                  args: { name: "timeout" },
                },
              ],
            },
          ],
        },
        {
          name: "policy",
          description: "Manage shared access policies of a storage file share",
          subcommands: [
            {
              name: "create",
              description:
                "Create a stored access policy on the containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (c)reate (d)elete (l)ist (r)ead (w)rite. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "list",
              description: "List stored access policies on a containing object",
              options: [
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "show",
              description: "Show a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
              ],
            },
            {
              name: "update",
              description: "Set a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--share-name", "-s"],
                  description: "The file share name",
                  args: { name: "share-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--file-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "file-endpoint" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (c)reate (d)elete (l)ist (r)ead (w)rite. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
              ],
            },
          ],
        },
      ],
    },
    {
      name: "share-rm",
      description:
        "Manage Azure file shares using the Microsoft.Storage resource provider",
      subcommands: [
        {
          name: "create",
          description:
            "Create a new Azure file share under the specified storage account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
              isRequired: true,
            },
            {
              name: "--access-tier",
              description:
                "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium",
              args: {
                name: "access-tier",
                suggestions: ["Cool", "Hot", "Premium", "TransactionOptimized"],
              },
            },
            {
              name: "--enabled-protocols",
              description:
                "Immutable property for file shares protocol. NFS protocol will be only available for premium file shares (file shares in the FileStorage account type)",
              args: { name: "enabled-protocols", suggestions: ["NFS", "SMB"] },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs that is associated with the share. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--quota", "-q"],
              description:
                "The maximum size of the share in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400",
              args: { name: "quota" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--root-squash",
              description:
                "Reduction of the access rights for the remote superuser",
              args: {
                name: "root-squash",
                suggestions: ["AllSquash", "NoRootSquash", "RootSquash"],
              },
            },
          ],
        },
        {
          name: "delete",
          description:
            "Delete the specified Azure file share or share snapshot",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--include",
              description:
                "Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. Default value is None",
              args: { name: "include" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--snapshot",
              description:
                "The DateTime value that specifies the share snapshot to retrieve",
              args: { name: "snapshot" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
            {
              name: ["--yes", "-y"],
              description: "Do not prompt for confirmation",
            },
          ],
        },
        {
          name: "exists",
          description: "Check for the existence of an Azure file share",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "list",
          description:
            "List the Azure file shares under the specified storage account",
          options: [
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
              isRequired: true,
            },
            {
              name: "--include-deleted",
              description: "Include soft deleted file shares when specified",
              args: { name: "include-deleted" },
            },
            {
              name: "--include-snapshot",
              description: "Include file share snapshots when specified",
              args: { name: "include-snapshot" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
          ],
        },
        {
          name: "restore",
          description:
            "Restore a file share within a valid retention days if share soft delete is enabled",
          options: [
            {
              name: "--deleted-version",
              description:
                "Identify the version of the deleted share that will be restored",
              args: { name: "deleted-version" },
              isRequired: true,
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description:
                "The file share name. Identify the name of the deleted share that will be restored",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--restored-name",
              description:
                "A new file share name to be restored. If not specified, deleted share name will be used",
              args: { name: "restored-name" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "show",
          description:
            "Show the properties for a specified Azure file share or share snapshot",
          options: [
            {
              name: "--expand",
              description:
                "Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. Default value is None",
              args: { name: "expand" },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--snapshot",
              description:
                "The DateTime value that specifies the share snapshot to retrieve",
              args: { name: "snapshot" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "snapshot",
          description:
            "Create a snapshot of an existing share under the specified account",
          options: [
            {
              name: "--access-tier",
              description:
                "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium",
              args: {
                name: "access-tier",
                suggestions: ["Cool", "Hot", "Premium", "TransactionOptimized"],
              },
            },
            {
              name: "--enabled-protocols",
              description:
                "Immutable property for file shares protocol. NFS protocol will be only available for premium file shares (file shares in the FileStorage account type)",
              args: { name: "enabled-protocols", suggestions: ["NFS", "SMB"] },
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs that is associated with the share. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--quota", "-q"],
              description:
                "The maximum size of the share in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400",
              args: { name: "quota" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--root-squash",
              description:
                "Reduction of the access rights for the remote superuser",
              args: {
                name: "root-squash",
                suggestions: ["AllSquash", "NoRootSquash", "RootSquash"],
              },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "stats",
          description: "Get the usage bytes of the data stored on the share",
          options: [
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
        {
          name: "update",
          description: "Update the properties for an Azure file share",
          options: [
            {
              name: "--access-tier",
              description:
                "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium",
              args: {
                name: "access-tier",
                suggestions: ["Cool", "Hot", "Premium", "TransactionOptimized"],
              },
            },
            {
              name: "--add",
              description:
                "Add an object to a list of objects by specifying a path and key value pairs. Example: --add property.listProperty <key=value, string or JSON string>",
              args: { name: "add" },
            },
            {
              name: "--force-string",
              description:
                "When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON",
            },
            {
              name: "--ids",
              description:
                "One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments",
              args: { name: "ids" },
            },
            {
              name: "--metadata",
              description:
                "Metadata in space-separated key=value pairs that is associated with the share. This overwrites any existing metadata",
              args: { name: "metadata" },
            },
            {
              name: ["--name", "-n"],
              description: "The file share name",
              args: { name: "name" },
            },
            {
              name: ["--quota", "-q"],
              description:
                "The maximum size of the share in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400",
              args: { name: "quota" },
            },
            {
              name: "--remove",
              description:
                "Remove a property or an element from a list. Example: --remove property.list OR --remove propertyToRemove",
              args: { name: "remove" },
            },
            {
              name: ["--resource-group", "-g"],
              description:
                "Name of resource group. You can configure the default group using az configure --defaults group=<name>",
              args: { name: "resource-group" },
            },
            {
              name: "--root-squash",
              description:
                "Reduction of the access rights for the remote superuser",
              args: {
                name: "root-squash",
                suggestions: ["AllSquash", "NoRootSquash", "RootSquash"],
              },
            },
            {
              name: "--set",
              description:
                "Update an object by specifying a property path and value to set. Example: --set property1.property2=",
              args: { name: "set" },
            },
            {
              name: "--storage-account",
              description: "The name or ID of the storage account",
              args: { name: "storage-account" },
            },
            {
              name: "--subscription",
              description:
                "Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID",
              args: { name: "subscription" },
            },
          ],
        },
      ],
    },
    {
      name: "table",
      description: "Manage NoSQL key-value storage",
      subcommands: [
        {
          name: "create",
          description: "Create a new table in the storage account",
          options: [
            {
              name: ["--name", "-n"],
              description: "The table name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-on-exist",
              description: "Throw an exception if the table already exists",
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "delete",
          description: "Delete the specified table and any data it contains",
          options: [
            {
              name: ["--name", "-n"],
              description: "The table name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--fail-not-exist",
              description: "Throw an exception if the table does not exist",
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "exists",
          description: "Return a boolean indicating whether the table exists",
          options: [
            {
              name: ["--name", "-n"],
              description: "The table name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "generate-sas",
          description: "Generate a shared access signature for the table",
          options: [
            {
              name: ["--name", "-n"],
              description: "The table name",
              args: { name: "name" },
              isRequired: true,
            },
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--end-pk",
              description:
                "The maximum partition key accessible with this shared access signature. endpk must accompany endrk. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed",
              args: { name: "end-pk" },
            },
            {
              name: "--end-rk",
              description:
                "The maximum row key accessible with this shared access signature. endpk must accompany endrk. Key values are inclusive. If omitted, there is no upper bound on the table entities that can be accessed",
              args: { name: "end-rk" },
            },
            {
              name: "--expiry",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid. Do not use if a stored access policy is referenced with --policy-name that specifies this value",
              args: { name: "expiry" },
            },
            {
              name: "--https-only",
              description:
                "Only permit requests made with the HTTPS protocol. If omitted, requests from both the HTTP and HTTPS protocol are permitted",
              args: { name: "https-only" },
            },
            {
              name: "--ip",
              description:
                "Specifies the IP address or range of IP addresses from which to accept requests. Supports only IPv4 style addresses",
              args: { name: "ip" },
            },
            {
              name: "--permissions",
              description:
                "The permissions the SAS grants. Allowed values: (r)ead/query (a)dd (u)pdate (d)elete. Do not use if a stored access policy is referenced with --id that specifies this value. Can be combined",
              args: { name: "permissions" },
            },
            {
              name: "--policy-name",
              description:
                "The name of a stored access policy within the table's ACL",
              args: { name: "policy-name" },
            },
            {
              name: "--start",
              description:
                "Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Do not use if a stored access policy is referenced with --policy-name that specifies this value. Defaults to the time of the request",
              args: { name: "start" },
            },
            {
              name: "--start-pk",
              description:
                "The minimum partition key accessible with this shared access signature. startpk must accompany startrk. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed",
              args: { name: "start-pk" },
            },
            {
              name: "--start-rk",
              description:
                "The minimum row key accessible with this shared access signature. startpk must accompany startrk. Key values are inclusive. If omitted, there is no lower bound on the table entities that can be accessed",
              args: { name: "start-rk" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "list",
          description: "List tables in a storage account",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--marker",
              description:
                "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. If specified, this generator will begin returning results from the point where the previous generator stopped",
              args: { name: "marker" },
            },
            {
              name: "--num-results",
              description: "The maximum number of tables to return",
              args: { name: "num-results" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--show-next-marker",
              description: "Show nextMarker in result when specified",
              args: { name: "show-next-marker" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "stats",
          description:
            "Retrieves statistics related to replication for the Table service",
          options: [
            {
              name: "--account-key",
              description:
                "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
              args: { name: "account-key" },
            },
            {
              name: "--account-name",
              description:
                "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
              args: { name: "account-name" },
            },
            {
              name: "--auth-mode",
              description:
                'The mode in which to run the command. "login" mode will directly use your login credentials for the authentication. The legacy "key" mode will attempt to query for an account key if no authentication parameters for the account are provided. Environment variable: AZURE_STORAGE_AUTH_MODE',
              args: { name: "auth-mode", suggestions: ["key", "login"] },
            },
            {
              name: "--connection-string",
              description:
                "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
              args: { name: "connection-string" },
            },
            {
              name: "--sas-token",
              description:
                "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
              args: { name: "sas-token" },
            },
            {
              name: "--table-endpoint",
              description:
                "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
              args: { name: "table-endpoint" },
            },
          ],
        },
        {
          name: "policy",
          description: "Manage shared access policies of a storage table",
          subcommands: [
            {
              name: "create",
              description:
                "Create a stored access policy on the containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--table-name", "-t"],
                  description: "The table name",
                  args: { name: "table-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (r)ead/query (a)dd (u)pdate (d)elete. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
                {
                  name: "--table-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "table-endpoint" },
                },
              ],
            },
            {
              name: "delete",
              description:
                "Delete a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--table-name", "-t"],
                  description: "The table name",
                  args: { name: "table-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--table-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "table-endpoint" },
                },
              ],
            },
            {
              name: "list",
              description: "List stored access policies on a containing object",
              options: [
                {
                  name: ["--table-name", "-t"],
                  description: "The table name",
                  args: { name: "table-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--table-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "table-endpoint" },
                },
              ],
            },
            {
              name: "show",
              description: "Show a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--table-name", "-t"],
                  description: "The table name",
                  args: { name: "table-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--table-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "table-endpoint" },
                },
              ],
            },
            {
              name: "update",
              description: "Set a stored access policy on a containing object",
              options: [
                {
                  name: ["--name", "-n"],
                  description: "The stored access policy name",
                  args: { name: "name" },
                  isRequired: true,
                },
                {
                  name: ["--table-name", "-t"],
                  description: "The table name",
                  args: { name: "table-name" },
                  isRequired: true,
                },
                {
                  name: "--account-key",
                  description:
                    "Storage account key. Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_KEY",
                  args: { name: "account-key" },
                },
                {
                  name: "--account-name",
                  description:
                    "Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit",
                  args: { name: "account-name" },
                },
                {
                  name: "--connection-string",
                  description:
                    "Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING",
                  args: { name: "connection-string" },
                },
                {
                  name: "--expiry",
                  description: "Expiration UTC datetime in (Y-m-d'T'H:M:S'Z')",
                  args: { name: "expiry" },
                },
                {
                  name: "--permissions",
                  description:
                    "Allowed values: (r)ead/query (a)dd (u)pdate (d)elete. Can be combined",
                  args: { name: "permissions" },
                },
                {
                  name: "--sas-token",
                  description:
                    "A Shared Access Signature (SAS). Must be used in conjunction with storage account name or service endpoint. Environment variable: AZURE_STORAGE_SAS_TOKEN",
                  args: { name: "sas-token" },
                },
                {
                  name: "--start",
                  description:
                    "Start UTC datetime (Y-m-d'T'H:M:S'Z'). Defaults to time of request",
                  args: { name: "start" },
                },
                {
                  name: "--table-endpoint",
                  description:
                    "Storage data service endpoint. Must be used in conjunction with either storage account key or a SAS token. You can find each service primary endpoint with az storage account show. Environment variable: AZURE_STORAGE_SERVICE_ENDPOINT",
                  args: { name: "table-endpoint" },
                },
              ],
            },
          ],
        },
      ],
    },
  ],
};

export default completion;
